/*!
 * ai-in-browser
 * AI in browser
 *
 * @version v1.0.9
 * @author Balachandar Sureshkumar (bala-3890)
 * @contributors Kasthooriraja A (raja-6831)
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("crypto")):"function"==typeof define&&define.amd?define(["crypto"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).zohoai=t(e.require$$0)}(this,(function(e){"use strict";function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=t(e);function r(e,t,n,r,a,s,o){try{var i=e[s](o),u=i.value}catch(e){return void n(e)}i.done?t(u):Promise.resolve(u).then(r,a)}function a(e){return function(){var t=this,n=arguments;return new Promise((function(a,s){var o=e.apply(t,n);function i(e){r(o,a,s,i,u,"next",e)}function u(e){r(o,a,s,i,u,"throw",e)}i(void 0)}))}}function s(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return t&&o(e.prototype,t),n&&o(e,n),e}"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function u(e){var t={exports:{}};return e(t,t.exports),t.exports}var l=u((function(e){var t=function(e){var t,n=Object.prototype,r=n.hasOwnProperty,a="function"==typeof Symbol?Symbol:{},s=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",i=a.toStringTag||"@@toStringTag";function u(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,n){return e[t]=n}}function l(e,t,n,r){var a=t&&t.prototype instanceof m?t:m,s=Object.create(a.prototype),o=new S(r||[]);return s._invoke=function(e,t,n){var r=d;return function(a,s){if(r===h)throw new Error("Generator is already running");if(r===A){if("throw"===a)throw s;return k()}for(n.method=a,n.arg=s;;){var o=n.delegate;if(o){var i=v(o,n);if(i){if(i===g)continue;return i}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(r===d)throw r=A,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r=h;var u=c(e,t,n);if("normal"===u.type){if(r=n.done?A:p,u.arg===g)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r=A,n.method="throw",n.arg=u.arg)}}}(e,n,o),s}function c(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=l;var d="suspendedStart",p="suspendedYield",h="executing",A="completed",g={};function m(){}function f(){}function I(){}var y={};y[s]=function(){return this};var b=Object.getPrototypeOf,C=b&&b(b(T([])));C&&C!==n&&r.call(C,s)&&(y=C);var x=I.prototype=m.prototype=Object.create(y);function E(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function w(e,t){function n(a,s,o,i){var u=c(e[a],e,s);if("throw"!==u.type){var l=u.arg,d=l.value;return d&&"object"==typeof d&&r.call(d,"__await")?t.resolve(d.__await).then((function(e){n("next",e,o,i)}),(function(e){n("throw",e,o,i)})):t.resolve(d).then((function(e){l.value=e,o(l)}),(function(e){return n("throw",e,o,i)}))}i(u.arg)}var a;this._invoke=function(e,r){function s(){return new t((function(t,a){n(e,r,t,a)}))}return a=a?a.then(s,s):s()}}function v(e,n){var r=e.iterator[n.method];if(r===t){if(n.delegate=null,"throw"===n.method){if(e.iterator.return&&(n.method="return",n.arg=t,v(e,n),"throw"===n.method))return g;n.method="throw",n.arg=new TypeError("The iterator does not provide a 'throw' method")}return g}var a=c(r,e.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,g;var s=a.arg;return s?s.done?(n[e.resultName]=s.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,g):s:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function B(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function R(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function S(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(B,this),this.reset(!0)}function T(e){if(e){var n=e[s];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var a=-1,o=function n(){for(;++a<e.length;)if(r.call(e,a))return n.value=e[a],n.done=!1,n;return n.value=t,n.done=!0,n};return o.next=o}}return{next:k}}function k(){return{value:t,done:!0}}return f.prototype=x.constructor=I,I.constructor=f,f.displayName=u(I,i,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===f||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,I):(e.__proto__=I,u(e,i,"GeneratorFunction")),e.prototype=Object.create(x),e},e.awrap=function(e){return{__await:e}},E(w.prototype),w.prototype[o]=function(){return this},e.AsyncIterator=w,e.async=function(t,n,r,a,s){void 0===s&&(s=Promise);var o=new w(l(t,n,r,a),s);return e.isGeneratorFunction(n)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},E(x),u(x,i,"Generator"),x[s]=function(){return this},x.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var r=t.pop();if(r in e)return n.value=r,n.done=!1,n}return n.done=!0,n}},e.values=T,S.prototype={constructor:S,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(R),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function a(r,a){return i.type="throw",i.arg=e,n.next=r,a&&(n.method="next",n.arg=t),!!a}for(var s=this.tryEntries.length-1;s>=0;--s){var o=this.tryEntries[s],i=o.completion;if("root"===o.tryLoc)return a("end");if(o.tryLoc<=this.prev){var u=r.call(o,"catchLoc"),l=r.call(o,"finallyLoc");if(u&&l){if(this.prev<o.catchLoc)return a(o.catchLoc,!0);if(this.prev<o.finallyLoc)return a(o.finallyLoc)}else if(u){if(this.prev<o.catchLoc)return a(o.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return a(o.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var a=this.tryEntries[n];if(a.tryLoc<=this.prev&&r.call(a,"finallyLoc")&&this.prev<a.finallyLoc){var s=a;break}}s&&("break"===e||"continue"===e)&&s.tryLoc<=t&&t<=s.finallyLoc&&(s=null);var o=s?s.completion:{};return o.type=e,o.arg=t,s?(this.method="next",this.next=s.finallyLoc,g):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),R(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var a=r.arg;R(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:T(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=t}catch(e){Function("r","regeneratorRuntime = r")(t)}}));function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class d{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class p{refCount(e){return h("refCount")}incRef(e){return h("incRef")}timerAvailable(){return!0}time(e){return h("time")}read(e){return h("read")}readSync(e){return h("readSync")}numDataIds(){return h("numDataIds")}disposeData(e,t){return h("disposeData")}write(e,t,n){return h("write")}move(e,t,n,r,a){return h("move")}memory(){return h("memory")}floatPrecision(){return h("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return h("dispose")}}function h(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function A(e,t,n){return Math.max(e,Math.min(t,n))}function g(e){return e%2==0?e:e+1}function m(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function f(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function I(e,t,n=""){f(x(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function y(e){f(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function b(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||N(e)&&!n)for(let r=0;r<e.length;++r)b(e[r],t,n);else t.push(e);return t}function C(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function x(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function E(e){return e%1==0}function w(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function v(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function B(e,t=(e=>0),n){return new Promise((r,a)=>{let s=0;const o=()=>{if(e())return void r();s++;const i=t(s);null!=n&&s>=n?a():setTimeout(o,i)};o()})}function R(e,t){const n=t.length;return f((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis `+e),f(e.every(e=>E(e)),()=>"All values in axis param must be integers but got axis "+e),e.map(e=>e<0?n+e:e)}function S(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:R(t,e).sort();let o=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[o]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[o]||s[o]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[o]<=t&&o++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function T(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error("Unknown data type "+e);n=new Uint8Array(t)}return n}function k(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type "+e);n=new Array(t)}return n}function N(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype "+e)}function Q(e){return"string"==typeof e||e instanceof String}function D(e){return Array.isArray(e)?D(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":"number"==typeof e?"float32":Q(e)?"string":function(e){return"boolean"==typeof e}(e)?"bool":"float32"}function G(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function _(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function W(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<s;t++)a[t]=W(e+t*i,o,n,r)}return a}function $(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function M(e,t){const n=V(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function V(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type "+t)}function U(e){e.forEach(t=>{f(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function X(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function O(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Z(e){return e&&e.then&&"function"==typeof e.then}function P(...e){z().getBool("IS_TEST")||z().getBool("PROD")||console.warn(...e)}const Y="tfjsflags";class H{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=K,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&P(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];P(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Z(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(Y in e){e.tfjsflags.split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}}function K(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}function z(){return j}let J,j=null;function q(){if(null==J){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}J=e}return J}function ee(e,t){const n=function(){const e=q();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const te="Acos",ne="Acosh",re="Add",ae="AddN",se="ArgMax",oe="ArgMin",ie="Asin",ue="Asinh",le="Atan",ce="Atanh",de="Atan2",pe="AvgPool",he="AvgPool3D",Ae="BatchMatMul",ge="BatchToSpaceND",me="Bincount",fe="Cast",Ie="Ceil",ye="ClipByValue",be="Complex",Ce="ComplexAbs",xe="Concat",Ee="Conv2D",we="Conv2DBackpropFilter",ve="Conv2DBackpropInput",Be="Conv3D",Re="Cosh",Se="Cumsum",Te="CropAndResize",ke="DenseBincount",Ne="DepthToSpace",Fe="DepthwiseConv2dNative",Qe="DepthwiseConv2dNativeBackpropFilter",De="DepthwiseConv2dNativeBackpropInput",Ge="Dilation2D",Le="RealDiv",_e="Einsum",We="Equal",$e="ExpandDims",Me="Expm1",Ve="Fill",Ue="FlipLeftRight",Xe="Floor",Oe="FloorDiv",Ze="FusedBatchNorm",Pe="GatherV2",Ye="GatherNd",He="Greater",Ke="GreaterEqual",ze="Identity",Je="IFFT",je="Imag",qe="IsNan",et="LeakyRelu",tt="Less",nt="LessEqual",rt="LinSpace",at="Log1p",st="LogicalAnd",ot="LogicalNot",it="LogicalOr",ut="Maximum",lt="MaxPool",ct="MaxPool3D",dt="MaxPoolWithArgmax",pt="Mean",ht="Minimum",At="MirrorPad",gt="Multinomial",mt="Multiply",ft="NotEqual",It="NonMaxSuppressionV3",yt="NonMaxSuppressionV4",bt="NonMaxSuppressionV5",Ct="OnesLike",xt="OneHot",Et="Pack",wt="PadV2",vt="Prelu",Bt="Prod",Rt="Range",St="Real",Tt="Reciprocal",kt="Relu",Nt="Reshape",Ft="ResizeNearestNeighbor",Qt="ResizeBilinear",Dt="Relu6",Gt="Reverse",Lt="Round",_t="Rsqrt",Wt="ScatterNd",$t="Select",Mt="Selu",Vt="Slice",Ut="Sinh",Xt="Sign",Ot="Sigmoid",Zt="Softplus",Pt="Sqrt",Yt="SpaceToBatchND",Ht="SplitV",Kt="Softmax",zt="SparseFillEmptyRows",Jt="SparseReshape",jt="SparseSegmentMean",qt="SparseSegmentSum",en="SparseToDense",tn="SquaredDifference",nn="StridedSlice",rn="StringNGrams",an="StringSplit",sn="StringToHashBucketFast",on="Tanh",un="Tile",ln="TopK",cn="Transform",dn="Transpose",pn="Unique",hn="Unpack",An="ZerosLike",gn="Step",mn="FromPixels",fn="RotateWithOffset",In="_FusedMatMul",yn="FusedConv2D",bn="FusedDepthwiseConv2D",Cn=ee("kernelRegistry",()=>new Map),xn=ee("gradRegistry",()=>new Map);function En(e,t){const n=Rn(e,t);return Cn.get(n)}function wn(e){return xn.get(e)}function vn(e){const t=Cn.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,o]=a,[i]=s.split("_");i===e&&n.push(o)}return n}function Bn(e){const{kernelName:t,backendName:n}=e,r=Rn(t,n);Cn.has(r)&&P(`The kernel '${t}' for backend '${n}' is already registered`),Cn.set(r,e)}function Rn(e,t){return`${t}_${e}`}var Sn=kn,Tn=null;try{Tn=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function kn(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function Nn(e){return!0===(e&&e.__isLong__)}kn.prototype.__isLong__,Object.defineProperty(kn.prototype,"__isLong__",{value:!0}),kn.isLong=Nn;var Fn={},Qn={};function Dn(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=Qn[e])?r:(n=Ln(e,(0|e)<0?-1:0,!0),a&&(Qn[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=Fn[e])?r:(n=Ln(e,e<0?-1:0,!1),a&&(Fn[e]=n),n)}function Gn(e,t){if(isNaN(e))return t?Zn:On;if(t){if(e<0)return Zn;if(e>=Vn)return zn}else{if(e<=-Un)return Jn;if(e+1>=Un)return Kn}return e<0?Gn(-e,t).neg():Ln(e%Mn|0,e/Mn|0,t)}function Ln(e,t,n){return new kn(e,t,n)}kn.fromInt=Dn,kn.fromNumber=Gn,kn.fromBits=Ln;var _n=Math.pow;function Wn(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return On;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return Wn(e.substring(1),t,n).neg();for(var a=Gn(_n(n,8)),s=On,o=0;o<e.length;o+=8){var i=Math.min(8,e.length-o),u=parseInt(e.substring(o,o+i),n);if(i<8){var l=Gn(_n(n,i));s=s.mul(l).add(Gn(u))}else s=(s=s.mul(a)).add(Gn(u))}return s.unsigned=t,s}function $n(e,t){return"number"==typeof e?Gn(e,t):"string"==typeof e?Wn(e,t):Ln(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}kn.fromString=Wn,kn.fromValue=$n;var Mn=4294967296,Vn=Mn*Mn,Un=Vn/2,Xn=Dn(1<<24),On=Dn(0);kn.ZERO=On;var Zn=Dn(0,!0);kn.UZERO=Zn;var Pn=Dn(1);kn.ONE=Pn;var Yn=Dn(1,!0);kn.UONE=Yn;var Hn=Dn(-1);kn.NEG_ONE=Hn;var Kn=Ln(-1,2147483647,!1);kn.MAX_VALUE=Kn;var zn=Ln(-1,-1,!0);kn.MAX_UNSIGNED_VALUE=zn;var Jn=Ln(0,-2147483648,!1);kn.MIN_VALUE=Jn;var jn=kn.prototype;jn.toInt=function(){return this.unsigned?this.low>>>0:this.low},jn.toNumber=function(){return this.unsigned?(this.high>>>0)*Mn+(this.low>>>0):this.high*Mn+(this.low>>>0)},jn.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(Jn)){var t=Gn(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=Gn(_n(e,6),this.unsigned),s=this,o="";;){var i=s.div(a),u=(s.sub(i.mul(a)).toInt()>>>0).toString(e);if((s=i).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},jn.getHighBits=function(){return this.high},jn.getHighBitsUnsigned=function(){return this.high>>>0},jn.getLowBits=function(){return this.low},jn.getLowBitsUnsigned=function(){return this.low>>>0},jn.getNumBitsAbs=function(){if(this.isNegative())return this.eq(Jn)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},jn.isZero=function(){return 0===this.high&&0===this.low},jn.eqz=jn.isZero,jn.isNegative=function(){return!this.unsigned&&this.high<0},jn.isPositive=function(){return this.unsigned||this.high>=0},jn.isOdd=function(){return 1==(1&this.low)},jn.isEven=function(){return 0==(1&this.low)},jn.equals=function(e){return Nn(e)||(e=$n(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},jn.eq=jn.equals,jn.notEquals=function(e){return!this.eq(e)},jn.neq=jn.notEquals,jn.ne=jn.notEquals,jn.lessThan=function(e){return this.comp(e)<0},jn.lt=jn.lessThan,jn.lessThanOrEqual=function(e){return this.comp(e)<=0},jn.lte=jn.lessThanOrEqual,jn.le=jn.lessThanOrEqual,jn.greaterThan=function(e){return this.comp(e)>0},jn.gt=jn.greaterThan,jn.greaterThanOrEqual=function(e){return this.comp(e)>=0},jn.gte=jn.greaterThanOrEqual,jn.ge=jn.greaterThanOrEqual,jn.compare=function(e){if(Nn(e)||(e=$n(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},jn.comp=jn.compare,jn.negate=function(){return!this.unsigned&&this.eq(Jn)?Jn:this.not().add(Pn)},jn.neg=jn.negate,jn.add=function(e){Nn(e)||(e=$n(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,s=e.high>>>16,o=65535&e.high,i=e.low>>>16,u=0,l=0,c=0,d=0;return c+=(d+=a+(65535&e.low))>>>16,l+=(c+=r+i)>>>16,u+=(l+=n+o)>>>16,u+=t+s,Ln((c&=65535)<<16|(d&=65535),(u&=65535)<<16|(l&=65535),this.unsigned)},jn.subtract=function(e){return Nn(e)||(e=$n(e)),this.add(e.neg())},jn.sub=jn.subtract,jn.multiply=function(e){if(this.isZero())return On;if(Nn(e)||(e=$n(e)),Tn)return Ln(Tn.mul(this.low,this.high,e.low,e.high),Tn.get_high(),this.unsigned);if(e.isZero())return On;if(this.eq(Jn))return e.isOdd()?Jn:On;if(e.eq(Jn))return this.isOdd()?Jn:On;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Xn)&&e.lt(Xn))return Gn(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,s=e.high>>>16,o=65535&e.high,i=e.low>>>16,u=65535&e.low,l=0,c=0,d=0,p=0;return d+=(p+=a*u)>>>16,c+=(d+=r*u)>>>16,d&=65535,c+=(d+=a*i)>>>16,l+=(c+=n*u)>>>16,c&=65535,l+=(c+=r*i)>>>16,c&=65535,l+=(c+=a*o)>>>16,l+=t*u+n*i+r*o+a*s,Ln((d&=65535)<<16|(p&=65535),(l&=65535)<<16|(c&=65535),this.unsigned)},jn.mul=jn.multiply,jn.divide=function(e){if(Nn(e)||(e=$n(e)),e.isZero())throw Error("division by zero");var t,n,r;if(Tn)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?Ln((this.unsigned?Tn.div_u:Tn.div_s)(this.low,this.high,e.low,e.high),Tn.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?Zn:On;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return Zn;if(e.gt(this.shru(1)))return Yn;r=Zn}else{if(this.eq(Jn))return e.eq(Pn)||e.eq(Hn)?Jn:e.eq(Jn)?Pn:(t=this.shr(1).div(e).shl(1)).eq(On)?e.isNegative()?Pn:Hn:(n=this.sub(e.mul(t)),r=t.add(n.div(e)));if(e.eq(Jn))return this.unsigned?Zn:On;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=On}for(n=this;n.gte(e);){t=Math.max(1,Math.floor(n.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(t)/Math.LN2),s=a<=48?1:_n(2,a-48),o=Gn(t),i=o.mul(e);i.isNegative()||i.gt(n);)i=(o=Gn(t-=s,this.unsigned)).mul(e);o.isZero()&&(o=Pn),r=r.add(o),n=n.sub(i)}return r},jn.div=jn.divide,jn.modulo=function(e){return Nn(e)||(e=$n(e)),Tn?Ln((this.unsigned?Tn.rem_u:Tn.rem_s)(this.low,this.high,e.low,e.high),Tn.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},jn.mod=jn.modulo,jn.rem=jn.modulo,jn.not=function(){return Ln(~this.low,~this.high,this.unsigned)},jn.and=function(e){return Nn(e)||(e=$n(e)),Ln(this.low&e.low,this.high&e.high,this.unsigned)},jn.or=function(e){return Nn(e)||(e=$n(e)),Ln(this.low|e.low,this.high|e.high,this.unsigned)},jn.xor=function(e){return Nn(e)||(e=$n(e)),Ln(this.low^e.low,this.high^e.high,this.unsigned)},jn.shiftLeft=function(e){return Nn(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?Ln(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):Ln(0,this.low<<e-32,this.unsigned)},jn.shl=jn.shiftLeft,jn.shiftRight=function(e){return Nn(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?Ln(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):Ln(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},jn.shr=jn.shiftRight,jn.shiftRightUnsigned=function(e){if(Nn(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?Ln(this.low>>>e|t<<32-e,t>>>e,this.unsigned):Ln(32===e?t:t>>>e-32,0,this.unsigned)},jn.shru=jn.shiftRightUnsigned,jn.shr_u=jn.shiftRightUnsigned,jn.toSigned=function(){return this.unsigned?Ln(this.low,this.high,!1):this},jn.toUnsigned=function(){return this.unsigned?this:Ln(this.low,this.high,!0)},jn.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},jn.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},jn.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},kn.fromBytes=function(e,t,n){return n?kn.fromBytesLE(e,t):kn.fromBytesBE(e,t)},kn.fromBytesLE=function(e,t){return new kn(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},kn.fromBytesBE=function(e,t){return new kn(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const qn=Sn||Object.freeze(Object.assign(Object.create(null),Sn,{default:Sn}));function er(e){return qn.fromString(e,!0,16)}const tr=er("c3a5c85c97cb3127"),nr=er("b492b66fbe98f273"),rr=er("9ae16a3b2f90404f");function ar(e){return e.xor(e.shru(47))}function sr(e,t,n){const r=e.slice(t,t+n);return qn.fromBytes(Array.from(r),!0,!0)}function or(e,t){return sr(e,t,8)}function ir(e,t){return sr(e,t,4)}function ur(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function lr(e,t,n=er("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function cr(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=ur(s.add(a).add(r),21);const o=a;return a=(a=a.add(t)).add(n),s=s.add(ur(a,44)),[a.add(r),s.add(o)]}(or(e,t),or(e,t+8),or(e,t+16),or(e,t+24),n,r)}function dr(e,t=e.length){const n=qn.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=rr.add(2*t),r=or(e,0).add(rr),a=or(e,t-8);return lr(ur(a,37).mul(n).add(r),ur(r,25).add(a).mul(n),n)}if(t>=4){const n=rr.add(2*t);return lr(ir(e,0).shl(3).add(t),ir(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return ar(rr.mul(n).xor(tr.mul(r))).mul(rr)}return rr}(e,t):function(e,t=e.length){const n=rr.add(2*t),r=or(e,0).mul(nr),a=or(e,8),s=or(e,t-8).mul(n),o=or(e,t-16).mul(rr);return lr(ur(r.add(a),43).add(ur(s,30)).add(o),r.add(ur(a.add(rr),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=rr.add(2*t),r=or(e,0).mul(rr),a=or(e,8),s=or(e,t-8).mul(n),o=or(e,t-16).mul(rr),i=ur(r.add(a),43).add(ur(s,30)).add(o),u=lr(i,r.add(ur(a.add(rr),18)).add(s),n),l=or(e,16).mul(n),c=or(e,24),d=i.add(or(e,t-32)).mul(n),p=u.add(or(e,t-24)).mul(n);return lr(ur(l.add(c),43).add(ur(d,30)).add(p),l.add(ur(c.add(r),18)).add(d),n)}(e,t);let r=n,a=n.mul(nr).add(113),s=ar(a.mul(rr).add(113)).mul(rr),o=[qn.UZERO,qn.UZERO],i=[qn.UZERO,qn.UZERO];r=r.mul(rr).add(or(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=ur(r.add(a).add(o[0]).add(or(e,u+8)),37).mul(nr),a=ur(a.add(o[1]).add(or(e,u+48)),42).mul(nr),r=r.xor(i[1]),a=a.add(o[0]).add(or(e,u+40)),s=ur(s.add(i[0]),33).mul(nr),o=cr(e,u,o[1].mul(nr),r.add(i[0])),i=cr(e,u+32,s.add(i[1]),a.add(or(e,u+16))),[s,r]=[r,s],u+=64}while(u!==l);const d=nr.add(s.and(255).shl(1));return u=c,i[0]=i[0].add(t-1&63),o[0]=o[0].add(i[0]),i[0]=i[0].add(o[0]),r=ur(r.add(a).add(o[0]).add(or(e,u+8)),37).mul(d),a=ur(a.add(o[1]).add(or(e,u+48)),42).mul(d),r=r.xor(i[1].mul(9)),a=a.add(o[0].mul(9).add(or(e,u+40))),s=ur(s.add(i[0]),33).mul(d),o=cr(e,u,o[1].mul(d),r.add(i[0])),i=cr(e,u+32,s.add(i[1]),a.add(or(e,u+16))),[s,r]=[r,s],lr(lr(o[0],i[0],d).add(ar(a).mul(tr)).add(s),lr(o[1],i[1],d).add(r),d)}function pr(e,t){return"string"===t?gr(e):hr([e],t)}function hr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=b(e)),z().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type "+t)}function Ar(){return z().platform.now()}function gr(e,t="utf-8"){return t=t||"utf-8",z().platform.encode(e,t)}function mr(e,t="utf-8"){return t=t||"utf-8",z().platform.decode(e,t)}class fr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new yr)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const o=Ar();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:Ar()-o})}if(z().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then(t=>{Ir(t,n.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(e=>e.kernelMs),extraInfo:s.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}function Ir(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class yr{logKernelProfile(e,t,n,r,a,s){const o="number"==typeof r?v(r+"ms",9):r.error,i=v(e,25),u=t.rank,l=t.size,c=v(t.shape.toString(),14);let d="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;d+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${i}\t%c${o}\t%c${u}D ${c}\t%c${l}\t%c${d}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function br(e,t,n,r){const a=_(t),s=function(e,t,n,r){const a=C(t),s=r[r.length-1],o=new Array(s).fill(0),i=t.length,u="complex64"===n?wr(e):e;if(i>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)o[e]=Math.max(o[e],Cr(u[t+e],0,n).length)}return o}(e,t,n,a),o=t.length,i=Er(e,t,n,a,s),u=["Tensor"];return r&&(u.push("  dtype: "+n),u.push("  rank: "+o),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(i.map(e=>"    "+e).join("\n")),u.join("\n")}function Cr(e,t,n){let r;return r=Array.isArray(e)?parseFloat(e[0].toFixed(7))+" + "+parseFloat(e[1].toFixed(7))+"j":Q(e)?`'${e}'`:"bool"===n?xr(e):parseFloat(e.toFixed(7)).toString(),v(r,t)}function xr(e){return 0===e?"false":"true"}function Er(e,t,n,r,a,s=!0){const o="complex64"===n?2:1,i=t[0],u=t.length;if(0===u){if("complex64"===n){return[Cr(wr(e)[0],0,n)]}return"bool"===n?[xr(e[0])]:[e[0].toString()]}if(1===u){if(i>20){const t=3*o;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((i-3)*o,i*o));return"complex64"===n&&(r=wr(r),s=wr(s)),["["+r.map((e,t)=>Cr(e,a[t],n)).join(", ")+", ..., "+s.map((e,t)=>Cr(e,a[i-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?wr(e):Array.from(e)).map((e,t)=>Cr(e,a[t],n)).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),d=r[0]*o,p=[];if(i>20){for(let t=0;t<3;t++){const r=t*d,s=r+d;p.push(...Er(e.slice(r,s),l,n,c,a,!1))}p.push("...");for(let t=i-3;t<i;t++){const r=t*d,s=r+d;p.push(...Er(e.slice(r,s),l,n,c,a,t===i-1))}}else for(let t=0;t<i;t++){const r=t*d,s=r+d;p.push(...Er(e.slice(r,s),l,n,c,a,t===i-1))}const h=2===u?",":"";p[0]="["+p[0]+h;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+h;let A=",\n";for(let e=2;e<u;e++)A+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":A),p}function wr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class vr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=C(e),null!=n){const e=n.length;f(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||k(t,this.size),this.strides=_(e)}set(e,...t){0===t.length&&(t=[0]),f(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=`+this.shape;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Br().makeTensor(this.values,this.shape,this.dtype)}}let Br=null,Rr=null;class Sr{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=C(e),this.strides=_(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Rr.buffer(this.shape,this.dtype,e)}bufferSync(){return Rr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return $(this.shape,e,"complex64"===this.dtype)}arraySync(){return $(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Br().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>mr(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Br().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>mr(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Br().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Br().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Rr.print(this,e)}clone(){return this.throwIfDisposed(),Rr.clone(this)}toString(e=!1){return br(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Rr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Br().makeVariable(this,e,t,n)}}Object.defineProperty(Sr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),ee("Tensor",()=>Sr);class Tr extends Sr{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!x(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Br().disposeTensor(this),this.dataId=e.dataId,Br().incRef(this,null)}dispose(){Br().disposeVariable(this),this.isDisposedInternal=!0}}var kr,Nr,Fr,Qr,Dr;Object.defineProperty(Tr,Symbol.hasInstance,{value:e=>e instanceof Sr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(kr||(kr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Nr||(Nr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Fr||(Fr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Qr||(Qr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Dr||(Dr={}));const Gr={float32:Qr,int32:Nr,bool:Fr,complex64:Dr};function Lr(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Gr[e][t]}function _r(e){return Lr(e,"int32")}function Wr(e,t){if(e.dtype===t.dtype)return[e,t];const n=Lr(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function $r(e){const t=[];return Mr(e,t,new Set),t}function Mr(e,t,n){if(null==e)return;if(e instanceof Sr)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),Mr(r,t,n))}}function Vr(e){return null!=e.kernelName}class Ur{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Xr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ur}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(P(e+" backend was already registered. Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new fr(this.backendInstance),!0}setupRegisteredKernels(){vn(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){vn(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof p||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0)).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,P(`Initialization of backend ${e} failed`),P(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return P(`Initialization of backend ${e} failed`),P(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(e+" backend not found in registry");this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Xr.nextTensorId++}nextVariableId(){return Xr.nextVariableId++}clone(e){const t=Zr.runKernel(ze,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e},n={dtype:"float32"};return Zr.runKernel(fe,t,n)}}),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=En(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=r-t-a-s;if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let o,i;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=Vr(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Vr(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=En(t,this.backendName);f(null!=u,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),o=()=>{const e=this.backend.numDataIds();i=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const o=Array.isArray(i)?i:[i];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const l=o.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};o=()=>{const e=this.backend.numDataIds();i=this.tidy(()=>t(this.backend,a));const n=Array.isArray(i)?i:[i];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,d=Vr(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(u,l,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=o()}),r&&this.addTapeNode(u,l,t,d,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(e=>null!=l[e]?l[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(i)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(e,t,n){const r=wn(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(f(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(t).map(e=>t[e])):s=e.map(e=>t[e]);const o=n.filter((e,t)=>a[t]);return s.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&Q(e[0])&&(a=e.map(e=>gr(e)));const s=r.write(a,t,n),o=new Sr(t,n,s,this.nextTensorId());if(this.trackTensor(o,r),"string"===n){const e=this.state.tensorInfo.get(s),t=function(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,r){const a=new Sr(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new Tr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*F(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Tr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*F(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},i=wn(e);null!=i&&(r=i.gradFunc),null!=r&&(o.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=V(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=$r(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(f(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));f(a instanceof Sr,()=>"The result y returned by f() must be a tensor.");const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],o=s.inputs;for(const e in o){const n=o[e];let i=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach(e=>r[e.id]=!0),i=!0,a[s.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,o[n.id]=!0;break}}const i=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&o[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,i.push(t)}}return i}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[a.id]=null==n?function(e){const t=M(C(e),"float32");return Zr.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],o=[];if(s.outputs.forEach(t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const a=n(()=>i[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const o=s.inputs[t];if(!x(a.shape,o.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${o.shape}'`);if(null==e[o.id])e[o.id]=a;else{const t=e[o.id];e[o.id]=r(t,a),t.dispose()}}}}(e,s,e=>this.tidy(e),Pr);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return f(G(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;f(t.every(e=>e instanceof Sr),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};t.forEach((e,t)=>{r[t]=e});return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),f(n.value instanceof Sr,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),f(G(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];f(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),f(s.every(e=>e instanceof Sr),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const o={};return s.forEach((e,t)=>{o[t]=()=>e}),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Ar(),n=await this.backend.time(e);return n.wallMs=Ar()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ur;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Or(){const e=q();if(null==e._tfengine){const t=new H(e);e._tfengine=new Xr(t)}var t;return t=e._tfengine.ENV,j=t,Br=()=>e._tfengine,e._tfengine}Xr.nextTensorId=0,Xr.nextVariableId=0;const Zr=Or();function Pr(e,t){const n={a:e,b:t};return Zr.runKernel(re,n)}function Yr(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Hr(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Kr=z();function zr(e,t){let n=e;if(N(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||N(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&z().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Jr(e,r,[]),r}function Jr(e,t,n){if(n=n||[],!Array.isArray(e)&&!N(e))return void f(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);f(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),f(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const r=t.slice(1);for(let t=0;t<e.length;++t)Jr(e[t],r,n.concat(t))}function jr(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function qr(e,t,n,r="numeric"){if(e instanceof Sr)return jr(r,e.dtype,t,n),e;let a=D(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),jr(r,a,t,n),null==e||!N(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=zr(e,a);N(e)||Array.isArray(e)||(e=[e]);const o="string"!==a?hr(e,a):b(e,[],!0);return Zr.makeTensor(o,s,a)}function ea(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>qr(e,`${t}[${a}]`,n,r))}Kr.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Kr.registerFlag("IS_BROWSER",()=>Hr()),Kr.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),Kr.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Kr.registerFlag("PROD",()=>!1),Kr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Kr.getBool("DEBUG")),Kr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Kr.registerFlag("IS_TEST",()=>!1),Kr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),Kr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);function ta(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+t.length+" keys.");let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const a=(...e)=>{Zr.startScope(n);try{const t=r(...e);return Z(t)&&console.error("Cannot return a Promise inside of tidy."),Zr.endScope(t),t}catch(e){throw Zr.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}const na=ta({complex_:function(e,t){const n=qr(e,"real","complex"),r=qr(t,"imag","complex");I(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return Zr.runKernel(be,a)}});function ra(e,t,n,r){if(null==r&&(r=D(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!N(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){U(t);const e=C(t),r=C(n);f(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==C(t.slice(e));f(n[e]===t[e]||!a,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return N(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?hr(e,r):b(e,[],!0),Zr.makeTensor(e,t,r)}function aa(e,t,n){return ra(e,t,zr(e,n),n)}const sa={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};const oa="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function ia(e){return oa?Buffer.byteLength(e):new Blob([e]).size}function ua(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function la(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function ca(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:ia(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:ia(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function da(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const o=r[a],i=e[n[o>>10]+(1023&o)]+t[o>>10];s[a]=i}return new Float32Array(a)}}class pa{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==pa.instance&&(pa.instance=new pa),pa.instance}static registerSaveRouter(e){pa.getInstance().saveRouters.push(e)}static registerLoadRouter(e){pa.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return pa.getHandlers(e,"save")}static getLoadHandlers(e,t){return pa.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?pa.getInstance().loadRouters:pa.getInstance().saveRouters).forEach(t=>{const a=t(e,n);null!==a&&r.push(a)}),r}}const ha="tensorflowjs",Aa="models_store",ga="model_info_store";function ma(){if(!z().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function fa(e){const t=e.result;t.createObjectStore(Aa,{keyPath:"modelPath"}),t.createObjectStore(ga,{keyPath:"modelPath"})}class Ia{constructor(e){if(this.indexedDB=ma(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open(ha,1);r.onupgradeneeded=()=>fa(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(Aa,"readonly"),r=t.objectStore(Aa).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=ca(t),s=a.transaction(ga,"readwrite");let o=s.objectStore(ga);const i=o.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=a.transaction(Aa,"readwrite");const i=u.objectStore(Aa).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{o=s.objectStore(ga);const t=o.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(i.error)),t.onerror=e=>(a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}}Ia.URL_SCHEME="indexeddb://";const ya=e=>{return z().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ia.URL_SCHEME)?(t=e.slice(Ia.URL_SCHEME.length),new Ia(t)):null;var t};pa.registerSaveRouter(ya),pa.registerLoadRouter(ya);class ba{constructor(){this.indexedDB=ma()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(ha,1);n.onupgradeneeded=()=>fa(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(ga,"readonly"),s=a.objectStore(ga).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(Ia.URL_SCHEME)?t.slice(Ia.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open(ha,1);r.onupgradeneeded=()=>fa(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(ga,"readwrite"),o=s.objectStore(ga),i=o.get(e);let u;i.onsuccess=()=>{if(null==i.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=o.delete(e),s=()=>{u=a.transaction(Aa,"readwrite");const r=u.objectStore(Aa).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(i.error))}},i.onerror=e=>(a.close(),n(i.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)})}}const Ca="/",xa="tensorflowjs_models",Ea="info",wa="model_topology",va="weight_specs",Ba="weight_data",Ra="model_metadata";function Sa(e){return{info:[xa,e,Ea].join(Ca),topology:[xa,e,wa].join(Ca),weightSpecs:[xa,e,va].join(Ca),weightData:[xa,e,Ba].join(Ca),modelMetadata:[xa,e,Ra].join(Ca)}}function Ta(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ka(e){const t=e.split(Ca);if(t.length<3)throw new Error("Invalid key format: "+e);return t.slice(1,t.length-1).join(Ca)}class Na{constructor(e){if(!z().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Sa(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=ca(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(oa)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw Ta(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(oa){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}Na.URL_SCHEME="localstorage://";const Fa=e=>{return z().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Na.URL_SCHEME)?(t=e.slice(Na.URL_SCHEME.length),new Na(t)):null;var t};pa.registerSaveRouter(Fa),pa.registerLoadRouter(Fa);class Qa{constructor(){f(z().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),f("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=xa+Ca,n=Ca+Ea;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[ka(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=Sa(e=(t=e).startsWith(Na.URL_SCHEME)?t.slice(Na.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return Ta(n),r}}class Da{constructor(){this.managers={}}static getInstance(){return null==Da.instance&&(Da.instance=new Da),Da.instance}static registerManager(e,t){f(null!=e,()=>"scheme must not be undefined or null."),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),f(e.length>0,()=>"scheme must not be an empty string.");const n=Da.getInstance();f(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Ga{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got "+t);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(z().get("IS_BROWSER")){z().setPlatform("browser",new Ga);try{Da.registerManager(Na.URL_SCHEME,new Qa)}catch(e){}try{Da.registerManager(Ia.URL_SCHEME,new ba)}catch(e){}}const La=()=>require("node-fetch");let _a;class Wa{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=z().global.fetch?z().global.fetch(e,t):(null==_a&&(_a=La()),_a(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got "+t);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}function $a(e,t="float32",n){return t=t||"float32",U(e),new vr(e,t,n)}z().get("IS_NODE")&&z().setPlatform("node",new Wa);const Ma=ta({cast_:function(e,t){const n=qr(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error("Failed to cast to unknown dtype "+t);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return Zr.runKernel(fe,r,a)}});const Va=ta({clone_:function(e){const t={x:qr(e,"x","clone","string_or_numeric")};return Zr.runKernel(ze,t)}});Or();Rr={buffer:$a,cast:Ma,clone:Va,print:function(e,t=!1){console.log(e.toString(t))}};function Ua(e){return new Promise(e=>setTimeout(e)).then(e)}class Xa{constructor(e){if(!z().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Xa.URL_SCHEME)&&(e=e.slice(Xa.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=la(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Ua(()=>a.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ua(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:ca(e)}}}}Xa.URL_SCHEME="downloads://";function Oa(e,t,n,r){!function(e){f(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){f(e>=0&&e<=1,()=>"Progress fraction must be in range [0, 1], but got startFraction "+e),f(t>=0&&t<=1,()=>"Progress fraction must be in range [0, 1], but got endFraction "+t),f(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction `+t)}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map(s=>(s.then(s=>{const o=n+ ++a/e.length*(r-n);return t(o),s}),s)))}pa.registerSaveRouter(e=>z().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Xa.URL_SCHEME)?function(e="model"){return new Xa(e)}(e.slice(Xa.URL_SCHEME.length)):null);class Za{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(f("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=z().platform.fetch,f(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&f(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=la(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:ca(e),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+r.status+".")}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code `+e.status+". Please verify this URL points to the model JSON of the model to load.");let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return async function(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}(t,e=>this.loadWeights(e))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const o=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):o.push(a+e+r);this.weightUrlConverter&&o.push(...await Promise.all(i));return[s,ua(await async function(e,t){null==t&&(t={});const n=null==t.fetchFunc?z().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(r):await Oa(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await Oa(a,t.onProgress,.5,1)}(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Pa(e){return null!=e.match(Za.URL_SCHEME_REGEX)}Za.URL_SCHEME_REGEX=/^https?:\/\//;const Ya=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Pa(e)):Pa(e),n)return Ha(e,t)}return null};function Ha(e,t){return new Za(e,t)}function Ka(e,t){return Ha(e,t)}pa.registerSaveRouter(Ya),pa.registerLoadRouter(Ya);const za=ta({matMul_:function(e,t,n=!1,r=!1){let a=qr(e,"a","matMul"),s=qr(t,"b","matMul");[a,s]=Wr(a,s);const o={a:a,b:s},i={transposeA:n,transposeB:r};return Zr.runKernel(Ae,o,i)}});const Ja=ta({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is "+t);const a={indices:qr(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return Zr.runKernel(xt,a,s)}});const ja=ta({transpose_:function(e,t){const n=qr(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),f(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{f(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+" but got "+t)}),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return Zr.runKernel(dn,r,a)}});let qa;const es=ta({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was "+e.constructor.name);i=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=En(mn,Zr.backendName)){const n={pixels:e},r={numChannels:t};return Zr.runKernel(mn,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(o?c=e.getContext("2d").getImageData(0,0,u,l).data:r||n?c=e.data:(s||a||i)&&(null==qa&&(qa=document.createElement("canvas").getContext("2d")),qa.canvas.width=u,qa.canvas.height=l,qa.drawImage(e,0,0,u,l),c=qa.getImageData(0,0,u,l).data),4===t)d=new Int32Array(c);else{const e=u*l;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}return function(e,t,n){if(y(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=zr(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ra(e,t,r,n)}(d,[l,u,t],"int32")}});function ts(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===C(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let o=1;for(let e=0;e<a.length-1;++e)o*=a[e];const i=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=i[e],u.push(i[e]);const c=[..._(e.shape).map(e=>e/l),1].slice(0,s);return[u,o,l,c]}function ns(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: "+n.shape+`, indices.shape: ${t.shape}, shape: ${e}`+`, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+" Output shape length < "+(r+(n.rank-a)));if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function rs(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: "+t.dtype);if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: "+n);if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: "+t.shape);if(0===e.size)throw new Error("Updates specified for empty output. updates shape: "+e.shape)}ns(n,t,e)}function as(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let o=1;for(let e=a;e<s;++e)o*=n[e];const i=a<1?1:a;return{sliceRank:a,numUpdates:C(t.shape)/i,sliceSize:o,strides:[..._(n.slice(0,a)),1],outputSize:C(n)}}function ss(e,t,n){const r=e.shape.length;f(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),f(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)f(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function os(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function is(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function us(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function ls(e,t,n){return n<=e?n:n-(t-1)}function cs(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function ds(e,t,n,r,a,s,o,i,u){const l=e.length;let c=new Array(l),d=new Array(l),p=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=ps(o,u,l,r,e),d=hs(i,u,l,a,e),p=us(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=gs(o,r,s,e,t,u),d[t]=ms(i,a,s,e,t,u),p[t]=As(s,t,u);return{begin:c,end:d,strides:p}}function ps(e,t,n,r,a){const s=[...a],o=cs(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=0;else{const o=ls(t,n,a);let i=r[o];e&1<<o&&(i=0),s[a]=i}return s}function hs(e,t,n,r,a){const s=[...a],o=cs(n,t);for(let a=0;a<s.length;a++)if(o.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const o=ls(t,n,a);let i=r[o];e&1<<o&&(i=Number.MAX_SAFE_INTEGER),s[a]=i}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=A(0,s[e],a[e])}return s}function As(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function gs(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=A(0,o,u-1),o}function ms(e,t,n,r,a,s){let o=t[a];const i=n[a]||1;(e&1<<a||s&1<<a||null==o)&&(o=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=i>0?A(0,o,u):A(-1,o,u-1),o}function fs(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Is(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function ys(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach(e=>{f(-1!==e,()=>"slice() does not support negative begin indexing.")}),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map((t,n)=>t>=0?t:(f(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,s]}function bs(e,t,n,r,a,s,o,i,u){let l=t.slice(),c=n.slice(),d=r;null==r&&(d=new Array(l.length));const p=os(o);if(p.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==o&&0!==i)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==o&&0!==u)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const h=e.length-l.length,A=os(i),g=e.slice();A.forEach(e=>{l[e]=0,c[e]=1,g.splice(e,0,1)});const{begin:m,end:f,strides:I}=ds(g,p,h,l,c,d,a,s,o);l=m,c=f,d=I;const y=os(u);y.forEach(e=>{c[e]=l[e]+1,d[e]=1});const b=is(l,c,d),C=b.filter((e,t)=>-1===y.indexOf(t));return{nonStrided:d.every(e=>1===e),$begin:l,$end:c,$strides:d,size:b,newShape:g,outShape:C}}var Cs=Object.freeze({__proto__:null,assertParamsValid:ss,maskToAxes:os,computeOutShape:is,stridesWithElidedDims:us,getNormalizedAxes:ds,startIndicesWithElidedDims:ps,stopIndicesWithElidedDims:hs,stridesForAxis:As,startForAxis:gs,stopForAxis:ms,isSliceContinous:fs,computeFlatOffset:Is,parseSliceParams:ys,sliceInfo:bs});function xs(){return Zr}function Es(e,t){return Zr.tidy(e,t)}function ws(e){return Zr.keep(e)}function vs(e){return Zr.setBackend(e)}const Bs=ta({add_:function(e,t){let n=qr(e,"a","add"),r=qr(t,"b","add");[n,r]=Wr(n,r);const a={a:n,b:r};return Zr.runKernel(re,a)}});const Rs=ta({floorDiv_:function(e,t){let n=qr(e,"a","floorDiv"),r=qr(t,"b","floorDiv");[n,r]=Wr(n,r);const a={a:n,b:r};return Zr.runKernel(Oe,a)}});const Ss=ta({div_:function(e,t){let n=qr(e,"a","div"),r=qr(t,"b","div");if([n,r]=Wr(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Rs(n,r);const a={a:n,b:r};return Zr.runKernel(Le,a,{})}});const Ts=ta({mul_:function(e,t){let n=qr(e,"a","mul"),r=qr(t,"b","mul");[n,r]=Wr(n,r);const a={a:n,b:r};return Zr.runKernel(mt,a)}});const ks=ta({abs_:function(e){const t=qr(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Zr.runKernel(Ce,e)}{const e={x:t};return Zr.runKernel("Abs",e)}}});const Ns=ta({acos_:function(e){const t={x:qr(e,"x","acos")};return Zr.runKernel(te,t)}});const Fs=ta({acosh_:function(e){const t={x:qr(e,"x","acosh")};return Zr.runKernel(ne,t)}});const Qs=ta({addN_:function(e){f(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),f(e.length>=1,()=>"Must pass at least one tensor to tf.addN(), but got "+e.length);const t=e.map((e,t)=>qr(e,"tensors"+t,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!x(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return Zr.runKernel(ae,r)}});const Ds=ta({all_:function(e,t=null,n=!1){const r={x:qr(e,"x","all","bool")},a={axis:t,keepDims:n};return Zr.runKernel("All",r,a)}});const Gs=ta({any_:function(e,t=null,n=!1){const r={x:qr(e,"x","any","bool")},a={axis:t,keepDims:n};return Zr.runKernel("Any",r,a)}});const Ls=ta({argMax_:function(e,t=0){const n={x:qr(e,"x","argMax")},r={axis:t};return Zr.runKernel(se,n,r)}});const _s=ta({argMin_:function(e,t=0){const n={x:qr(e,"x","argMin")},r={axis:t};return Zr.runKernel(oe,n,r)}});const Ws=ta({asin_:function(e){const t={x:qr(e,"x","asin")};return Zr.runKernel(ie,t)}});const $s=ta({asinh_:function(e){const t={x:qr(e,"x","asinh")};return Zr.runKernel(ue,t)}});const Ms=ta({atan_:function(e){const t={x:qr(e,"x","atan")};return Zr.runKernel(le,t)}});const Vs=ta({atan2_:function(e,t){let n=qr(e,"a","atan2"),r=qr(t,"b","atan2");[n,r]=Wr(n,r);const a={a:n,b:r};return Zr.runKernel(de,a)}});const Us=ta({atanh_:function(e){const t={x:qr(e,"x","atanh")};return Zr.runKernel(ce,t)}});function Xs(e,t,n,r,a="NHWC",s){return Ps(e,[...t,e[3]],n,s,r,null,null,to(a))}function Os(e,t,n,r,a,s,o="channelsLast"){const[i,u]=Ks(t);let l;if("channelsLast"===o)l=[i,u,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);l=[i,u,e[1],e[1]]}return Ps(e,l,n,r,a,s,!1,o)}function Zs(e,t,n,r,a,s,o="NDHWC"){const[i,u,l]=zs(t);let c,d;if("NDHWC"===o)d="channelsLast",c=[i,u,l,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat "+o);d="channelsFirst",c=[i,u,l,e[1],e[1]]}return Ys(e,c,n,r,a,!1,d,s)}function Ps(e,t,n,r,a,s,o=!1,i="channelsLast"){let[u,l,c,d]=[-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,d]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat "+i);[u,d,l,c]=e}const[p,h,,A]=t,[g,m]=Ks(n),[f,I]=Ks(r),y=Js(p,f),b=Js(h,I),{padInfo:C,outHeight:x,outWidth:E}=function(e,t,n,r,a,s,o,i,u){let l,c,d;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=Hs(e,t,n));const s=e[0],o=e[1],i=js((s-t+2*r)/n+1,a),u=js((o-t+2*r)/n+1,a);return[i,u]}([t,n],s,r,e,i);c=a[0],d=a[1]}else if("same"===e){c=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),i=Math.max(0,(d-1)*a+o-n),u=Math.floor(e/2),p=e-u,h=Math.floor(i/2);l={top:u,bottom:p,left:h,right:i-h,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),d=Math.ceil((n-o+1)/a);else{if("object"!=typeof e)throw Error("Unknown padding parameter: "+e);{const p="channelsLast"===u?e[1][0]:e[2][0],h="channelsLast"===u?e[1][1]:e[2][1],A="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];l={top:p,bottom:h,left:A,right:g,type:0===p&&0===h&&0===A&&0===g?"VALID":"EXPLICIT"},c=js((t-s+p+h)/r+1,i),d=js((n-o+A+g)/a+1,i)}}return{padInfo:l,outHeight:c,outWidth:d}}(a,l,c,g,m,y,b,s,i),w=o?A*d:A;let v;return"channelsFirst"===i?v=[u,w,x,E]:"channelsLast"===i&&(v=[u,x,E,w]),{batchSize:u,dataFormat:i,inHeight:l,inWidth:c,inChannels:d,outHeight:x,outWidth:E,outChannels:w,padInfo:C,strideHeight:g,strideWidth:m,filterHeight:p,filterWidth:h,effectiveFilterHeight:y,effectiveFilterWidth:b,dilationHeight:f,dilationWidth:I,inShape:e,outShape:v,filterShape:t}}function Ys(e,t,n,r,a,s=!1,o="channelsLast",i){let[u,l,c,d,p]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,d,p]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat "+o);[u,p,l,c,d]=e}const[h,A,g,,m]=t,[f,I,y]=zs(n),[b,C,x]=zs(r),E=Js(h,b),w=Js(A,C),v=Js(g,x),{padInfo:B,outDepth:R,outHeight:S,outWidth:T}=function(e,t,n,r,a,s,o,i,u,l,c){let d,p,h,A;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=Hs(e,t,r));const o=e[0],i=e[1],u=e[2],l=js((o-t+2*a)/r+1,s),c=js((i-t+2*a)/r+1,s),d=js((u-t+2*a)/r+1,s);return[l,c,d,n]}([t,n,r,1],i,1,a,e,c);p=s[0],h=s[1],A=s[2]}else if("same"===e){p=Math.ceil(t/a),h=Math.ceil(n/s),A=Math.ceil(r/o);const e=(p-1)*a+i-t,c=(h-1)*s+u-n,g=(A-1)*o+l-r,m=Math.floor(e/2),f=e-m,I=Math.floor(c/2),y=c-I,b=Math.floor(g/2);d={top:I,bottom:y,left:b,right:g-b,front:m,back:f,type:"SAME"}}else{if("valid"!==e)throw Error("Unknown padding parameter: "+e);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-i+1)/a),h=Math.ceil((n-u+1)/s),A=Math.ceil((r-l+1)/o)}return{padInfo:d,outDepth:p,outHeight:h,outWidth:A}}(a,l,c,d,f,I,y,E,w,v,i),k=s?m*p:m;let N;return"channelsFirst"===o?N=[u,k,R,S,T]:"channelsLast"===o&&(N=[u,R,S,T,k]),{batchSize:u,dataFormat:o,inDepth:l,inHeight:c,inWidth:d,inChannels:p,outDepth:R,outHeight:S,outWidth:T,outChannels:k,padInfo:B,strideDepth:f,strideHeight:I,strideWidth:y,filterDepth:h,filterHeight:A,filterWidth:g,effectiveFilterDepth:E,effectiveFilterHeight:w,effectiveFilterWidth:v,dilationDepth:b,dilationHeight:C,dilationWidth:x,inShape:e,outShape:N,filterShape:t}}function Hs(e,t,n,r=1){const a=Js(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function Ks(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function zs(e){return"number"==typeof e?[e,e,e]:e}function Js(e,t){return t<=1?e:e+(e-1)*(t-1)}function js(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode "+t)}}function qs(e){const[t,n,r]=Ks(e);return 1===t&&1===n&&1===r}function eo(e,t){return qs(e)||qs(t)}function to(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat "+e)}const no=ta({reshape_:function(e,t){const n={x:qr(e,"x","reshape","string_or_numeric")},r={shape:t};return Zr.runKernel(Nt,n,r)}});const ro=ta({avgPool_:function(e,t,n,r,a){const s=qr(e,"x","avgPool","float32");f(eo(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let o=s,i=!1;3===s.rank&&(i=!0,o=no(s,[1,s.shape[0],s.shape[1],s.shape[2]])),f(4===o.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),null!=a&&f(E(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=Zr.runKernel(pe,u,l);return c=Ma(c,s.dtype),i?no(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const ao=ta({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const o=qr(e,"x","avgPool3d","float32");let i=o,u=!1;4===o.rank&&(u=!0,i=no(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),f(5===i.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),f("NDHWC"===s,()=>"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),null!=a&&f(E(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const l={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let d=Zr.runKernel(he,l,c);return d=Ma(d,i.dtype),u?no(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const so=ta({concat_:function(e,t=0){f(e.length>=1,()=>"Pass at least one tensor to concat");const n=ea(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return Va(n[0]);const r=n,a={axis:t};return Zr.runKernel(xe,r,a)}});const oo=ta({sigmoid_:function(e){const t={x:qr(e,"x","sigmoid")};return Zr.runKernel(Ot,t)}});const io=ta({slice_:function(e,t,n){const r=qr(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return Zr.runKernel(Vt,a,s)}});const uo=ta({tanh_:function(e){const t={x:qr(e,"x","tanh")};return Zr.runKernel(on,t)}});const lo=ta({batchToSpaceND_:function(e,t,n){const r=qr(e,"x","batchToSpaceND"),a=t.reduce((e,t)=>e*t);f(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),f(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),f(r.shape[0]%a==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);const s={x:r},o={blockShape:t,crops:n};return Zr.runKernel(ge,s,o)}});const co=ta({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const o=qr(e,"x","batchNorm"),i=qr(t,"mean","batchNorm"),u=qr(n,"variance","batchNorm");let l,c;null!=a&&(l=qr(a,"scale","batchNorm")),null!=r&&(c=qr(r,"offset","batchNorm")),f(i.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),f(null==c||i.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),f(null==l||i.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:function(e){let t;return t=0===e.rank||1===e.rank?no(e,[1,1,1,e.size]):2===e.rank?no(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?no(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(o),scale:l,offset:c,mean:i,variance:u},p={varianceEpsilon:s},h=Zr.runKernel(Ze,d,p);return no(h,o.shape)}});const po=ta({bincount_:function(e,t,n){const r=qr(e,"x","bincount"),a=qr(t,"weights","bincount");f("int32"===r.dtype,()=>"Error in bincount: input dtype must be int32, but got "+r.dtype),f(n>=0,()=>`size must be non-negative, but got ${n}.`),f(a.size===r.size||0===a.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: `+a.shape+".");const s={x:r,weights:a},o={size:n};return Zr.runKernel(me,s,o)}});const ho=ta({broadcastArgs_:function(e,t){const n=qr(e,"s0","broadcastArgs","int32"),r=qr(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). Has rank "+n.rank);if(1!==r.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). Has rank "+r.rank);const a={s0:n,s1:r};return Zr.runKernel("BroadcastArgs",a)}});const Ao=ta({broadcastTo_:function(e,t){let n=qr(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=no(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return Va(n);const o={x:n},i={reps:s};return Zr.runKernel(un,o,i)}});const go=ta({ceil_:function(e){const t={x:qr(e,"x","ceil")};return Zr.runKernel(Ie,t)}});const mo=ta({clipByValue_:function(e,t,n){const r=qr(e,"x","clipByValue");f(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const a={x:r},s={clipValueMin:t,clipValueMax:n};return Zr.runKernel(ye,a,s)}});const fo=ta({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=qr(e,"x","conv2d"),u=qr(t,"filter","conv2d");let l=i,c=!1;3===i.rank&&(c=!0,l=no(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),f(4===u.rank,()=>"Error in conv2d: filter must be rank 4, but got rank "+u.rank+"."),null!=o&&f(E(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const d="NHWC"===a?l.shape[3]:l.shape[1];f(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),f(eo(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);const p={x:l,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},A=Zr.runKernel(Ee,p,h);return c?no(A,[A.shape[1],A.shape[2],A.shape[3]]):A}});const Io=ta({conv1d_:function(e,t,n,r,a="NWC",s=1,o){const i=qr(e,"x","conv1d"),u=qr(t,"filter","conv1d");let l=i,c=!1;2===i.rank&&(c=!0,l=no(i,[1,i.shape[0],i.shape[1]])),f(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),f(3===u.rank,()=>"Error in conv1d: filter must be rank 3, but got rank "+u.rank+"."),null!=o&&f(E(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`),f(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),f(eo(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),f("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const d=no(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=no(l,[l.shape[0],1,l.shape[1],l.shape[2]]),h=fo(p,d,[1,n],r,"NHWC",[1,s],o);return no(h,c?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}});const yo=ta({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",o){f(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let i=e,u=t,l=!1;3===t.rank&&(l=!0,u=no(t,[1,t.shape[0],t.shape[1],t.shape[2]]),i=[1,e[0],e[1],e[2]]),f(4===i.length,()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+i.length+"."),f(4===u.rank,()=>"Error in conv2dDerInput: dy must be rank 4, but got rank "+u.rank),f(4===n.rank,()=>"Error in conv2dDerInput: filter must be rank 4, but got rank "+n.rank);const c="NHWC"===s?i[3]:i[1],d="NHWC"===s?u.shape[3]:u.shape[1];f(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),f(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),null!=o&&f(E(a),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);const p={dy:u,filter:n},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,inputShape:i},A=Zr.runKernel(ve,p,h);return l?no(A,[A.shape[1],A.shape[2],A.shape[3]]):A}});const bo=ta({conv2dTranspose_:function(e,t,n,r,a,s){const o=qr(e,"x","conv2dTranspose"),i=qr(t,"filter","conv2dTranspose");return yo(n,o,i,r,a,"NHWC",s)}});const Co=ta({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const o=qr(e,"x","conv3d"),i=qr(t,"filter","conv3d");let u=o,l=!1;4===o.rank&&(l=!0,u=no(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),f(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),f(5===i.rank,()=>"Error in conv3d: filter must be rank 5, but got rank "+i.rank+"."),f(u.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${i.shape[3]}.`),f(eo(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),f("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`);const c={x:u,filter:i},d={strides:n,pad:r,dataFormat:a,dilations:s},p=Zr.runKernel(Be,c,d);return l?no(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});const xo=ta({cos_:function(e){const t={x:qr(e,"x","cos")};return Zr.runKernel("Cos",t)}});const Eo=ta({cosh_:function(e){const t={x:qr(e,"x","cosh")};return Zr.runKernel(Re,t)}});const wo=ta({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:qr(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return Zr.runKernel(Se,a,s)}});const vo=ta({denseBincount_:function(e,t,n,r=!1){const a=qr(e,"x","denseBincount"),s=qr(t,"weights","denseBincount");f("int32"===a.dtype,()=>"Error in denseBincount: input dtype must be int32, but got "+a.dtype),f(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),f(n>=0,()=>`size must be non-negative, but got ${n}.`),f(s.size===a.size||0===s.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: `+s.shape+".");const o={x:a,weights:s},i={size:n,binaryOutput:r};return Zr.runKernel(ke,o,i)}});const Bo=ta({depthToSpace_:function(e,t,n="NHWC"){const r=qr(e,"x","depthToSpace"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],o="NHWC"===n?r.shape[3]:r.shape[1];f(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),f(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`),f(o%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${o} for depthToSpace with input shape ${r.shape}`);const i={x:r},u={blockSize:t,dataFormat:n};return Zr.runKernel(Ne,i,u)}});const Ro=ta({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],o){const i=qr(e,"x","depthwiseConv2d"),u=qr(t,"filter","depthwiseConv2d");let l=i,c=!1;3===i.rank&&(c=!0,l=no(i,[1,i.shape[0],i.shape[1],i.shape[2]])),f(4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),f(4===u.rank,()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+u.rank+"."),f(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=o&&f(E(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`);const d={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o},h=Zr.runKernel(Fe,d,p);return c?no(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const So=ta({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const o=qr(e,"x","dilation2d"),i=qr(t,"filter","dilation2d");f(3===o.rank||4===o.rank,()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+o.rank+"."),f(3===i.rank,()=>"Error in dilation2d: filter must be rank 3, but got rank "+i.rank+"."),f("NHWC"===s,()=>"Error in dilation2d: Only NHWC is currently supported, but got dataFormat of "+s);let u=o,l=!1;3===o.rank&&(u=no(o,[1,o.shape[0],o.shape[1],o.shape[2]]),l=!0);const c={x:u,filter:i},d={strides:n,pad:r,dilations:a},p=Zr.runKernel(Ge,c,d);return l?no(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});function To(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,o=e[s]||1;(t[t.length-1-a]||1)>1&&1===o&&r.unshift(s)}return r}function ko(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,o=t[s];(null==a||1===a&&o>1)&&n.unshift(s)}return n}function No(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}const Fo=ta({equal_:function(e,t){let n=qr(e,"a","equal","string_or_numeric"),r=qr(t,"b","equal","string_or_numeric");[n,r]=Wr(n,r),No(n.shape,r.shape);const a={a:n,b:r};return Zr.runKernel(We,a)}});const Qo=ta({where_:function(e,t,n){const r=qr(t,"a","where"),a=qr(n,"b","where"),s=qr(e,"condition","where","bool"),o=No(No(s.shape,r.shape),a.shape),i={condition:Ao(s,o),t:Ao(r,o),e:Ao(a,o)};return Zr.runKernel($t,i)}});const Do=ta({zerosLike_:function(e){const t={x:qr(e,"x","zerosLike")};return Zr.runKernel(An,t)}});const Go=ta({divNoNan_:function(e,t){let n=qr(e,"a","div"),r=qr(t,"b","div");[n,r]=Wr(n,r);const a=Ss(n,r),s=Do(a),o=Fo(r,s);return Qo(o,s,a)}});const Lo=ta({einsum_:function(e,...t){const n=t.map((e,t)=>qr(e,"tensors"+t,"einsum")),r={equation:e};return Zr.runKernel(_e,n,r)}});const _o=ta({elu_:function(e){const t={x:qr(e,"x","elu")};return Zr.runKernel("Elu",t)}});const Wo=ta({erf_:function(e){let t=qr(e,"x","erf");f("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Ma(t,"float32"));const n={x:t};return Zr.runKernel("Erf",n)}});const $o=ta({exp_:function(e){const t={x:qr(e,"x","exp")};return Zr.runKernel("Exp",t)}});const Mo=ta({expandDims_:function(e,t=0){const n=qr(e,"x","expandDims","string_or_numeric");f(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},a={dim:t};return Zr.runKernel($e,r,a)}});const Vo=ta({expm1_:function(e){const t={x:qr(e,"x","expm1")};return Zr.runKernel(Me,t)}});const Uo=ta({tile_:function(e,t){const n=qr(e,"x","tile","string_or_numeric");f(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r={x:n},a={reps:t};return Zr.runKernel(un,r,a)}});function Xo(e,t,n){const r={shape:e,value:t,dtype:n};return Zr.runKernel(Ve,{},r)}const Oo=ta({floor_:function(e){const t={x:qr(e,"x","floor")};return Zr.runKernel(Xe,t)}});const Zo=ta({gather_:function(e,t,n=0,r=0){const a={x:qr(e,"x","gather"),indices:qr(t,"indices","gather","int32")},s={axis:n,batchDims:r};return Zr.runKernel(Pe,a,s)}});const Po=ta({greater_:function(e,t){let n=qr(e,"a","greater","string_or_numeric"),r=qr(t,"b","greater","string_or_numeric");[n,r]=Wr(n,r),No(n.shape,r.shape);const a={a:n,b:r};return Zr.runKernel(He,a)}});const Yo=ta({greaterEqual_:function(e,t){let n=qr(e,"a","greaterEqual","string_or_numeric"),r=qr(t,"b","greaterEqual","string_or_numeric");[n,r]=Wr(n,r),No(n.shape,r.shape);const a={a:n,b:r};return Zr.runKernel(Ke,a)}});const Ho=ta({imag_:function(e){const t={input:qr(e,"input","imag")};return Zr.runKernel(je,t)}});const Ko=ta({isNaN_:function(e){const t={x:qr(e,"x","isNaN")};return Zr.runKernel(qe,t)}});const zo=ta({leakyRelu_:function(e,t=.2){const n={x:qr(e,"x","leakyRelu")},r={alpha:t};return Zr.runKernel(et,n,r)}});const Jo=ta({less_:function(e,t){let n=qr(e,"a","less","string_or_numeric"),r=qr(t,"b","less","string_or_numeric");[n,r]=Wr(n,r),No(n.shape,r.shape);const a={a:n,b:r};return Zr.runKernel(tt,a)}});const jo=ta({lessEqual_:function(e,t){let n=qr(e,"a","lessEqual","string_or_numeric"),r=qr(t,"b","lessEqual","string_or_numeric");[n,r]=Wr(n,r),No(n.shape,r.shape);const a={a:n,b:r};return Zr.runKernel(nt,a)}});function qo(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return Zr.runKernel(rt,{},r)}const ei=ta({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=qr(e,"x","localResponseNormalization");f(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`),f(E(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let o=s,i=!1;3===s.rank&&(i=!0,o=no(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:o},l={depthRadius:t,bias:n,alpha:r,beta:a},c=Zr.runKernel("LRN",u,l);return i?no(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const ti=ta({log_:function(e){const t={x:qr(e,"x","log")};return Zr.runKernel("Log",t)}});const ni=ta({log1p_:function(e){const t={x:qr(e,"x","log1p")};return Zr.runKernel(at,t)}});function ri(e){return Zr.customGrad(e)}const ai=ta({neg_:function(e){const t={x:qr(e,"x","neg")};return Zr.runKernel("Neg",t)}});const si=ta({softplus_:function(e){const t={x:qr(e,"x","softplus")};return Zr.runKernel(Zt,t)}});const oi=ta({max_:function(e,t=null,n=!1){const r={x:qr(e,"x","max")},a={reductionIndices:t,keepDims:n};return Zr.runKernel("Max",r,a)}});const ii=ta({sub_:function(e,t){let n=qr(e,"a","sub"),r=qr(t,"b","sub");[n,r]=Wr(n,r);const a={a:n,b:r};return Zr.runKernel("Sub",a)}});const ui=ta({sum_:function(e,t=null,n=!1){let r=qr(e,"x","sum");"bool"===r.dtype&&(r=Ma(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Zr.runKernel("Sum",a,s)}});const li=ta({logSoftmax_:function(e,t=-1){const n=qr(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return ri((e,n)=>{const r=oi(e,t,!0),a=ii(e,r),s=ii(Ma(a,"float32"),ti(ui($o(a),t,!0)));n([s]);return{value:s,gradFunc:(e,n)=>{const[r]=n,a=$o(r);return ii(e,Ts(ui(e,t,!0),a))}}})(n)}});function ci(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function di(e,t,n){const r=e.length+t.length,a=[];let s=0,o=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?a.push(e[s++]):a.push(t[o++]);return a}function pi(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map(t=>e[t])]}function hi(e,t){return di(e,t.map(e=>1),t)}function Ai(e,t,n){f(ci(t,n),()=>e+" supports only inner-most axes for now. "+`Got axes ${t} and rank-${n} input.`)}function gi(e,t){if(ci(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function mi(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function fi(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Ii=ta({logicalAnd_:function(e,t){const n=qr(e,"a","logicalAnd","bool"),r=qr(t,"b","logicalAnd","bool");No(n.shape,r.shape);const a={a:n,b:r};return Zr.runKernel(st,a)}});const yi=ta({logicalNot_:function(e){const t={x:qr(e,"x","logicalNot","bool")};return Zr.runKernel(ot,t)}});const bi=ta({logicalOr_:function(e,t){const n=qr(e,"a","logicalOr","bool"),r=qr(t,"b","logicalOr","bool");No(n.shape,r.shape);const a={a:n,b:r};return Zr.runKernel(it,a)}});const Ci=ta({maxPool_:function(e,t,n,r,a){const s=qr(e,"x","maxPool");let o=s,i=!1;3===s.rank&&(i=!0,o=no(s,[1,s.shape[0],s.shape[1],s.shape[2]])),f(4===o.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),f(eo(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=a&&f(E(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const u={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=Zr.runKernel(lt,u,l);return i?no(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const xi=ta({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const o=qr(e,"x","maxPool3d");let i=o,u=!1;4===o.rank&&(u=!0,i=no(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),f(5===i.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),f("NDHWC"===s,()=>"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of "+s),null!=a&&f(E(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const l={x:i},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},d=Zr.runKernel(ct,l,c);return u?no(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const Ei=ta({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:qr(e,"x","maxPoolWithArgmax")},o={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},i=Zr.runKernel(dt,s,o);return{result:i[0],indexes:i[1]}}});const wi=ta({maximum_:function(e,t){let n=qr(e,"a","maximum"),r=qr(t,"b","maximum");[n,r]=Wr(n,r),"bool"===n.dtype&&(n=Ma(n,"int32"),r=Ma(r,"int32")),No(n.shape,r.shape);const a={a:n,b:r};return Zr.runKernel(ut,a)}});const vi=ta({mean_:function(e,t=null,n=!1){const r={x:qr(e,"x","mean")},a={axis:t,keepDims:n};return Zr.runKernel(pt,r,a)}});function Bi(e,t="float32"){if("complex64"===t){const t=Bi(e,"float32"),n=Bi(e,"float32");return na(t,n)}const n=V(C(e),t);return Zr.makeTensor(n,e,t)}function Ri(e,t="float32"){if("complex64"===t){const t=Ri(e,"float32"),n=Bi(e,"float32");return na(t,n)}const n=M(C(e),t);return Zr.makeTensor(n,e,t)}const Si=ta({min_:function(e,t=null,n=!1){const r={x:qr(e,"x","min")},a={axis:t,keepDims:n};return Zr.runKernel("Min",r,a)}});const Ti=ta({minimum_:function(e,t){let n=qr(e,"a","minimum"),r=qr(t,"b","minimum");[n,r]=Wr(n,r),"bool"===n.dtype&&(n=Ma(n,"int32"),r=Ma(r,"int32")),No(n.shape,r.shape);const a={a:n,b:r};return Zr.runKernel(ht,a)}});const ki=ta({mirrorPad_:function(e,t,n){f("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=qr(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");f(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)f(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),f(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape `+r.shape);const s={paddings:t,mode:n},o={x:r};return Zr.runKernel(At,o,s)}});const Ni=ta({mod_:function(e,t){let n=qr(e,"a","mod"),r=qr(t,"b","mod");[n,r]=Wr(n,r);const a={a:n,b:r};return Zr.runKernel("Mod",a)}});const Fi=ta({square_:function(e){const t=qr(e,"x","square");return Zr.runKernel("Square",{x:t},{})}});const Qi=ta({multinomial_:function(e,t,n,r=!1){const a=qr(e,"logits","multinomial"),s=a.size,o=a.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+s+".");if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is "+o);n=n||Math.random();const i={logits:1===o?no(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},l=Zr.runKernel(gt,i,u);return 1===o?no(l,[l.size]):l}});const Di=ta({notEqual_:function(e,t){let n=qr(e,"a","notEqual","string_or_numeric"),r=qr(t,"b","notEqual","string_or_numeric");[n,r]=Wr(n,r),No(n.shape,r.shape);const a={a:n,b:r};return Zr.runKernel(ft,a)}});const Gi=ta({onesLike_:function(e){const t={x:qr(e,"x","onesLike")};return Zr.runKernel(Ct,t)}});const Li=ta({pad_:function(e,t,n=0){const r=qr(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return Zr.runKernel(wt,s,a)}});const _i=ta({spaceToBatchND_:function(e,t,n){const r=qr(e,"x","spaceToBatchND");f(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),f(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),f(r.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const a={x:r},s={blockShape:t,paddings:n};return Zr.runKernel(Yt,a,s)}});const Wi=ta({pow_:function(e,t){let n=qr(e,"base","pow"),r=qr(t,"exp","pow");[n,r]=Wr(n,r);const a={a:n,b:r};return Zr.runKernel("Pow",a)}});const $i=ta({prelu_:function(e,t){const n={x:qr(e,"x","prelu"),alpha:qr(t,"alpha","prelu")};return Zr.runKernel(vt,n)}});const Mi=ta({prod_:function(e,t=null,n=!1){let r=qr(e,"x","prod");"bool"===r.dtype&&(r=Ma(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return Zr.runKernel(Bt,a,s)}});var Vi=u((function(e){!function(e,t,n){function r(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function a(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new r(e),s=t&&t.state,o=n.next;return o.int32=function(){return 4294967296*n.next()|0},o.double=function(){return o()+11102230246251565e-32*(2097152*o()|0)},o.quick=o,s&&("object"==typeof s&&a(s,n),o.state=function(){return a(n,{})}),o}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,e,!1)})),Ui=u((function(e){!function(e,t,n){function r(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new r(e),s=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,s&&("object"==typeof s&&a(s,n),o.state=function(){return a(n,{})}),o}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,e,!1)})),Xi=u((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function a(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,s&&("object"==typeof s&&a(s,n),o.state=function(){return a(n,{})}),o}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,e,!1)})),Oi=u((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n&&(r[7]=-1),e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function a(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,s&&(s.x&&a(s,n),o.state=function(){return a(n,{})}),o}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,e,!1)})),Zi=u((function(e){!function(e,t,n){function r(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,o,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(o=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(o=o+1640531527|0,a=0==(n=i[127&s]^=r+o)?a+1:0);for(a>=128&&(i[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=i[a+34&127],n=i[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[a]=r^n;e.w=o,e.X=i,e.i=a}(t,e)}function a(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new r(e),s=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,s&&(s.X&&a(s,n),o.state=function(){return a(n,{})}),o}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,e,!1)})),Pi=u((function(e){!function(e,t,n){function r(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function a(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new r(e),s=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,s&&("object"==typeof s&&a(s,n),o.state=function(){return a(n,{})}),o}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,e,!1)})),Yi=u((function(e){!function(t,r){var a,s=this,o=256,i=r.pow(o,6),u=r.pow(2,52),l=2*u,c=255;function d(e,n,c){var d=[],f=g(A((n=1==n?{entropy:!0}:n||{}).entropy?[e,m(t)]:null==e?function(){try{var e;return a&&(e=a.randomBytes)?e=e(o):(e=new Uint8Array(o),(s.crypto||s.msCrypto).getRandomValues(e)),m(e)}catch(e){var n=s.navigator,r=n&&n.plugins;return[+new Date,s,r,s.screen,m(t)]}}():e,3),d),I=new p(d),y=function(){for(var e=I.g(6),t=i,n=0;e<u;)e=(e+n)*o,t*=o,n=I.g(1);for(;e>=l;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|I.g(4)},y.quick=function(){return I.g(4)/4294967296},y.double=y,g(m(I.S),t),(n.pass||c||function(e,t,n,a){return a&&(a.S&&h(a,I),e.state=function(){return h(I,{})}),n?(r.random=e,t):e})(y,f,"global"in n?n.global:this==r,n.state)}function p(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<o;)i[a]=a++;for(a=0;a<o;a++)i[a]=i[s=c&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=c&a+1],n=n*o+i[c&(i[a]=i[s=c&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(o)}function h(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function A(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(A(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[c&a]=c&(n^=19*t[c&a])+r.charCodeAt(a++);return m(t)}function m(e){return String.fromCharCode.apply(0,e)}if(r.seedrandom=d,g(r.random(),t),e.exports){e.exports=d;try{a=n.default}catch(e){}}}([],Math)}));Yi.alea=Vi,Yi.xor128=Ui,Yi.xorwow=Xi,Yi.xorshift7=Oi,Yi.xor4096=Zi,Yi.tychei=Pi;var Hi=Yi;class Ki{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=Hi.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*o,t=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class zi{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Hi.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Ji=ta({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=$a(e,r),o=new zi(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=o.nextValue();return s.toTensor()}});function ji(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return Zr.runKernel(Rt,{},a)}const qi=ta({real_:function(e){const t={input:qr(e,"input","real")};return Zr.runKernel(St,t)}});const eu=ta({reciprocal_:function(e){const t={x:qr(e,"x","reciprocal")};return Zr.runKernel(Tt,t)}});const tu=ta({relu_:function(e){const t={x:qr(e,"x","relu")};return Zr.runKernel(kt,t)}});const nu=ta({relu6_:function(e){const t={x:qr(e,"x","relu6")};return Zr.runKernel(Dt,t)}});const ru=ta({reverse_:function(e,t){const n={x:qr(e,"x","reverse")},r={dims:t};return Zr.runKernel(Gt,n,r)}});const au=ta({round_:function(e){const t={x:qr(e,"x","round")};return Zr.runKernel(Lt,t)}});const su=ta({rsqrt_:function(e){const t={x:qr(e,"x","rsqrt")};return Zr.runKernel(_t,t)}});function ou(e,t){if((N(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&N(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ra(e,[],[],t)}const iu=ta({selu_:function(e){const t={x:qr(e,"x","selu")};return Zr.runKernel(Mt,t)}});const uu=async function(e,t){const n=qr(e,"x","setdiff1d"),r=qr(t,"y","setdiff1d");f(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),f(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),f(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const a=await n.data(),s=await r.data(),o=new Set(s);let i=0;for(let e=0;e<a.length;e++)o.has(a[e])||i++;const u=new vr([i],n.dtype),l=new vr([i],"int32");for(let e=0,t=0;e<a.length;e++)o.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]};const lu=ta({sign_:function(e){const t={x:qr(e,"x","sign")};return Zr.runKernel(Xt,t)}});const cu=ta({sin_:function(e){const t={x:qr(e,"x","sin")};return Zr.runKernel("Sin",t)}});const du=ta({sinh_:function(e){const t={x:qr(e,"x","sinh")};return Zr.runKernel(Ut,t)}});const pu=ta({softmax_:function(e,t=-1){const n=qr(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return Zr.runKernel(Kt,r,a)}});const hu=ta({fft_:function(e){f("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return Zr.runKernel("FFT",t)}});const Au=ta({ifft_:function(e){f("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return Zr.runKernel(Je,t)}});const gu=ta({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=no(e,[n,t]);r=Au(a)}else{const a=[n,2*(t-1)],s=no(qi(e),[n,t]),o=no(Ho(e),[n,t]),i=ru(io(s,[0,1],[n,t-2]),1),u=Ts(ru(io(o,[0,1],[n,t-2]),1),ou(-1)),l=so([s,i],1),c=so([o,u],1),d=no(na(l,c),[a[0],a[1]]);r=Au(d)}if(r=qi(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=no(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});const mu=ta({split_:function(e,t,n=0){const r={x:qr(e,"x","split")},a={numOrSizeSplits:t,axis:n};return Zr.runKernel(Ht,r,a)}});const fu=ta({rfft_:function(e,t){f("float32"===e.dtype,()=>"The dtype for rfft() must be real value but got "+e.dtype);let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map(e=>0),s=e.shape.map(e=>e);s[e.shape.length-1]=t,a=io(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,a=so([e,Bi(r)],e.shape.length-1),n=t}else a=e;const s=Do(a),o=no(na(a,s),[r,n]),i=hu(o),u=Math.floor(n/2)+1,l=qi(i),c=Ho(i),d=mu(l,[u,n-u],l.shape.length-1),p=mu(c,[u,n-u],c.shape.length-1),h=a.shape.slice();return h[a.shape.length-1]=u,no(na(d[0],p[0]),h)}});const Iu=ta({sqrt_:function(e){const t={x:qr(e,"x","sqrt")};return Zr.runKernel(Pt,t)}});const yu=ta({squaredDifference_:function(e,t){let n=qr(e,"a","squaredDifference"),r=qr(t,"b","squaredDifference");[n,r]=Wr(n,r),No(n.shape,r.shape);const a={a:n,b:r};return Zr.runKernel(tn,a,{})}});const bu=ta({squeeze_:function(e,t){const n=qr(e,"x","squeeze");return no(n,S(n.shape,t).newShape)}});const Cu=ta({stack_:function(e,t=0){const n=ea(e,"tensors","stack","string_or_numeric");f(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&f(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,a={axis:t};return Zr.runKernel(Et,r,a)}});const xu=ta({step_:function(e,t=0){const n={x:qr(e,"x","step")},r={alpha:t};return Zr.runKernel(gn,n,r)}});const Eu=ta({stridedSlice_:function(e,t,n,r,a=0,s=0,o=0,i=0,u=0){const l={x:qr(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:u};return Zr.runKernel(nn,l,c)}});const wu=ta({tan_:function(e){const t={x:qr(e,"x","tan")};return Zr.runKernel("Tan",t)}});function vu(e,t){y(e);const n=zr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ra(e,null,n,t)}const Bu=ta({topk_:function(e,t=1,n=!0){const r=qr(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got "+t);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got `+t);const s={x:r},o={k:t,sorted:n},[i,u]=Zr.runKernel(ln,s,o);return{values:i,indices:u}}});const Ru=ta({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Ki(t,n,r,!0,a),o=$a(e,r);for(let e=0;e<o.values.length;e++)o.values[e]=s.nextValue();return o.toTensor()}});const Su=ta({unique_:function(e,t=0){const n=qr(e,"x","unique","string_or_numeric");f(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},a={axis:t},[s,o]=Zr.runKernel(pn,r,a);return{values:s,indices:o}}});const Tu=ta({unstack_:function(e,t=0){const n=qr(e,"x","unstack","string_or_numeric");f(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},a={axis:t};return Zr.runKernel(hn,r,a)}});function ku(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=$a(e,"int32"),a=$a([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),o=t*e.length;a.values.set(s,o)}return a.toTensor()}const Nu=async function(e){const t=qr(e,"condition","whereAsync","bool"),n=await t.data(),r=ku(t.shape,n);return e!==t&&t.dispose(),r};const Fu=ta({scatterND_:function(e,t,n){const r=qr(e,"indices","scatterND","int32"),a=qr(t,"updates","scatterND");rs(a,r,n);const s={indices:r,updates:a},o={shape:n};return Zr.runKernel(Wt,s,o)}});const Qu=ta({sparseToDense_:function(e,t,n,r=0){const a=qr(e,"sparseIndices","sparseToDense","int32"),s=qr(t,"sparseValues","sparseToDense"),o=qr(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,o);const i={sparseIndices:a,sparseValues:s,defaultValue:o},u={outputShape:n};return Zr.runKernel(en,i,u)}});const Du=ta({gatherND_:function(e,t){const n=qr(t,"indices","gatherND","int32"),r={params:qr(e,"x","gatherND","string_or_numeric"),indices:n};return Zr.runKernel(Ye,r)}});const Gu=ta({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",o){let i=e;3===e.rank&&(i=no(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=no(t,[1,t.shape[0],t.shape[1],t.shape[2]])),f(4===i.rank,()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+i.shape+"."),f(4===u.rank,()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+u.shape+"."),f(4===n.length,()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+n+".");const l="NHWC"===s?i.shape[3]:i.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];f(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),f(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),null!=o&&f(E(a),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${o} but got pad ${a}.`);const d={x:i,dy:u},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:o,filterShape:n};return Zr.runKernel(we,d,p)}});function Lu(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Ts(e,xu(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function _u(e,t){let n=t;const r=ko(e.shape,t.shape);return r.length>0&&(n=ui(n,r)),no(n,e.shape)}function Wu(e,t,n,r){if("linear"===t)return e;if("relu"===t)return tu(e);if("elu"===t)return _o(e);if("relu6"===t)return nu(e);if("prelu"===t)return $i(e,n);if("leakyrelu"===t)return zo(e,r);if("sigmoid"===t)return oo(e);throw new Error(`Unknown fused activation ${t}.`)}const $u=(e,t)=>!(e>0)||"linear"===t;const Mu=ta({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===$u(Zr.state.gradientDepth,u)){let d=fo(e,t,n,r,a,s,o);return null!=i&&(d=Bs(d,i)),Wu(d,u,l,c)}const d=qr(e,"x","conv2d"),p=qr(t,"filter","conv2d");let h=d,A=!1;3===d.rank&&(A=!0,h=no(d,[1,d.shape[0],d.shape[1],d.shape[2]])),f(4===h.rank,()=>"Error in fused conv2d: input must be rank 4, but got rank "+h.rank+"."),f(4===p.rank,()=>"Error in fused conv2d: filter must be rank 4, but got rank "+p.rank+"."),null!=o&&f(E(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${o} but got pad ${r}.`),f(h.shape[3]===p.shape[2],()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`),f(eo(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),f("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const g=Ps(h.shape,p.shape,n,s,r,o);let m,I;null!=i&&(m=qr(i,"bias","fused conv2d"),[m]=Wr(m,d),No(g.outShape,m.shape)),null!=l&&(I=qr(l,"prelu weights","fused conv2d"));const y=(e,t)=>{const[a,o,i,l]=t,c=Lu(e,i,u);f(qs(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const d=[yo(o.shape,c,a,n,r),Gu(o,c,a.shape,n,r)];if(null!=l){const e=_u(l,c);d.push(e)}return d},b={x:h,filter:p,bias:m,preluActivationWeights:I},C={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:c};if(null==i){return ri((e,t,n)=>{let r=Zr.runKernel(yn,b,C);return n([t,e,r]),A&&(r=no(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}})(h,p)}return ri((e,t,n,r)=>{let a=Zr.runKernel(yn,b,C);return r([t,e,a,n]),A&&(a=no(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}})(h,p,m)}});const Vu=ta({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],o){let i=e;3===e.rank&&(i=no(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=no(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:i,dy:u},c={strides:r,pad:a,dimRoundingMode:o,dilations:s,filterShape:n};return Zr.runKernel(Qe,l,c)}});const Uu=ta({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],o){let i=t,u=!1;3===t.rank&&(u=!0,i=no(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:i,filter:n},c={strides:r,pad:a,dimRoundingMode:o,dilations:s,inputShape:e},d=Zr.runKernel(De,l,c);return u?no(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});const Xu=ta({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:o,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===$u(Zr.state.gradientDepth,u)){let d=Ro(e,t,n,r,a,s,o);return null!=i&&(d=Bs(d,i)),Wu(d,u,l,c)}const d=qr(e,"x","depthwiseConv2d"),p=qr(t,"filter","depthwiseConv2d");let h=d,A=!1;3===d.rank&&(A=!0,h=no(d,[1,d.shape[0],d.shape[1],d.shape[2]])),f(4===h.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),f(4===p.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),f(h.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),null==s&&(s=[1,1]),f(eo(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),null!=o&&f(E(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${o} but got pad ${r}.`);const g=Ps(h.shape,p.shape,n,s,r,o,!0);let m,I;null!=i&&(m=qr(i,"bias","fused conv2d"),[m]=Wr(m,d),No(g.outShape,m.shape)),null!=l&&(I=qr(l,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{f(qs(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[a,i,l,c]=t,d=Lu(e,l,u),p=Uu(i.shape,d,a,n,r,s,o),h=Vu(i,d,a.shape,n,r,s,o);if(null!=c){return[p,h,_u(m,d)]}return[p,h]},b={x:h,filter:p,bias:m,preluActivationWeights:I},C={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:o,activation:u,leakyreluAlpha:c};if(null==i){return ri((e,t,n)=>{let r=Zr.runKernel(bn,b,C);return n([t,e,r]),A&&(r=no(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}})(h,p)}return ri((e,t,n,r)=>{let a=Zr.runKernel(bn,b,C);return r([t,e,a,n]),A&&(a=no(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:y}})(h,p,m)}});const Ou=ta({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:o,leakyreluAlpha:i}){if(!1===$u(Zr.state.gradientDepth,s)){let u=za(e,t,n,r);return null!=a&&(u=Bs(u,a)),Wu(u,s,o,i)}let u=qr(e,"a","fused matMul"),l=qr(t,"b","fused matMul");[u,l]=Wr(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],h=r?l.shape[l.rank-2]:l.shape[l.rank-1],A=u.shape.slice(0,-2),g=l.shape.slice(0,-2),m=C(A),I=C(g);f(u.rank>=2&&l.rank>=2&&u.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`),f(x(A,g),()=>`Error in fused matMul: outer dimensions (${A}) and (${g}) of Tensors with shapes ${u.shape} and `+l.shape+" must match."),f(c===d,()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const y=u.shape.slice(0,-2).concat([p,h]),b=no(u,n?[m,c,p]:[m,p,c]),E=no(l,r?[I,h,d]:[I,d,h]);let w,v;null!=a&&(w=qr(a,"bias","fused matMul"),[w]=Wr(w,u),No(y,w.shape)),null!=o&&(v=qr(o,"prelu weights","fused matMul"));const B=(e,t)=>{const[o,i,u,l]=t,c=Lu(no(e,u.shape),u,s);let d,p;if(n||r?!n&&r?(d=za(c,i,!1,!1),p=za(c,o,!0,!1)):n&&!r?(d=za(i,c,!1,!0),p=za(o,c,!1,!1)):(d=za(i,c,!0,!0),p=za(c,o,!0,!0)):(d=za(c,i,!1,!0),p=za(o,c,!0,!1)),null!=a){return[d,p,_u(l,c)]}return[d,p]},R={a:b,b:E,bias:w,preluActivationWeights:v},S={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:i};if(null==a){return ri((e,t,n)=>{const r=Zr.runKernel(In,R,S);return n([e,t,r]),{value:no(r,y),gradFunc:B}})(b,E)}return ri((e,t,n,r)=>{const a=Zr.runKernel(In,R,S);return r([e,t,a,n]),{value:no(a,y),gradFunc:B}})(b,E,w)}});const Zu=ta({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const o=qr(e,"image","cropAndResize"),i=qr(t,"boxes","cropAndResize","float32"),u=qr(n,"boxInd","cropAndResize","int32"),l=i.shape[0];f(4===o.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`),f(2===i.rank&&4===i.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${i.shape}.`),f(1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${i.shape}.`),f(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),f(r[0]>=1&&r[1]>=1,()=>"cropSize must be atleast [1,1], but was "+r),f("bilinear"===a||"nearest"===a,()=>"method must be bilinear or nearest, but was "+a);const c={image:o,boxes:i,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return Zr.runKernel(Te,c,d)}});const Pu=ta({flipLeftRight_:function(e){const t=qr(e,"image","flipLeftRight","float32");f(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return Zr.runKernel(Ue,n,{})}});const Yu=ta({grayscaleToRGB_:function(e){const t=qr(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];f(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),f(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Uo(t,a)}});const Hu=ta({rotateWithOffset_:function(e,t,n=0,r=.5){const a=qr(e,"image","rotateWithOffset","float32");f(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const s={image:a},o={radians:t,fillValue:n,center:r};return Zr.runKernel(fn,s,o)}});function Ku(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),f(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),f(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),f(4===e.shape[1],()=>"boxes must have 4 columns, but 2nd dimension was "+e.shape[1]),f(1===t.rank,()=>"scores must be a 1D tensor"),f(t.shape[0]===o,()=>`scores has incompatible shape with boxes. Expected ${o}, but was `+t.shape[0]),f(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const zu=ta({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=qr(e,"boxes","nonMaxSuppression"),o=qr(t,"scores","nonMaxSuppression"),i=Ku(s,o,n,r,a),u={maxOutputSize:n=i.maxOutputSize,iouThreshold:r=i.iouThreshold,scoreThreshold:a=i.scoreThreshold};return Zr.runKernel(It,{boxes:s,scores:o},u)}});function Ju(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,o=!1;for(;r<a;){s=r+(a-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(a=s,o=!i)}return o?r:-r-1}(e,t,n||ju)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function ju(e,t){return e>t?1:e<t?-1:0}function qu(e,t,n,r,a){return nl(e,t,n,r,a,0)}function el(e,t,n,r,a,s){return nl(e,t,n,r,a,0,!1,s,!0)}function tl(e,t,n,r,a,s){return nl(e,t,n,r,a,s,!0)}function nl(e,t,n,r,a,s,o=!1,i=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(sl);const c=s>0?-.5/s:0,d=[],p=[];for(;d.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:o}=t;if(n<a)break;let i=!1;for(let n=d.length-1;n>=o;--n){const o=rl(e,s,d[n]);if(o>=r){i=!0;break}if(t.score=t.score*al(r,c,o),t.score<=a)break}t.suppressBeginIndex=d.length,i||(t.score===n?(d.push(s),p.push(t.score)):t.score>a&&Ju(l,t,sl))}const h=d.length,A=n-h;i&&A>0&&(d.push(...new Array(A).fill(0)),p.push(...new Array(A).fill(0)));const g={selectedIndices:d};return o&&(g.selectedScores=p),u&&(g.validOutputs=h),g}function rl(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),o=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(i-s)*(u-o),A=(d-l)*(p-c);if(h<=0||A<=0)return 0;const g=Math.max(s,l),m=Math.max(o,c),f=Math.min(i,d),I=Math.min(u,p),y=Math.max(f-g,0)*Math.max(I-m,0);return y/(h+A-y)}function al(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function sl(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const ol=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=qr(e,"boxes","nonMaxSuppressionAsync"),o=qr(t,"scores","nonMaxSuppressionAsync"),i=Ku(s,o,n,r,a);n=i.maxOutputSize,r=i.iouThreshold,a=i.scoreThreshold;const u=await Promise.all([s.data(),o.data()]),l=u[0],c=u[1],{selectedIndices:d}=qu(l,c,n,r,a);return s!==e&&s.dispose(),o!==t&&o.dispose(),vu(d,"int32")};const il=ta({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=qr(e,"boxes","nonMaxSuppression"),i=qr(t,"scores","nonMaxSuppression"),u=Ku(o,i,n,r,a,s),l={boxes:o,scores:i},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},d=Zr.runKernel(bt,l,c);return{selectedIndices:d[0],selectedScores:d[1]}}});const ul=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const o=qr(e,"boxes","nonMaxSuppressionAsync"),i=qr(t,"scores","nonMaxSuppressionAsync"),u=Ku(o,i,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),c=l[0],d=l[1],{selectedIndices:p,selectedScores:h}=tl(c,d,n,r,a,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:vu(p,"int32"),selectedScores:vu(h)}};const ll=ta({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=qr(e,"boxes","nonMaxSuppression"),i=qr(t,"scores","nonMaxSuppression"),u=Ku(o,i,n,r,a,null),l={boxes:o,scores:i},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},d=Zr.runKernel(yt,l,c);return{selectedIndices:d[0],validOutputs:d[1]}}});const cl=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const o=qr(e,"boxes","nonMaxSuppressionAsync"),i=qr(t,"scores","nonMaxSuppressionAsync"),u=Ku(o,i,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,[p,h]=await Promise.all([o.data(),i.data()]),{selectedIndices:A,validOutputs:g}=el(p,h,l,c,d,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:vu(A,"int32"),validOutputs:ou(g,"int32")}};const dl=ta({resizeBilinear_:function(e,t,n=!1,r=!1){const a=qr(e,"images","resizeBilinear");f(3===a.rank||4===a.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),f(2===t.length,()=>"Error in resizeBilinear: new shape must 2D, but got shape "+t+"."),f(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,o=!1;3===a.rank&&(o=!0,s=no(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const i={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=Zr.runKernel(Qt,i,u);return o?no(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const pl=ta({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=qr(e,"images","resizeNearestNeighbor");f(3===a.rank||4===a.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),f(2===t.length,()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+t+"."),f("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),f(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,o=!1;3===a.rank&&(o=!0,s=no(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const i={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=Zr.runKernel(Ft,i,u);return o?no(l,[l.shape[1],l.shape[2],l.shape[3]]):l}});const hl=ta({threshold_:function(e,t="binary",n=!1,r=.5){const a=qr(e,"image","threshold"),s=a.shape[0]*a.shape[1];let o,i,u,l,c=Ts(vu([r]),255);if(f(3===a.rank,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),f(3===a.shape[2]||1===a.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),f("int32"===a.dtype||"float32"===a.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),f("otsu"===t||"binary"===t,()=>"Method must be binary or otsu, but was "+t),3===a.shape[2]){[o,i,u]=mu(a,[1,1,1],-1);const e=Ts(o,.2989),t=Ts(i,.587),n=Ts(u,.114);l=Bs(Bs(e,t),n)}else l=e;if("otsu"===t){c=function(e,t){let n,r,a,s,o,i,u=vu([-1]),l=vu([0]),c=vu([0]);for(let d=0;d<e.size-1;d++){n=io(e,0,d+1),r=io(e,d+1),o=Ss(ui(n),t),i=Ss(ui(r),t);const p=ui(Ts(n,ji(0,n.size)));a=Ss(p,ui(n));const h=Xo(r.shape,n.size),A=Bs(ji(0,r.size),h),g=Ts(r,A);s=Ss(ui(g),ui(r));const m=ii(a,s),f=ii(a,s),I=Ts(o,i);c=Ts(Ts(I,m),f);const y=Po(c,l);l=Qo(y,c,l),u=Qo(y,vu([d]),u)}return u}(po(Ma(au(l),"int32"),aa([]),256),s)}const d=n?jo(l,c):Po(l,c);return Ma(Ts(d,255),"int32")}});const Al=ta({transform_:function(e,t,n="nearest",r="constant",a=0,s){const o=qr(e,"image","transform","float32"),i=qr(t,"transforms","transform","float32");f(4===o.rank,()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`),f(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),f(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);const u={image:o,transforms:i},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return Zr.runKernel(cn,u,l)}});const gl=ta({sparseFillEmptyRows_:function(e,t,n,r){const a=qr(e,"indices","sparseFillEmptyRows"),s=qr(t,"values","sparseFillEmptyRows"),o=qr(n,"denseShape","sparseFillEmptyRows"),i=qr(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error("Indices should be Tensor2D but received shape\n        "+a.shape);if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape "+s.shape);if(1!==o.rank)throw new Error("Dense shape should be Tensor1D but received shape "+o.shape);if(0!==i.rank)throw new Error("Default value should be a scalar but received shape "+i.shape);const u={indices:a,values:s,denseShape:o,defaultValue:i},l=Zr.runKernel(zt,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}});const ml=ta({sparseReshape_:function(e,t,n){const r=qr(e,"inputIndices","sparseReshape"),a=qr(t,"inputShape","sparseReshape"),s=qr(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error("Input indices should be Tensor2D but received shape\n        "+r.shape);if(1!==a.rank)throw new Error("Input shape should be Tensor1D but received shape "+a.shape);if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape "+s.shape);const o={inputIndices:r,inputShape:a,newShape:s},i=Zr.runKernel(Jt,o);return{outputIndices:i[0],outputShape:i[1]}}});const fl=ta({sparseSegmentMean_:function(e,t,n){const r=qr(e,"data","sparseSegmentMean"),a=qr(t,"indices","sparseSegmentMean"),s=qr(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n          "+a.shape);if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          "+s.shape);const o={data:r,indices:a,segmentIds:s};return Zr.runKernel(jt,o)}});const Il=ta({sparseSegmentSum_:function(e,t,n){const r=qr(e,"data","sparseSegmentSum"),a=qr(t,"indices","sparseSegmentSum"),s=qr(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error("Indices should be Tensor1D but received shape\n         "+a.shape);if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         "+s.shape);const o={data:r,indices:a,segmentIds:s};return Zr.runKernel(qt,o)}});const yl=ta({stringNGrams_:function(e,t,n,r,a,s,o,i){const u=qr(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error("Data must be a vector, saw: "+u.shape);const l=qr(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:o,preserveShortSequences:i},d={data:u,dataSplits:l},p=Zr.runKernel(rn,d,c);return{nGrams:p[0],nGramsSplits:p[1]}}});const bl=ta({stringSplit_:function(e,t,n=!0){const r=qr(e,"input","stringSplit","string"),a=qr(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error("Input should be Tensor1D but received shape "+r.shape);if(0!==a.rank)throw new Error("Delimiter should be a scalar but received shape "+a.shape);const s={skipEmpty:n},o={input:r,delimiter:a},i=Zr.runKernel(an,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});const Cl=ta({stringToHashBucketFast_:function(e,t){const n=qr(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return Zr.runKernel(sn,a,r)}}),xl={flipLeftRight:Pu,grayscaleToRGB:Yu,resizeNearestNeighbor:pl,resizeBilinear:dl,rotateWithOffset:Hu,cropAndResize:Zu,nonMaxSuppression:zu,nonMaxSuppressionAsync:ol,nonMaxSuppressionWithScore:il,nonMaxSuppressionWithScoreAsync:ul,nonMaxSuppressionPadded:ll,nonMaxSuppressionPaddedAsync:cl,threshold:hl,transform:Al},El={sparseFillEmptyRows:gl,sparseReshape:ml,sparseSegmentMean:fl,sparseSegmentSum:Il},wl={stringNGrams:yl,stringSplit:bl,stringToHashBucketFast:Cl};function vl(e,t){const n=e[0].length;e.forEach((e,t)=>{f(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),f(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)f(s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function Bl(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function Rl(e){return e<=30?e:L(e,Math.floor(Math.sqrt(e)))}function Sl(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Tl(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function kl(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Nl(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Fl(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Ql(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}const Dl=1.7580993408473768,Gl=1.0507009873554805,Ll=.3275911,_l=.254829592,Wl=-.284496736,$l=1.421413741,Ml=-1.453152027,Vl=1.061405429;function Ul(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}const Xl="->",Ol=/->/g;function Zl(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Ol,"").length)/Xl.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split(Xl);f(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const s=r.split(","),o=s.length;if(t!==o)throw new Error(`Expected ${o} input tensors, received ${t}`);if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some(e=>-1!==e.indexOf(t)))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===i.indexOf(t)&&i.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===i.indexOf(t)&&","!==t&&i.push(t)}const u=new Array(s.length);for(let e=0;e<o;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(i.indexOf(s[e][t]))}const l=i.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:i,summedDims:c,idDims:u}}function Pl(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function Yl(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:f(r[t[e][n]]===a[n],()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension `+a[n])}}function Hl(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=zl(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function Kl(e){return e.every((e,t)=>e===t)}function zl(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Jl(e,t,n=0){let r=[];if("number"==typeof t)f(e.shape[n]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{f(t.reduce((e,t)=>(-1===t&&(e+=1),e),0)<=1,()=>"There should be only one negative value in split array.");const a=t.indexOf(-1);if(-1!==a){const r=t.reduce((e,t)=>t>0?e+t:e);t[a]=e.shape[n]-r}f(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function jl(e,t){let n,r=!1;for(e<=30?(n=e,r=!0):n=L(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=L(e,n+1);return n}function ql(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function ec(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const o=e.shape[n],i=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)i.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)i.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)i.push(t.shape[e]);for(let t=n+1;t<s;t++)i.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:o,outputShape:i}}var tc=Object.freeze({__proto__:null,segOpComputeOptimalWindowSize:jl,computeOutShape:ql,collectGatherOpShapeInfo:ec});function nc(e){try{return e.map(e=>mr(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8, error: "+e)}}function rc(e){return e.map(e=>gr(e))}var ac,sc,oc=Object.freeze({__proto__:null,slice_util:Cs,segment_util:tc,fromUint8ToStringArray:nc,fromStringArrayToUint8:rc,upcastType:Lr,axesAreInnerMostDims:ci,combineLocations:di,computeOutAndReduceShapes:pi,expandShapeToKeepDim:hi,assertAxesAreInnerMostDims:Ai,getAxesPermutation:gi,getUndoAxesPermutation:mi,getInnerMostAxes:fi,getBroadcastDims:To,getReductionAxes:ko,assertAndGetBroadcastShape:No,assertParamsConsistent:vl,computeOutShape:Bl,computeDilation2DInfo:Xs,computePool2DInfo:Os,computePool3DInfo:Zs,computeConv2DInfo:Ps,computeConv3DInfo:Ys,computeDefaultPad:Hs,tupleValuesAreOne:qs,eitherStridesOrDilationsAreOne:eo,convertConv2DDataFormat:to,getFusedDyActivation:Lu,getFusedBiasGradient:_u,applyActivation:Wu,shouldFuse:$u,PARALLELIZE_THRESHOLD:30,computeOptimalWindowSize:Rl,getImageCenter:Sl,getReshaped:Tl,getPermuted:kl,getReshapedPermuted:Nl,getSliceBeginCoords:Fl,getSliceSize:Ql,prepareAndValidate:ts,validateUpdateShape:ns,validateInput:rs,calculateShapes:as,SELU_SCALEALPHA:Dl,SELU_SCALE:Gl,ERF_P:Ll,ERF_A1:_l,ERF_A2:Wl,ERF_A3:$l,ERF_A4:Ml,ERF_A5:Vl,warn:P,log:function(...e){z().getBool("IS_TEST")||z().getBool("PROD")||console.log(...e)},mergeRealAndImagArrays:Ul,splitRealAndImagArrays:function(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}},complexWithEvenIndex:function(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}},complexWithOddIndex:function(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}},getComplexWithIndex:function(e,t){return{real:e[2*t],imag:e[2*t+1]}},assignToTypedArray:function(e,t,n,r){e[2*r]=t,e[2*r+1]=n},exponents:function(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}},exponent:function(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}},decodeEinsumEquation:Zl,getEinsumPermutation:Pl,checkEinsumDimSizes:Yl,getEinsumComputePath:Hl,isIdentityPermutation:Kl,prepareSplitSize:Jl});!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(ac||(ac={})),function(e){var t;(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(sc||(sc={}));const ic={};function uc(e){return ic[e]}function lc(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return cc(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type){return t.inputNames.slice(e,o).map(e=>cc(e,n,r,a))}const i=cc(t.inputNames.slice(e)[0],n,r,a),u=i.dataSync();return"number"===s.type?u[0]:$(i.shape,u)}const o=t.attrParams[e];return o&&o.value}function cc(e,t,n,r){const[a,s]=hc(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const o=n.currentContextIds.find(e=>!!t[pc(a,e)]);return void 0!==o?t[pc(a,o)][s]:void 0}function dc(e,t){const[n,r,a]=hc(e);return[pc(n,t&&t.currentContextId),r,a]}function pc(e,t){return t?`${e}-${t}`:e}function hc(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function Ac(e,t,n){let r=lc("pad",e,t,n);if("explicit"===r){r=lc("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function gc(e){return e.kept?e:Va(e)}var mc=Object.freeze({__proto__:null,json:[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]});var fc=Object.freeze({__proto__:null,json:[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]});var Ic=Object.freeze({__proto__:null,json:[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]});var yc=Object.freeze({__proto__:null,json:[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]});var bc=Object.freeze({__proto__:null,json:[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]});var Cc=Object.freeze({__proto__:null,json:[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]});var xc=Object.freeze({__proto__:null,json:[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]});var Ec=Object.freeze({__proto__:null,json:[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]});var wc=Object.freeze({__proto__:null,json:[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]});var vc=Object.freeze({__proto__:null,json:[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]});var Bc=Object.freeze({__proto__:null,json:[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]});var Rc=Object.freeze({__proto__:null,json:[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}]});var Sc=Object.freeze({__proto__:null,json:[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]});var Tc=Object.freeze({__proto__:null,json:[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]});var kc=Object.freeze({__proto__:null,json:[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]});var Nc=Object.freeze({__proto__:null,json:[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}]});var Fc=Object.freeze({__proto__:null,json:[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]});var Qc=Object.freeze({__proto__:null,json:[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}]});var Dc=Object.freeze({__proto__:null,json:[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}]});class Gc{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[mc,fc,Ic,yc,bc,Cc,xc,Ec,wc,vc,Bc,Rc,Sc,Tc,kc,Nc,Fc,Qc,Dc].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],o=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e),{});let i=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(o);d.forEach(e=>{const t=o[e];t.inputNames.forEach((e,n)=>{const[r,,a]=dc(e),s=o[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)})}),0===Object.keys(c).length?d.forEach(e=>{const t=o[e];0===t.children.length&&u.push(t)}):Object.keys(c).forEach(e=>{const[t]=dc(e),n=o[t];null!=n&&(n.signatureKey=c[e],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(e=>{const[t]=dc(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))}):i=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const h={nodes:o,inputs:i,outputs:u,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=uc(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.substr(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let a=void 0;switch(n.type){case"string":a=_c(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_c(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=Yc(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Yc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=$c(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=$c(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=Pc(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Pc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=Wc(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Wc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=Kc(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Kc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=Zc(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Zc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=Hc(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Hc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=Uc(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Uc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=Xc(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Xc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=Vc(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Vc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const a=[],s=[];e.signature.inputArg.forEach(e=>{const[t]=dc(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Mc(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n});Object.keys(r).forEach(e=>{const t=r[e];t.inputNames.forEach((e,n)=>{const[a,,s]=dc(e),o=r[a];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(o),o.children.push(t)})});const o=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=dc(o[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))});const i=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function Lc(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=z().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function _c(e,t,n,r=!1){const a=e[t];return null!=a?Lc(a.s,r):n}function Wc(e,t,n){const r=e[t];return r?r.b:n}function $c(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function Mc(e){switch("string"==typeof e&&(e=ac[e]),e){case ac.DT_FLOAT:return"float32";case ac.DT_INT32:case ac.DT_INT64:case ac.DT_INT8:case ac.DT_UINT8:return"int32";case ac.DT_BOOL:return"bool";case ac.DT_DOUBLE:return"float32";case ac.DT_STRING:return"string";default:return null}}function Vc(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function Uc(e,t,n){const r=e[t];return r&&r.type?Mc(r.type):n}function Xc(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>Mc(e)):n}function Oc(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function Zc(e,t,n){const r=e[t];return r&&r.shape?Oc(r.shape):n}function Pc(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function Yc(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>Lc(e,r)):n}function Hc(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>Oc(e)):n}function Kc(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class zc{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return cc(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return cc(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return $c(this.node.rawAttrs,e,t);if(null!=n.s)return _c(this.node.rawAttrs,e,t);if(null!=n.b)return Wc(this.node.rawAttrs,e,t);if(null!=n.shape)return Zc(this.node.rawAttrs,e,t);if(null!=n.type)return Uc(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Pc(this.node.rawAttrs,e,t);if(null!=n.list.s)return Yc(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Hc(this.node.rawAttrs,e,t);if(null!=n.list.b)return Kc(this.node.rawAttrs,e,t);if(null!=n.list.type)return Xc(this.node.rawAttrs,e,t)}return t}}function Jc(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){f(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){const a=e[r],s=t[r];f(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function jc(e){return"number"!=typeof e&&!e.some(e=>e<0)}function qc(e,t,n){let r=ed(e,n);const a=!jc(r);if(a&&0===t.length)throw new Error("Tried to calculate elements of an empty list with non-fully-defined elementShape: "+r);if(a&&t.forEach(e=>{r=ed(e.shape,r)}),!jc(r))throw new Error("Non-fully-defined elementShape: "+r);return r}function ed(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class td{constructor(e,t,n,r,a,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=ou(0),ws(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Jc(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ws(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return aa([],[0].concat(this.elementShape));const n=this.readMany(e);return Jc(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Cu(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return aa([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return Jc(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),so(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Tu(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];Es(()=>{t=no(t,[1,n,a]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:r[n-1],0],i=[1,e[n],a];s[n]=no(io(t,o,i),this.elementShape)}return s});const o=[];for(let t=0;t<e.length;t++)o[t]=t;this.writeMany(o,s)}}class nd{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Jc(t,e.shape,"TensorList shape mismatch: "),ws(e)}),this.idTensor=ou(0),this.maxNumElements=r,ws(this.idTensor)}get id(){return this.idTensor.id}copy(){return new nd([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Jc(e,this.elementShape,"TensorList shape mismatch: ");const r=qc(this.elementShape,this.tensors,e);return Es(()=>{const e=this.tensors.map(e=>no(e,r));return Cu(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=qc(this.elementShape,this.tensors,e),r=this.tensors.pop();return Jc(r.shape,e,"TensorList shape mismatch: "),no(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Jc(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ws(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: "+e);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Jc(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=qc(this.elementShape,this.tensors,t);return no(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Jc(this.elementShape,t.shape,"TensorList shape mismatch: "),ws(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Jc(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=qc(this.elementShape,this.tensors,n);return 0===e.length?aa([],[0].concat(r)):Es(()=>{const t=e.map(e=>no(this.tensors[e],r));return Cu(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Jc(this.elementShape,t,"TensorList shape mismatch: ");const n=qc(this.elementShape,this.tensors,t);return 0===this.size()?aa([],[0].concat(n)):Es(()=>{const e=this.tensors.map(e=>no(e,n));return so(e,0)})}}const rd=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=lc("thenBranch",e,t,n),a=lc("elseBranch",e,t,n),s=lc("cond",e,t,n),o=lc("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=lc("body",e,t,n),a=lc("cond",e,t,n),s=lc("args",e,t,n),o=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map(e=>e.id);let u=await o[0].data();o.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()});let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map(e=>e.id);e.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach(e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return l}case"LoopCond":return[gc(lc("pred",e,t,n))];case"Switch":{const r=lc("pred",e,t,n);let a=lc("data",e,t,n);return a.kept||(a=gc(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==cc(e,t,n));if(r){return[gc(cc(r,t,n))]}return}case"Enter":{const r=lc("frameName",e,t,n),a=lc("tensor",e,t,n);return n.enterFrame(r),[gc(a)]}case"Exit":{const r=lc("tensor",e,t,n);return n.exitFrame(),[gc(r)]}case"NextIteration":{const r=lc("tensor",e,t,n);return n.nextIteration(),[gc(r)]}case"TensorArrayV3":{const r=lc("size",e,t,n),a=lc("dtype",e,t,n),s=lc("elementShape",e,t,n),o=lc("dynamicSize",e,t,n),i=lc("clearAfterRead",e,t,n),u=lc("identicalElementShapes",e,t,n),l=lc("name",e,t,n),c=new td(l,a,r,s,u,o,i);return n.addTensorArray(c),[c.idTensor,ou(1)]}case"TensorArrayWriteV3":{const r=lc("tensorArrayId",e,t,n),a=lc("index",e,t,n),s=lc("tensor",e,t,n),o=n.getTensorArray(r.id);return o.write(a,s),[o.idTensor]}case"TensorArrayReadV3":{const r=lc("tensorArrayId",e,t,n),a=lc("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=lc("tensorArrayId",e,t,n),a=lc("indices",e,t,n),s=lc("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=lc("tensorArrayId",e,t,n),a=lc("indices",e,t,n),s=lc("tensor",e,t,n),o=n.getTensorArray(r.id);return o.scatter(a,s),[o.idTensor]}case"TensorArrayConcatV3":{const r=lc("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=lc("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=lc("tensorArrayId",e,t,n),a=lc("tensor",e,t,n),s=lc("lengths",e,t,n),o=n.getTensorArray(r.id);return o.split(s,a),[o.idTensor]}case"TensorArraySizeV3":{const r=lc("tensorArrayId",e,t,n);return[ou(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=lc("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=lc("tensorListId",e,t,n),a=lc("index",e,t,n),s=lc("tensor",e,t,n),o=n.getTensorList(r.id);return o.setItem(a,s),[o.idTensor]}case"TensorListGetItem":{const r=lc("tensorListId",e,t,n),a=lc("index",e,t,n),s=lc("elementShape",e,t,n),o=lc("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const r=lc("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new nd([],n,e.dtype,r),o=Tu(e,0);return t.forEach((e,t)=>{s.setItem(e,o[t])}),s}(lc("tensor",e,t,n),r,lc("elementShape",e,t,n),lc("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=lc("elementShape",e,t,n),a=lc("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=function(e,t,n){return new nd([],e,t,n)}(r,a,lc(s,e,t,n));return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=lc("tensorListId",e,t,n),a=lc("indices",e,t,n),s=lc("elementShape",e,t,n),o=lc("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,o,s)]}case"TensorListStack":{const r=lc("tensorListId",e,t,n),a=lc("elementShape",e,t,n),s=lc("elementDType",e,t,n),o=lc("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,o)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: "+e.shape);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Jc(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=Tu(e);return new nd(a,t,r)}(lc("tensor",e,t,n),lc("elementShape",e,t,n),lc("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=lc("tensorListId",e,t,n),a=n.getTensorList(r.id),s=lc("dtype",e,t,n),o=lc("elementShape",e,t,n);return[a.concat(s,o)]}case"TensorListPushBack":{const r=lc("tensorListId",e,t,n),a=lc("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=lc("tensorListId",e,t,n),a=lc("elementShape",e,t,n),s=lc("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=lc("tensor",e,t,n),a=lc("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=ed(e.shape.slice(1),n),o=0===r?0:e.size/r,i=Es(()=>{const n=[];e=no(e,[1,r,o]);for(let r=0;r<t.length;++r){const i=[0,0===r?0:a[r-1],0],u=[1,t[r],o];n[r]=no(io(e,i,u),s)}return e.dispose(),n}),u=new nd([],n,e.dtype,t.length);for(let e=0;e<i.length;e++)u.setItem(e,i[e]);return u}(r,lc("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function ad(e,t,n){const[r,a]=lc("fusedOps",e,t,n),s="biasadd"===r,o=!s,i="prelu"===a,u="fusedbatchnorm"===r,l=lc("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=lc("strides",e,t,n),d=Ac(e,t,n),p=lc("dataFormat",e,t,n).toUpperCase(),h=lc("dilations",e,t,n);let[A,g]=lc("args",e,t,n);o&&(g=A,A=void 0);return{stride:c,pad:d,dataFormat:p,dilations:h,biasArg:A,preluArg:g,activationFunc:a,leakyreluAlpha:lc("leakyreluAlpha",e,t,n)}}function sd(e,t,n){return{boxes:lc("boxes",e,t,n),scores:lc("scores",e,t,n),maxOutputSize:lc("maxOutputSize",e,t,n),iouThreshold:lc("iouThreshold",e,t,n),scoreThreshold:lc("scoreThreshold",e,t,n),softNmsSigma:lc("softNmsSigma",e,t,n)}}class od{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ou(0),this.tensorMap=new Map,ws(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ou(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),Es(()=>{const e=Tu(t),r=n.length,a=e.length;f(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let t=0;t<r;t++){const r=n[t],a=e[t];ws(a),this.tensorMap.set(r,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Es(()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Cu(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got `+e.dtype);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got `+t.dtype)}}function id(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return Es(()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Bs(lc("a",e,t,n),lc("b",e,t,n))];case"AddN":return[Qs(lc("tensors",e,t,n))];case"FloorMod":case"Mod":return[Ni(lc("a",e,t,n),lc("b",e,t,n))];case"Mul":return[Ts(lc("a",e,t,n),lc("b",e,t,n))];case"RealDiv":case"Div":return[Ss(lc("a",e,t,n),lc("b",e,t,n))];case"DivNoNan":return[Go(lc("a",e,t,n),lc("b",e,t,n))];case"FloorDiv":return[Rs(lc("a",e,t,n),lc("b",e,t,n))];case"Sub":return[ii(lc("a",e,t,n),lc("b",e,t,n))];case"Minimum":return[Ti(lc("a",e,t,n),lc("b",e,t,n))];case"Maximum":return[wi(lc("a",e,t,n),lc("b",e,t,n))];case"Pow":return[Wi(lc("a",e,t,n),lc("b",e,t,n))];case"SquaredDifference":return[yu(lc("a",e,t,n),lc("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"basic_math":return Es(()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[ks(lc("x",e,t,n))];case"Acos":return[Ns(lc("x",e,t,n))];case"Acosh":return[Fs(lc("x",e,t,n))];case"Asin":return[Ws(lc("x",e,t,n))];case"Asinh":return[$s(lc("x",e,t,n))];case"Atan":return[Ms(lc("x",e,t,n))];case"Atan2":return[Vs(lc("x",e,t,n),lc("y",e,t,n))];case"Atanh":return[Us(lc("x",e,t,n))];case"Ceil":return[go(lc("x",e,t,n))];case"Complex":return[na(lc("real",e,t,n),lc("imag",e,t,n))];case"Cos":return[xo(lc("x",e,t,n))];case"Cosh":return[Eo(lc("x",e,t,n))];case"Elu":return[_o(lc("x",e,t,n))];case"Erf":return[Wo(lc("x",e,t,n))];case"Exp":return[$o(lc("x",e,t,n))];case"Expm1":return[Vo(lc("x",e,t,n))];case"Floor":return[Oo(lc("x",e,t,n))];case"Log":return[ti(lc("x",e,t,n))];case"Log1p":return[ni(lc("x",e,t,n))];case"Imag":return[Ho(lc("x",e,t,n))];case"Neg":return[ai(lc("x",e,t,n))];case"Reciprocal":return[eu(lc("x",e,t,n))];case"Real":return[qi(lc("x",e,t,n))];case"Relu":return[tu(lc("x",e,t,n))];case"Round":return[au(lc("x",e,t,n))];case"Selu":return[iu(lc("x",e,t,n))];case"Sigmoid":return[oo(lc("x",e,t,n))];case"Sin":return[cu(lc("x",e,t,n))];case"Sign":return[lu(lc("x",e,t,n))];case"Sinh":return[du(lc("x",e,t,n))];case"Softplus":return[si(lc("x",e,t,n))];case"Sqrt":return[Iu(lc("x",e,t,n))];case"Square":return[Fi(lc("x",e,t,n))];case"Tanh":return[uo(lc("x",e,t,n))];case"Tan":return[wu(lc("x",e,t,n))];case"ClipByValue":return[mo(lc("x",e,t,n),lc("clipValueMin",e,t,n),lc("clipValueMax",e,t,n))];case"Relu6":return[nu(lc("x",e,t,n))];case"Rsqrt":return[su(cc(e.inputNames[0],t,n))];case"Prod":return[Mi(lc("x",e,t,n),lc("axes",e,t,n))];case"LeakyRelu":return[zo(lc("x",e,t,n),lc("alpha",e,t,n))];case"Prelu":return[$i(lc("x",e,t,n),lc("alpha",e,t,n))];case"IsNan":return[Ko(cc(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"control":return rd(e,t,n);case"convolution":return Es(()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=lc("stride",e,t,n),a=lc("pad",e,t,n),s=lc("dataFormat",e,t,n).toUpperCase(),o=lc("dilation",e,t,n);return[Io(lc("x",e,t,n),lc("filter",e,t,n),r,a,s,o)]}case"Conv2D":{const r=lc("strides",e,t,n),a=Ac(e,t,n),s=lc("dataFormat",e,t,n).toUpperCase(),o=lc("dilations",e,t,n);return[fo(lc("x",e,t,n),lc("filter",e,t,n),[r[1],r[2]],a,s,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:o,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:c}=ad(e,t,n);return[Mu({x:lc("x",e,t,n),filter:lc("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:o,biasArg:i,preluArg:u,activationFunc:l,leakyreluAlpha:c}=ad(e,t,n);return[Xu({x:lc("x",e,t,n),filter:lc("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[o[1],o[2]],bias:i,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=lc("outputShape",e,t,n),a=lc("strides",e,t,n),s=Ac(e,t,n);return[bo(lc("x",e,t,n),lc("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=lc("strides",e,t,n),a=Ac(e,t,n),s=lc("dilations",e,t,n),o=lc("dataFormat",e,t,n).toUpperCase();return[Ro(lc("input",e,t,n),lc("filter",e,t,n),[r[1],r[2]],a,o,[s[1],s[2]])]}case"Conv3D":{const r=lc("strides",e,t,n),a=lc("pad",e,t,n),s=lc("dataFormat",e,t,n).toUpperCase(),o=lc("dilations",e,t,n);return[Co(lc("x",e,t,n),lc("filter",e,t,n),[r[1],r[2],r[3]],a,s,[o[1],o[2],o[3]])]}case"AvgPool":{const r=lc("strides",e,t,n),a=lc("pad",e,t,n),s=lc("kernelSize",e,t,n);return[ro(lc("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=lc("strides",e,t,n),a=lc("pad",e,t,n),s=lc("kernelSize",e,t,n);return[Ci(lc("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=lc("strides",e,t,n),a=lc("pad",e,t,n),s=lc("kernelSize",e,t,n),o=lc("includeBatchInIndex",e,t,n),{result:i,indexes:u}=Ei(lc("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,o);return[i,u]}case"AvgPool3D":{const r=lc("strides",e,t,n),a=lc("pad",e,t,n),s=lc("kernelSize",e,t,n);return[ao(lc("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=lc("strides",e,t,n),a=lc("pad",e,t,n),s=lc("kernelSize",e,t,n);return[xi(lc("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=lc("strides",e,t,n),a=lc("pad",e,t,n),s=lc("dilations",e,t,n),o=r[1],i=r[2],u=s[1],l=s[2];return[So(lc("x",e,t,n),lc("filter",e,t,n),[o,i],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"creation":return Es(()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=lc("shape",e,t,n),a=lc("dtype",e,t,n);return[Xo(r,lc("value",e,t,n),a)]}case"LinSpace":return[qo(lc("start",e,t,n),lc("stop",e,t,n),lc("num",e,t,n))];case"Multinomial":{const r=lc("logits",e,t,n),a=lc("numSamples",e,t,n),s=lc("seed",e,t,n);return[Qi(r,a,s)]}case"OneHot":{const r=lc("indices",e,t,n),a=lc("depth",e,t,n),s=lc("onValue",e,t,n),o=lc("offValue",e,t,n);return[Ja(r,a,s,o)]}case"Ones":return[Ri(lc("shape",e,t,n),lc("dtype",e,t,n))];case"OnesLike":return[Gi(lc("x",e,t,n))];case"RandomUniform":return[Ji(lc("shape",e,t,n),lc("minval",e,t,n),lc("maxval",e,t,n),lc("dtype",e,t,n))];case"Range":return[ji(lc("start",e,t,n),lc("stop",e,t,n),lc("step",e,t,n),lc("dtype",e,t,n))];case"TruncatedNormal":{const r=lc("shape",e,t,n),a=lc("mean",e,t,n),s=lc("stdDev",e,t,n),o=lc("seed",e,t,n);return[Ru(r,a,s,lc("dtype",e,t,n),o)]}case"Zeros":return[Bi(lc("shape",e,t,n),lc("dtype",e,t,n))];case"ZerosLike":return[Do(lc("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i,softNmsSigma:u}=sd(e,t,n),l=await xl.nonMaxSuppressionWithScoreAsync(r,a,s,o,i,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=sd(e,t,n),u=lc("padToMaxOutputSize",e,t,n),l=await xl.nonMaxSuppressionPaddedAsync(r,a,s,o,i,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:o,scoreThreshold:i}=sd(e,t,n);return[await xl.nonMaxSuppressionAsync(r,a,s,o,i)]}case"Where":{const r=Ma(lc("condition",e,t,n),"bool"),a=[await Nu(r)];return r.dispose(),a}case"ListDiff":return uu(lc("x",e,t,n),lc("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return Es(()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=lc("x",e,t,n),a=lc("k",e,t,n),s=lc("sorted",e,t,n),o=Bu(r,a,s);return[o.values,o.indices]}case"Unique":{const r=lc("x",e,t,n),a=Su(r);return[a.values,a.indices]}case"UniqueV2":{const r=lc("x",e,t,n),a=lc("axis",e,t,n),s=Su(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"image":return Es(()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=lc("images",e,t,n),a=lc("size",e,t,n),s=lc("alignCorners",e,t,n),o=lc("halfPixelCenters",e,t,n);return[xl.resizeBilinear(r,[a[0],a[1]],s,o)]}case"ResizeNearestNeighbor":{const r=lc("images",e,t,n),a=lc("size",e,t,n),s=lc("alignCorners",e,t,n),o=lc("halfPixelCenters",e,t,n);return[xl.resizeNearestNeighbor(r,[a[0],a[1]],s,o)]}case"CropAndResize":{const r=lc("image",e,t,n),a=lc("boxes",e,t,n),s=lc("boxInd",e,t,n),o=lc("cropSize",e,t,n),i=lc("method",e,t,n),u=lc("extrapolationValue",e,t,n);return[xl.cropAndResize(r,a,s,o,i,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"graph":return Es(()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=lc("default",e,t,n);return[cc(e.name,t,n)||r];case"Placeholder":return[cc(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[gc(lc("x",e,t,n))];case"IdentityN":return lc("x",e,t,n).map(e=>gc(e));case"Snapshot":return[gc(lc("x",e,t,n))];case"Shape":return[vu(lc("x",e,t,n).shape,"int32")];case"ShapeN":return lc("x",e,t,n).map(e=>vu(e.shape));case"Size":return[ou(lc("x",e,t,n).size,"int32")];case"Rank":return[ou(lc("x",e,t,n).rank,"int32")];case"NoOp":return[ou(1)];case"Print":const a=lc("x",e,t,n),s=lc("data",e,t,n),o=lc("message",e,t,n),i=lc("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,i));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"logical":return Es(()=>((e,t,n)=>{switch(e.op){case"Equal":return[Fo(lc("a",e,t,n),lc("b",e,t,n))];case"NotEqual":return[Di(lc("a",e,t,n),lc("b",e,t,n))];case"Greater":return[Po(lc("a",e,t,n),lc("b",e,t,n))];case"GreaterEqual":return[Yo(lc("a",e,t,n),lc("b",e,t,n))];case"Less":return[Jo(lc("a",e,t,n),lc("b",e,t,n))];case"LessEqual":return[jo(lc("a",e,t,n),lc("b",e,t,n))];case"LogicalAnd":return[Ii(lc("a",e,t,n),lc("b",e,t,n))];case"LogicalNot":return[yi(lc("a",e,t,n))];case"LogicalOr":return[bi(lc("a",e,t,n),lc("b",e,t,n))];case"Select":case"SelectV2":return[Qo(lc("condition",e,t,n),lc("a",e,t,n),lc("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"matrices":return Es(()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[za(lc("a",e,t,n),lc("b",e,t,n),lc("transposeA",e,t,n),lc("transposeB",e,t,n))];case"Einsum":return[Lo(lc("equation",e,t,n),...lc("tensors",e,t,n))];case"Transpose":return[ja(lc("x",e,t,n),lc("perm",e,t,n))];case"_FusedMatMul":const[r,a]=lc("fusedOps",e,t,n),s="biasadd"===r,o="prelu"===a,i=lc("numArgs",e,t,n),u=lc("leakyreluAlpha",e,t,n);if(s){if(o&&2!==i)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==i)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=lc("args",e,t,n);return[Ou({a:lc("a",e,t,n),b:lc("b",e,t,n),transposeA:lc("transposeA",e,t,n),transposeB:lc("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"normalization":return Es(()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[co(lc("x",e,t,n),lc("mean",e,t,n),lc("variance",e,t,n),lc("offset",e,t,n),lc("scale",e,t,n),lc("epsilon",e,t,n))];case"LRN":return[ei(lc("x",e,t,n),lc("radius",e,t,n),lc("bias",e,t,n),lc("alpha",e,t,n),lc("beta",e,t,n))];case"Softmax":return[pu(lc("x",e,t,n))];case"LogSoftmax":return[li(lc("x",e,t,n))];case"SparseToDense":return[Qu(lc("sparseIndices",e,t,n),lc("outputShape",e,t,n),lc("sparseValues",e,t,n),lc("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"reduction":return Es(()=>((e,t,n)=>{switch(e.op){case"Max":{const r=lc("axis",e,t,n),a=lc("keepDims",e,t,n);return[oi(lc("x",e,t,n),r,a)]}case"Mean":{const r=lc("axis",e,t,n),a=lc("keepDims",e,t,n);return[vi(lc("x",e,t,n),r,a)]}case"Min":{const r=lc("axis",e,t,n),a=lc("keepDims",e,t,n);return[Si(lc("x",e,t,n),r,a)]}case"Sum":{const r=lc("axis",e,t,n),a=lc("keepDims",e,t,n);return[ui(lc("x",e,t,n),r,a)]}case"All":{const r=lc("axis",e,t,n),a=lc("keepDims",e,t,n);return[Ds(lc("x",e,t,n),r,a)]}case"Any":{const r=lc("axis",e,t,n),a=lc("keepDims",e,t,n);return[Gs(lc("x",e,t,n),r,a)]}case"ArgMax":{const r=lc("axis",e,t,n);return[Ls(lc("x",e,t,n),r)]}case"ArgMin":{const r=lc("axis",e,t,n);return[_s(lc("x",e,t,n),r)]}case"Prod":{const r=lc("axis",e,t,n),a=lc("keepDims",e,t,n);return[Mi(lc("x",e,t,n),r,a)]}case"Cumsum":{const r=lc("axis",e,t,n),a=lc("exclusive",e,t,n),s=lc("reverse",e,t,n);return[wo(lc("x",e,t,n),r,a,s)]}case"Bincount":const r=lc("x",e,t,n),a=lc("weights",e,t,n),s=lc("size",e,t,n);return[po(r,a,s)];case"DenseBincount":{const r=lc("x",e,t,n),a=lc("weights",e,t,n),s=lc("size",e,t,n),o=lc("binaryOutput",e,t,n);return[vo(r,a,s,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"slice_join":return Es(()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=lc("n",e,t,n),a=lc("axis",e,t,n);let s=lc("tensors",e,t,n);return s=s.slice(0,r),[so(s,a)]}case"Gather":{const r=lc("x",e,t,n),a=lc("indices",e,t,n);return[Zo(r,Ma(a,"int32"),0)]}case"GatherV2":{const r=lc("axis",e,t,n),a=lc("batchDims",e,t,n),s=lc("x",e,t,n),o=lc("indices",e,t,n);return[Zo(s,Ma(o,"int32"),r,a)]}case"Reverse":{const r=lc("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=lc("x",e,t,n);return[ru(s,a)]}case"ReverseV2":{const r=lc("axis",e,t,n),a=lc("x",e,t,n);return[ru(a,r)]}case"Slice":{const r=lc("begin",e,t,n),a=lc("size",e,t,n);return[io(lc("x",e,t,n),r,a)]}case"StridedSlice":{const r=lc("begin",e,t,n),a=lc("end",e,t,n),s=lc("strides",e,t,n),o=lc("beginMask",e,t,n),i=lc("endMask",e,t,n),u=lc("ellipsisMask",e,t,n),l=lc("newAxisMask",e,t,n),c=lc("shrinkAxisMask",e,t,n),d=lc("x",e,t,n);return[Eu(d,r,a,s,o,i,u,l,c)]}case"Pack":return Es(()=>{const r=lc("axis",e,t,n),a=lc("tensors",e,t,n),s=a[0].shape,o=bu(a[0]).shape,i=a.map(e=>{const t=x(e.shape,s);if(!t&&!x(bu(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:no(e,s)});return[Cu(i,r)]});case"Unpack":{const r=lc("axis",e,t,n),a=lc("tensor",e,t,n);return Tu(a,r)}case"Tile":{const r=lc("reps",e,t,n);return[Uo(lc("x",e,t,n),r)]}case"Split":case"SplitV":{const r=lc("axis",e,t,n),a=lc("numOrSizeSplits",e,t,n),s=lc("x",e,t,n);return mu(s,a,r)}case"ScatterNd":{const r=lc("indices",e,t,n),a=lc("values",e,t,n),s=lc("shape",e,t,n);return[Fu(r,a,s)]}case"GatherNd":{const r=lc("x",e,t,n),a=lc("indices",e,t,n);return[Du(r,a)]}case"SparseToDense":{const r=lc("sparseIndices",e,t,n),a=lc("outputShape",e,t,n),s=lc("sparseValues",e,t,n),o=lc("defaultValue",e,t,n);return[Qu(r,s,a,s.dtype===o.dtype?o:Ma(o,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"sparse":return Es(()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:o}=El.sparseFillEmptyRows(lc("indices",e,t,n),lc("values",e,t,n),lc("denseShape",e,t,n),lc("defaultValue",e,t,n));return[r,a,s,o]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=El.sparseReshape(lc("inputIndices",e,t,n),lc("inputShape",e,t,n),lc("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[El.sparseSegmentMean(lc("data",e,t,n),lc("indices",e,t,n),lc("segmentIds",e,t,n))];case"SparseSegmentSum":return[El.sparseSegmentSum(lc("data",e,t,n),lc("indices",e,t,n),lc("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"spectral":return Es(()=>((e,t,n)=>{switch(e.op){case"FFT":return[hu(lc("x",e,t,n))];case"IFFT":return[Au(lc("x",e,t,n))];case"RFFT":return[fu(lc("x",e,t,n))];case"IRFFT":return[gu(lc("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"string":return Es(()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=wl.stringNGrams(lc("data",e,t,n),lc("dataSplits",e,t,n),lc("separator",e,t,n),lc("nGramWidths",e,t,n),lc("leftPad",e,t,n),lc("rightPad",e,t,n),lc("padWidth",e,t,n),lc("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=wl.stringSplit(lc("input",e,t,n),lc("delimiter",e,t,n),lc("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[wl.stringToHashBucketFast(lc("input",e,t,n),lc("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"transformation":return Es(()=>((e,t,n)=>{switch(e.op){case"Cast":return[Ma(lc("x",e,t,n),lc("dtype",e,t,n))];case"ExpandDims":{const r=lc("axis",e,t,n);return[Mo(lc("x",e,t,n),r)]}case"Squeeze":{const r=lc("axis",e,t,n);return[bu(lc("x",e,t,n),r)]}case"Reshape":return[no(lc("x",e,t,n),lc("shape",e,t,n))];case"MirrorPad":return[ki(lc("x",e,t,n),lc("padding",e,t,n),lc("mode",e,t,n))];case"PadV2":case"Pad":return[Li(lc("x",e,t,n),lc("padding",e,t,n),lc("constantValue",e,t,n))];case"SpaceToBatchND":{const r=lc("blockShape",e,t,n),a=lc("paddings",e,t,n);return[_i(lc("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=lc("blockShape",e,t,n),a=lc("crops",e,t,n);return[lo(lc("x",e,t,n),r,a)]}case"DepthToSpace":{const r=lc("blockSize",e,t,n),a=lc("dataFormat",e,t,n).toUpperCase();return[Bo(lc("x",e,t,n),r,a)]}case"BroadcastTo":return[Ao(lc("x",e,t,n),lc("shape",e,t,n))];case"BroadcastArgs":return[ho(lc("s0",e,t,n),lc("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=lc("keyDType",e,t,n),s=lc("valueDType",e,t,n),o=new od(a,s);return r.addHashTable(e.name,o),[o.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=lc("tableHandle",e,t,n,r),s=lc("keys",e,t,n),o=lc("values",e,t,n),i=r.getHashTableById(a.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const a=lc("tableHandle",e,t,n,r),s=lc("keys",e,t,n),o=lc("defaultValue",e,t,n),i=r.getHashTableById(a.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=lc("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=uc(e.op);if(a&&a.customExecutor)return a.customExecutor(new zc(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Z(a)?a.then(e=>[].concat(e)):[].concat(a)}class ud{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function ld(e,t,n,r){const a=new Set,s=[];let o=null,i=null;const u=new Set,l=Object.keys(e).map(e=>hc(e)[0]);let c=[];null!=r&&(c=r.map(e=>hc(e.name)[0]));const d=[...t];for(;d.length>0;){const e=d.pop();(hd(e)||Ad(e)||gd(e))&&null==o&&(o=e,i=o.children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),null==n[e.name]&&(-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),d.push(e))}):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:o,syncInputs:i}}const cd=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],dd=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],pd=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function hd(e){return cd.indexOf(e.op)>=0}function Ad(e){return dd.indexOf(e.op)>=0}function gd(e){return pd.indexOf(e.op)>=0}class md{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new md(e.functions[t],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=ld(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map(e=>e.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],o=Object.keys(a).map(e=>hc(e)[0]).map(t=>e.nodes[t]),i=e.initNodes;o.forEach(e=>{r.has(e.name)&&s.push(e)}),e.weights.forEach(e=>{r.has(e.name)&&s.push(e)}),null!=i&&i.forEach(e=>{r.has(e.name)&&s.push(e)});const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach(e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>u.has(e.name))&&s.push(e)})}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map(e=>this.graph.nodes[hc(e)[0]]),a=t.map(e=>hc(e)[0]);let s=a.map(e=>this.graph.nodes[e]);0===s.length&&(s=this._outputs);const o=this.getCompilationKey(r,s);let i=this.compiledMap.get(o);null==i&&(i=this.compile(e,s),this.compiledMap.set(o,i));const u={},l={};return Es(()=>{const n=new ud(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,a]=hc(t),s=[];s[a]=e[t],r[n]=s});const s=this.getFrozenTensorIds(r),o={};for(let e=0;e<i.length;e++){const t=i[e];if(!r[t.name]){const e=id(t,r,n,this._resourceManager);if(Z(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,o)}}return null==this.parent&&n.dispose(s),t.map(e=>cc(e,r,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,o){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach(e=>{null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)}),t.inputs.forEach(e=>{if("control"!==e.category){const t=function(e,t,n){return t[pc(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach(e=>{if(e&&!e.kept&&!a.has(e.id)){const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new ud(this.weightMap,r,a,this.functionExecutorMap),o=await this.executeWithControlFlow(e,s,t,n),i=t.map(e=>cc(e,o,s)),u=i.map(e=>e.id),l=Object.keys(e).map(t=>e[t].id),c=new Set([...u,...l,...this.weightIds]);return Object.keys(o).forEach(e=>{o[e].forEach(e=>{!e||e.kept||e.isDisposed||c.has(e.id)||e.dispose()})}),null==this.parent&&s.dispose(c),i}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map(e=>this.graph.nodes[hc(e)[0]]),o=n.map(e=>hc(e)[0]);let i=o.map(e=>this.graph.nodes[e]);0===i.length&&(i=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:d}=ld(e,i,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),h=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=hc(t),a=[];a[r]=e[t],h[n]=a});const A={},g=this.getFrozenTensorIds(h),m={};for(;p.length>0;){const e=this.processStack(s,p,t,h,m,g,o,A,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const f=i.filter(e=>!hd(e)&&!cc(e.name,h,t)).map(e=>e.name);if(f.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${f}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return h}processStack(e,t,n,r,a,s,o,i,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&lc("isConstant",e.node,r,n)&&([c]=dc(e.node.name,n)),null==r[e.node.name]){const d=id(e.node,r,n,this._resourceManager);c||([c]=dc(e.node.name,n));const p=n.currentContext;Z(d)?l.push(d.then(l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u),l))):(r[c]=d,this.checkTensorForDisposal(c,e.node,r,n,s,o,i),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach(e=>{const[o]=dc(e.name,n);!a[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!cc(e,r,n))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!cc(e,r,n))&&(a[o]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[r]=hc(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value;f(e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t),()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&f(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=hc(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e},{})}checkOutputs(e){e.forEach(e=>{const[t]=hc(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}}class fd{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Id{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new fd}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Ka(e,this.loadOptions);else{const r=(t=e,n=this.loadOptions,pa.getLoadHandlers(t,n));if(0===r.length)r.push(Ka(e,this.loadOptions));else if(r.length>1)throw new Error(`Found more than one (${r.length}) load handlers for URL '${[e]}'`);this.handler=r[0]}var t,n}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=function(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,o=s.dtype,i=s.shape,u=C(i);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${o}.`)}const i=sa[n.dtype],c=e.slice(a,a+u*i),d="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===o)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=da()),l=r(d)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*i}else if("string"===o){const t=C(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=sa[o],s=e.slice(a,a+u*r);if("float32"===o)l=new Float32Array(s);else if("int32"===o)l=new Int32Array(s);else if("bool"===o)l=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${t}': ${o}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=aa(e,i,"float32"),o=aa(r,i,"float32");n[t]=na(a,o),a.dispose(),o.dispose()}}a+=u*r}"complex64"!==o&&(n[t]=aa(l,i,o))}return n}(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new md(Gc.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=Gc.Instance.transformGraph(e.modelInitializer);this.initializer=new md(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=(n=e,pa.getSaveHandlers(n));if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Sr||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function yd(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e+="model.json?tfjs-format=file");const n=new Id(e,t);return await n.load(),n}const bd={},Cd={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function xd(e){if(!(e in bd)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);if(t.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete bd[e]},!1),1===e)return t.getContext("webgl",Cd)||t.getContext("experimental-webgl",Cd);return t.getContext("webgl2",Cd)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;bd[e]=t}const t=bd[e];return t.isContextLost()?(delete bd[e],xd(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),bd[e])}var Ed,wd,vd;function Bd(e,t){return[t,e]}function Rd(e){const t=C(e);return w(Math.ceil(t/4))}function Sd(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Td(e,t){const n=e;let r,a,s,o,i,u,l,c,d,p;return 2===z().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,c=1,d=n.HALF_FLOAT,p=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,o=n.RGBA,i=e.RGBA,l=4,c=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:p}}function kd(e,t){const n=t();return z().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code "+t}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Ed||(Ed={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(wd||(wd={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(vd||(vd={}));function Nd(e){return!!(z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function Fd(e,t){return Vd(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function Qd(e,t){const n=Vd(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(kd(e,()=>e.shaderSource(n,t)),kd(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=Dd.exec(t);if(null==n)return console.log("Couldn't parse line number in error: "+t),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,o=a.map((e,t)=>v((t+1).toString(),s)+e);let i=0;for(let e=0;e<o.length;e++)i=Math.max(o[e].length,i);const u=o.slice(0,r-1),l=o.slice(r-1,r),c=o.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log("%c "+v(l[0],i),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Dd=/ERROR: [0-9]+:([0-9]+):/g;function Gd(e,t){if(kd(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Ld(e,t,n,r,a,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(kd(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),kd(e,()=>e.vertexAttribPointer(i,a,e.FLOAT,!1,s,o)),kd(e,()=>e.enableVertexAttribArray(i)),!0)}function _d(e,t,n){!function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}(e,n),kd(e,()=>e.activeTexture(e.TEXTURE0+n)),kd(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function Wd(e,t,n){kd(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),kd(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function $d(e,t){kd(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),kd(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Md(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error "+t}}(e,t))}function Vd(e,t,n){const r=kd(e,()=>t());if(null==r)throw new Error(n);return r}function Ud(e,t=2){return C(e.slice(0,e.length-t))}function Xd(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Od(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Ud(e),...Xd(e)]),t}function Zd(e){return e%2==0}function Pd(e,t){if(x(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(Zd(n)&&Zd(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Zd(e[0])&&Zd(t[0])}let Yd,Hd;function Kd(e,t){return null!=e.getExtension(t)}function zd(e){try{if(null!=xd(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Jd(e){if(0===e)return!1;const t=xd(e);if(1!==e){if(Kd(t,"EXT_color_buffer_float"))return jd(t);const e="EXT_color_buffer_half_float";if(Kd(t,e)){const n=t.getExtension(e);return function(e,t){const n=Td(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!Kd(t,"OES_texture_float"))return!1;if(!Kd(t,"WEBGL_color_buffer_float"))return!1;return jd(t)}function jd(e){const t=Td(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function qd(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&f("complex64"!==e.dtype,()=>t+" does not support complex64 tensors in the WebGL backend.")})}const ep=z();function tp(){let e,t,n,r,a,s,o,i,u,l;return 2===z().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",o="out vec4 outputColor;",i="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:u,defineRound:l}}function np(e,t,n="index"){const r=_(t);return r.map((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`).join("")}function rp(e,t,n="index"){const r=_(t);return r.map((t,a)=>`${`int ${e[a]} = ${n} / outShapeStrides[${a}]`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`).join("")}function ap(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map(e=>`${t}[${e}]`),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map((e,t)=>t),t);return r.map((t,a)=>`${`int ${e[a]} = ${n} / ${r[a]}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`).join("")}function sp(e){const t=_(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}ep.registerFlag("HAS_WEBGL",()=>ep.getNumber("WEBGL_VERSION")>0),ep.registerFlag("WEBGL_VERSION",()=>zd(2)?2:zd(1)?1:0),ep.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),ep.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===ep.get("WEBGL_VERSION")),ep.registerFlag("WEBGL_CPU_FORWARD",()=>!0),ep.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),ep.registerFlag("WEBGL_PACK",()=>ep.getBool("HAS_WEBGL")),ep.registerFlag("WEBGL_PACK_NORMALIZATION",()=>ep.getBool("WEBGL_PACK")),ep.registerFlag("WEBGL_PACK_CLIP",()=>ep.getBool("WEBGL_PACK")),ep.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>ep.getBool("WEBGL_PACK")),ep.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>ep.getBool("WEBGL_PACK")),ep.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>ep.getBool("WEBGL_PACK")),ep.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>ep.getBool("WEBGL_PACK")),ep.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>ep.getBool("WEBGL_PACK")),ep.registerFlag("WEBGL_PACK_REDUCE",()=>ep.getBool("WEBGL_PACK")),ep.registerFlag("WEBGL_LAZILY_UNPACK",()=>ep.getBool("WEBGL_PACK")),ep.registerFlag("WEBGL_CONV_IM2COL",()=>ep.getBool("WEBGL_PACK")),ep.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==Yd){const t=xd(e);Yd=t.getParameter(t.MAX_TEXTURE_SIZE)}return Yd}(ep.getNumber("WEBGL_VERSION"))),ep.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==Hd){const t=xd(e);Hd=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Hd)}(ep.getNumber("WEBGL_VERSION"))),ep.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=ep.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=xd(e);return t=Kd(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Kd(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),ep.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>ep.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Yr()),ep.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=xd(e);if(1===e){if(!Kd(t,"OES_texture_float"))return!1}else if(!Kd(t,"EXT_color_buffer_float"))return!1;return jd(t)}(ep.getNumber("WEBGL_VERSION"))),ep.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!ep.getBool("WEBGL_FORCE_F16_TEXTURES")&&ep.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),ep.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>Jd(ep.getNumber("WEBGL_VERSION"))),ep.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=ep.getNumber("WEBGL_VERSION"))&&null!=xd(e).fenceSync;var e}),ep.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>ep.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),ep.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),ep.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Yr()&&ep.getBool("IS_CHROME")?1:-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),ep.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),ep.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),ep.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),ep.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);const op="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:ip}=oc;function up(e,t,n){const r=[];if(e.forEach(e=>{const t=C(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=yp(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});const a=r.join("\n"),s=e.map(e=>function(e,t,n=!1,r){let a="";a+=n?cp(e,r):lp(e,r);const s=e.shapeInfo.logicalShape,o=t.logicalShape;s.length<=o.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=ip(e.shapeInfo.logicalShape,t.logicalShape),u=Ip(o),l=o-s;let c;const d=["x","y","z","w","u","v"];c=0===s?"":o<2&&i.length>=1?"coords = 0;":i.map(e=>`coords.${d[e+l]} = 0;`).join("\n");let p="";p=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+d[t+l]).join(", ");let h="return outputValue;";const A=1===C(e.shapeInfo.logicalShape),g=1===C(t.logicalShape);if(1!==s||A||g){if(A&&!g)h=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=s-2,t=s-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?h="return vec4(outputValue.x);":i.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${h}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===u&&null==e.shapeInfo.flatOffset&&x(o,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=Ip(u),c=ip(e.shapeInfo.logicalShape,t.logicalShape),d=u-i;let p;const h=["x","y","z","w","u","v"];p=0===i?"":u<2&&c.length>=1?"coords = 0;":c.map(e=>`coords.${h[e+d]} = 0;`).join("\n");let A="";A=u<2&&i>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>"coords."+h[t+d]).join(", ");return`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${A});\n    }\n  `}(e,t));return a}(e,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),o=t.texShape,i=tp(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(i);let l,c,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${dp}\n    ${pp}\n    ${hp}\n  `}(i);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return gp();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(x(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let o=s,i="",u="b, r, c";for(let t=2;t<e.length-1;t++)o*=e[e.length-t-1],i=`\n      int b${t} = index / ${o};\n      index -= b${t} * ${o};\n    `+i,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(i)):(l=function(e,t,n){switch(e.length){case 0:return gp();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(x(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${rp(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=np(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${rp(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=np(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=np(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=np(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(e.length+"-D output sampling is not yet supported")}}(t.logicalShape,o,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(i)),n.packedInputs&&(d+=Ap);return[d,u,c,a,l,s,n.userCode].join("\n")}function lp(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=mp(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[i,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${i}, ${u}, ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${fp(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],o=a[1];if(1===o&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=mp(n);if(1===o)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===s)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${o}, index + ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&x(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:i}=S(n),u=o;if(u.length<n.length){const n=["row","col"];return`\n      ${lp(bp(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${Cp(n,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${fp(e)}\n      }\n    `;const l=s[0],c=s[1],d=mp(r);if(1===c)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(1===l)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `;if(t)return`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${d};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `;return`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],o=n[2],{newShape:i,keptDims:u}=S(n),l=i;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${lp(bp(e,l),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${Cp(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${o}, 1)));\n        ${fp(e)}\n      }\n    `;const c=e.shapeInfo.texShape,d=c[0],p=c[1],h=e.shapeInfo.flatOffset;if(p===s&&null==h)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${d}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===o&&null==h)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const A=mp(r);if(t)return`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${o} + depth + ${A};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `;return`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${o} + depth + ${A};\n        vec2 uv = uvFromFlat(${d}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],o=n[2]*s,i=n[1]*o,{newShape:u,keptDims:l}=S(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${lp(bp(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${Cp(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${o}, ${s}, 1)));\n        ${fp(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],A=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,m=`int stride0 = ${r}Shape[1] * stride1;`;if(h===i&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${A}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(h===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const f=mp(r);if(t)return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${A}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${f});\n      return sampleTexture(${r}, uv);\n    }\n  `;return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${h}, index + ${f});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,o=t[2]*s,i=t[1]*o,{newShape:u,keptDims:l}=S(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${lp(bp(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Cp(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${i}, ${o}, ${s}, ${a})) +\n          depth3;\n        ${fp(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const A=mp(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${o} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${A};\n      vec2 uv = uvFromFlat(${p}, ${h}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=S(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${lp(bp(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Cp(t,s)});\n      }\n    `}const o=t[5],i=t[4]*o,u=t[3]*i,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${i})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${fp(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],A=p[1];if(A===c&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${i}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${A}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(A===o&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${A}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const g=mp(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${i} + depth3 * ${o} + depth4 + ${g};\n      vec2 uv = uvFromFlat(${h}, ${A}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(n.length+"-D input sampling is not yet supported")}}function cp(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=tp();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=tp();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const o=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${o[0]}, ${o[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=s[0],i=s[1],u=tp();if(null!=s&&x(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${o}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${cp(bp(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${Cp(s,r)});\n        }\n      `}const i=tp();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `;const u=o[0],l=o[1],c=Math.ceil(n[2]/2),d=c*Math.ceil(n[1]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${d}, ${c}, b, row, col);\n      return ${i.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=tp();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=u[0],c=u[1],d=Math.ceil(s[o-1]/2);let p=d*Math.ceil(s[o-2]/2),h="int b, int row, int col",A=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<o-1;e++)h=`int b${e}, `+h,p*=s[o-e-1],A=`b${e} * ${p} + `+A;return`\n    vec4 ${r}(${h}) {\n      int index = ${A};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const dp="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",pp="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",hp="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ap="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function gp(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function mp(e){return"offset"+e}function fp(e){const t=e.name,n=C(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Ip(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function yp(e,t,n){const{newShape:r,keptDims:a}=S(t),s=t.length,o=e&&3===s&&1===t[0],i=o?t.slice(1):r,u=!e&&s>1&&!x(t,n)&&r.length<s||o;return{useSqueezeShape:u,uniformShape:u?i:t,keptDims:a}}function bp(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Cp(e,t){return t.map(t=>e[t]).join(", ")}function xp(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!x(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,i=a.isUniform?null:a.texData.texShape;if(!x(o,i))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${i} must match`)})}function Ep(e){return z().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class wp{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ed.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=tp();this.outputShape=e,this.enableShapeUniforms=Ep(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?rp(["r","c","d"],e):np(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class vp{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ed.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=tp();this.outputShape=e,this.enableShapeUniforms=Ep(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?rp(["r","c","d"],e):np(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Bp{constructor(e){this.variableNames=["A"],this.outTexUsage=wd.DOWNLOAD;const t=tp();this.outputShape=e,this.userCode=`\n      ${op}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class Rp{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=wd.DOWNLOAD;const t=tp();this.outputShape=e,this.userCode=`\n      ${op}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Sp{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=tp();this.outputShape=e,this.enableShapeUniforms=Ep(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":sp(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class Tp{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=tp();this.outputShape=e,this.enableShapeUniforms=Ep(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":""+e[2]}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":""+e[1]}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":sp(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function kp(e){const t=tp();return function(e,t){const n=Vd(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(kd(e,()=>e.shaderSource(n,t)),kd(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function Np(e){return function(e,t){const n=Vd(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return kd(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),kd(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Fp(e){return function(e,t){const n=Vd(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return kd(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),kd(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}function Qp(e,t,n,r,a,s){!function(e,t){const n=z().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return Vd(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return kd(e,()=>e.bindTexture(i,o)),kd(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),kd(e,()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),kd(e,()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST)),kd(e,()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST)),kd(e,()=>e.texImage2D(i,0,r,t,n,0,a,s,null)),kd(e,()=>e.bindTexture(e.TEXTURE_2D,null)),o}function Dp(e){return e.internalFormatFloat}function Gp(e){return e.internalFormatHalfFloat}function Lp(e){return e.downloadTextureFormat}function _p(e){return e.internalFormatPackedFloat}function Wp(e){return e.internalFormatPackedHalfFloat}function $p(e,t,n,r,a,s,o,i){const u=e,l=new Float32Array(function(e,t){const[n,r]=Sd(e,t);return n*r*4}(s,o));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}class Mp{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=z().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){bd[e]=t}(t,e)):this.gl=xd(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===z().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=Fd(this.gl,e),Kd(this.gl,t))this.textureHalfFloatExtension=Fd(this.gl,t);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Kd(this.gl,r))this.colorBufferHalfFloatExtension=Fd(this.gl,r);else if(z().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Kd(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Kd(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=Np(this.gl),this.indexBuffer=Fp(this.gl),this.framebuffer=function(e){return Vd(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Td(this.gl,this.textureHalfFloatExtension)}get debug(){return z().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;kd(e,()=>e.finish()),kd(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),kd(e,()=>e.deleteFramebuffer(this.framebuffer)),kd(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),kd(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),kd(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Bd(t,n);return Qp(e,a,s,Dp(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Bd(t,n);return Qp(e,a,s,Gp(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Bd(t,n);return Qp(e,a,s,Lp(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){kd(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?kd(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):kd(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),kd(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let o,i,u;kd(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(o=new Uint8Array(n*r*4),i=e.UNSIGNED_BYTE,u=e.RGBA):(o=new Float32Array(n*r*4),i=e.FLOAT,u=s.internalFormatPackedFloat),o.set(a),kd(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,i,o)),kd(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Sd(t,n);return Qp(e,a,s,Wp(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Sd(t,n);return Qp(e,a,s,_p(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&($d(this.gl,this.framebuffer),this.outputTexture=null),kd(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,r){const[a,s]=Bd(t,n),o=new Uint8Array(t*n*4);return kd(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return $p(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();kd(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));const s=16*t*n;return kd(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),kd(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),kd(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(z().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const r=new Float32Array(t*n*4);return kd(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=Qd(t,e);null==this.vertexShader&&(this.vertexShader=kp(t));const r=function(e){return Vd(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);return kd(t,()=>t.attachShader(r,this.vertexShader)),kd(t,()=>t.attachShader(r,n)),function(e,t){if(kd(e,()=>e.linkProgram(t)),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&Gd(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return kd(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Ld(e,t,"clipSpacePos",n,3,20,0)&&Ld(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&kd(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Gd(this.gl,this.program),kd(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return Vd(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),kd(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),function(e,t,n,r){kd(e,()=>_d(e,t,r)),kd(e,()=>e.uniform1i(n,r))}(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=Sd(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Gd(this.gl,this.program),Md(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),kd(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),kd(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Fd(this.gl,2===z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await B(()=>this.disposed||this.isQueryAvailable(e,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||B(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Wd(this.gl,e,this.framebuffer),this.debug&&Md(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Wd(this.gl,this.outputTexture,this.framebuffer),this.debug&&Md(this.gl)):$d(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;Wd(r,e,this.framebuffer),this.debug&&Md(r),this.outputTexture=e,kd(r,()=>r.viewport(0,0,t,n)),kd(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),kd(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function Vp(e){return(t,n,r,a,s)=>{const o=No(t,n),i=o.length,u=_(o),l=T(s,C(o)),c=t.length,d=n.length,p=_(t),h=_(n),A=To(t,o),g=To(n,o);if(A.length+g.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<l.length;++t){const n=O(t,i,u),s=n.slice(-c);A.forEach(e=>s[e]=0);const o=X(s,c,p),m=n.slice(-d);g.forEach(e=>m[e]=0);const f=X(m,d,h);l[t]=e(r[o],a[f])}return[l,o]}}const Up=Vp((e,t)=>e+t);function Xp(e){return(t,n,r)=>{const a=T(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}const Op=Xp(e=>Math.ceil(e));const Zp=Vp((e,t)=>e===t?1:0),Pp=Xp(e=>Math.exp(e)),Yp=Xp(e=>Math.expm1(e)),Hp=Xp(e=>Math.floor(e));const Kp=Vp((e,t)=>e>t?1:0),zp=Vp((e,t)=>e>=t?1:0),Jp=Vp((e,t)=>e<t?1:0),jp=Vp((e,t)=>e<=t?1:0);const qp=Xp(e=>Math.log(e));const eh=Vp((e,t)=>Math.max(e,t)),th=Vp((e,t)=>Math.min(e,t)),nh=Vp((e,t)=>e*t);const rh=Vp((e,t)=>e!==t?1:0);const ah=Xp(e=>1/Math.sqrt(e)),sh=Xp(e=>1/(1+Math.exp(-e)));const oh=Xp(e=>Math.sqrt(e)),ih=Vp((e,t)=>{const n=e-t;return n*n});class uh{constructor(e,t,n,r,a,s){this.separator=gr(e),this.nGramWidths=t,this.leftPad=gr(n),this.rightPad=gr(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let o=0;o<a;++o){const i=this.getPadWidth(s),u=Math.max(0,i-o),l=Math.max(0,i-(a-(o+1))),c=s-(u+l),d=t+(u>0?0:o-i);let p=0;p+=u*this.leftPad.length;for(let t=0;t<c;++t)p+=e[d+t].length;p+=l*this.rightPad.length;p+=(u+l+c-1)*this.separator.length,n[r+o]=new Uint8Array(p);const h=n[r+o];let A=0;const g=e=>e.forEach(e=>h[A++]=e);for(let e=0;e<u;++e)g(this.leftPad),g(this.separator);for(let t=0;t<c-1;++t)g(e[d+t]),g(this.separator);if(c>0){g(e[d+c-1]);for(let e=0;e<l;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<l-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got "+e);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=k("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach(e=>{r+=this.getNumNGrams(n,e)}),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}const o=new Array(s[a]);for(let n=0;n<a;++n){const r=t[n];let a=s[n];if(this.nGramWidths.forEach(s=>{const i=t[n+1]-t[n],u=this.getNumNGrams(i,s);this.createNGrams(e,r,o,a,u,s),a+=u}),this.preserveShort&&a===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const i=s+2*this.padWidth,u=1;this.createNGrams(e,r,o,a,u,i)}}return[o,s]}}function lh(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}const ch=Vp((e,t)=>e-t);const dh=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function ph(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,o=Math.log(a),i=.5*Math.exp(2*o/3),u=.5*Math.sqrt(o*i*(a-i)/a)*Math.sign(s-a/2);ph(e,t,Math.max(n,Math.floor(t-s*i/a+u)),Math.min(r,Math.floor(t+(a-s)*i/a+u)))}const a=e[t];let s=n,o=r;for(m(e,n,t),dh(e[r],a)>0&&m(e,n,r);s<o;){for(m(e,s,o),s++,o--;dh(e[s],a)<0;)s+=1;for(;dh(e[o],a)>0;)o-=1}0===dh(e[n],a)?m(e,n,o):(o+=1,m(e,o,r)),o<=t&&(n=o+1),t<=o&&(r=o-1)}}var hh=Object.freeze({__proto__:null,simpleAbsImpl:function(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t},addImpl:Up,bincountImpl:function(e,t,n,r,a){const s=C(r),o=V(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(o[r]+=s>0?t[n]:1)}return o},bincountReduceImpl:function(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],o=$a([a,n],t.dtype);for(let i=0;i<a;i++)for(let a=0;a<s;a++){const s=e.get(i,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?o.set(1,i,s):t.size>0?o.set(o.get(i,s)+t.get(i,a),i,s):o.set(o.get(i,s)+1,i,s))}return o},ceilImpl:Op,concatImpl:function(e,t,n,r){const a=k(n,C(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{const n=C(e.shape);a.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const s="string"===n?nc(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[i+t]=s[o++]}r+=e.shape[1]})}return a},equalImpl:Zp,expImpl:Pp,expm1Impl:Yp,floorImpl:Hp,gatherNdImpl:function(e,t,n,r,a,s,o,i,u){const l=$a([r,s],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const s=e[n*a+t];c+=s*o[t],r.push(s)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${r} does not index into ${i}`);for(let e=0;e<s;e++)l.values[n*s+e]=t.get(...t.indexToLoc(c*s+e))}return l},gatherV2Impl:function(e,t,n){const r=$a(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],o=a[2],i=t.locToIndex([s,o]);a[2]=t.values[i];const u=e.locToIndex(a);r.values[n]=e.values[u]}return r},greaterImpl:Kp,greaterEqualImpl:zp,lessImpl:Jp,lessEqualImpl:jp,linSpaceImpl:function(e,t,n){const r=(t-e)/(n-1),a=V(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a},logImpl:qp,maxImpl:function(e,t,n,r){const a=T(r,C(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a},maximumImpl:eh,minimumImpl:th,multiplyImpl:nh,negImpl:function(e,t,n){const r=pr(-1,n);return nh([],t,r,e,n)},notEqualImpl:rh,prodImpl:function(e,t,n,r){const[a,s]=pi(e,r),o=Lr(t,"int32"),i=V(C(a),o),u=C(s);for(let e=0;e<i.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];i[e]=r}return{outVals:i,outShape:a,outDtype:o}},rangeImpl:function(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return V(0,r);const a=V(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a},rsqrtImpl:ah,sigmoidImpl:sh,sliceImpl:function(e,t,n,r,a){const s=fs(r,t,n),o=C(n),i=_(r);if(s){const n=Is(t,i);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const u=$a(r,a,"string"===a?nc(e):e),l=$a(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map((e,n)=>e+t[n]);l.set(u.get(...r),...n)}return"string"===a?rc(l.values):l.values},sparseFillEmptyRowsImpl:function(e,t,n,r,a,s,o){const i=t[0],u=s[0],l=new Array(u),c=new Array(i),d=t[1];if(0===u){if(0!==i)throw new Error("Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = "+i);return[k(n,0),[0,d],k(a,0),l,c]}let p=!0,h=0;const A=new Array(u).fill(0);for(let t=0;t<i;++t){const n=e[t*d];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=u)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${u}`);++A[n],p=p&&n>=h,h=n}let g=!0;for(let e=0;e<u;++e){const t=0===A[e];l[e]=t,g=g&&!t,A[e]=Math.max(A[e],1),e>0&&(A[e]+=A[e-1])}if(g&&p){const t=e,n=r;for(let e=0;e<i;++e)c[e]=e;return[t,[i,d],n,l,c]}{const t=A[u-1],s=k(n,t*d),p=k(a,t),h=new Array(u).fill(0);for(let t=0;t<i;++t){const n=e[t*d],a=h[n],o=(0===n?0:A[n-1])+a;h[n]++;for(let n=0;n<d;++n)s[o*d+n]=e[t*d+n];p[o]=r[t],c[t]=o}for(let e=0;e<u;++e){if(0===h[e]){const t=0===e?0:A[e-1];s[t*d+0]=e;for(let e=1;e<d;++e)s[t*d+e]=0;p[t]=o}}return[s,[t,d],p,l,c]}},sparseReshapeImpl:function(e,t,n,r,a){const s=C(r),o=t[0],i=a.length,u=[];let l=1,c=-1;for(let e=0;e<i;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(`only one output dimension may be -1, not both ${c} and ${e}`);c=e,u.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/l);if(l*e!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}\n          dense values, but the requested shape requires a multiple of ${l}. inputShape=${r} outputShape= ${u}`);u[c]=e}const d=C(u);if(d!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${d}. inputShape=${r} outputShape=${u}`);const p=r.length,h=[];if(p>0){h[p-1]=1;for(let e=p-2;e>=0;--e)h[e]=h[e+1]*r[e+1]}const A=[];if(i>0){A[i-1]=1;for(let e=i-2;e>=0;--e)A[e]=A[e+1]*u[e+1]}const g=k(n,o*i);for(let t=0;t<o;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*h[r];for(let e=0;e<i;++e)g[t*i+e]=Math.trunc(n/A[e]),n%=A[e]}return[g,[o,i],u]},sparseSegmentReductionImpl:function(e,t,n,r,a,s=!1,o=0){const i=r.length;if(i!==a.length)throw new Error("segmentIds and indices should have same size.");const u=[t[0],e.length/t[0]],l=u[1],c=i>0?a[i-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const d=t.slice();d[0]=c;const p=k(n,d.reduce((e,t)=>e*t,1));if(0===i)return c>0&&p.fill(o),[p,d];if(c<=0)throw new Error("segment ids must be >= 0");let h=0,A=1,g=0,m=a[h];for(;;){let t=0;if(A<i){if(t=a[A],m===t){++A;continue}if(m>=t)throw new Error("segment ids are not increasing")}if(m<0||m>=c)throw new Error(`Segment id ${m} out of range [0, ${c}), possibly because segmentIds input is not sorted.`);m>g&&p.fill(o,g*l,m*l);for(let t=h;t<A;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(`Bad: indices[${t}] == ${r[t]} out of range [0, ${u[0]})`);for(let t=0;t<l;t++)p[m*l+t]+=e[n*l+t]}if(s)for(let e=0;e<l;e++)p[m*l+e]/=A-h;if(h=A,++A,g=m+1,m=t,A>i)break}return g<c&&p.fill(o,g*l,c*l),[p,d]},sqrtImpl:oh,squaredDifferenceImpl:ih,stridedSliceImpl:function(e,t,n,r){const a=$a(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),o=new Array(s.length);for(let e=0;e<o.length;e++)o[e]=s[e]*n[e]+r[e];a.set(t.get(...o),...s)}return a},stringNGramsImpl:function(e,t,n,r,a,s,o,i){return new uh(n,r,a,s,o,i).compute(e,t)},stringSplitImpl:function(e,t,n){const r=e.length,a=[];let s=0,o=0;const i=new Array(r);for(let u=0;u<r;++u){const r=a.length;lh(e[u],t,n,a);const l=a.length-r;i[u]=l,s+=l,o=Math.max(o,l)}const u=k("int32",2*s),l=new Array(s),c=[r,o];let d=0;for(let e=0;e<r;++e)for(let t=0;t<i[e];++t)u[2*d]=e,u[2*d+1]=t,l[d]=a[d],++d;return[u,l,c]},stringToHashBucketFastImpl:function(e,t){const n=k("int32",e.length);for(let r=0;r<e.length;++r)n[r]=dr(e[r]).modulo(t).getLowBitsUnsigned();return n},subImpl:ch,tileImpl:function(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=$a(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r},topKImpl:function(e,t,n,r,a){const s=t[t.length-1],[o,i]=[e.length/s,s],u=T(n,o*r),l=T("int32",o*r);for(let t=0;t<o;t++){const n=t*i,s=e.subarray(n,n+i);let o=new Array(s.length);s.forEach((e,t)=>o[t]={value:e,index:t}),r<o.length&&(ph(o,r),o=o.slice(0,r)),a&&o.sort(dh);const c=t*r,d=u.subarray(c,c+r),p=l.subarray(c,c+r);for(let e=0;e<r;e++)d[e]=o[e].value,p[e]=o[e].index}const c=t.slice();return c[c.length-1]=r,[$a(c,n,u),$a(c,"int32",l)]},transposeImpl:function(e,t,n,r,a){const s=t.length,o=C(t),i=_(t),u=_(a),l=T(n,C(a));for(let t=0;t<o;++t){const n=O(t,s,i),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[X(a,s,u)]=e[t]}return l},uniqueImpl:function(e,t,n,r){const a=R(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const o={},i=new Int32Array(n[a]),u=new vr(s,r,e),l=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==o[n])i[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,i[t]=e,l.push(t)}}const d=s.slice();d[1]=Object.keys(o).length;const p=new vr(d,r);l.forEach((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)p.set(u.get(n,e,r),n,t,r)});const h=n.slice();return h[a]=d[1],{outputValues:p.values,outputShape:h,indices:i}}});const{addImpl:Ah,bincountImpl:gh,bincountReduceImpl:mh,ceilImpl:fh,concatImpl:Ih,equalImpl:yh,expImpl:bh,expm1Impl:Ch,floorImpl:xh,gatherNdImpl:Eh,gatherV2Impl:wh,greaterImpl:vh,greaterEqualImpl:Bh,lessImpl:Rh,lessEqualImpl:Sh,linSpaceImpl:Th,logImpl:kh,maxImpl:Nh,maximumImpl:Fh,minimumImpl:Qh,multiplyImpl:Dh,negImpl:Gh,notEqualImpl:Lh,prodImpl:_h,rangeImpl:Wh,rsqrtImpl:$h,sigmoidImpl:Mh,simpleAbsImpl:Vh,sliceImpl:Uh,sparseFillEmptyRowsImpl:Xh,sparseReshapeImpl:Oh,sparseSegmentReductionImpl:Zh,sqrtImpl:Ph,stridedSliceImpl:Yh,stringNGramsImpl:Hh,stringSplitImpl:Kh,stringToHashBucketFastImpl:zh,subImpl:Jh,tileImpl:jh,topKImpl:qh,transposeImpl:eA,uniqueImpl:tA}=hh;function nA(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function rA(e,t){return 1===t?[e]:nA(e,t)}class aA{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=rA("rc",t),r=Ip(t),a=function(e,t,n){if(1===e)return"rc > "+t[0];let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),o=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=t[t.length-1-n]+","+s;n.push(s)}return n}(n,t);if(1===n)return`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${o}));\n          }\n        }\n      `}}}class sA{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Ep(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?ap(["r","c","d"],"inputShape"):np(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":sp(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class oA{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=uA(t,n),a=lA(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=iA(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let o;return r===vd.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===vd.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===vd.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===vd.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===vd.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=uA(n,r),s=lA(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const o=iA(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),i=z().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: "+this._numBytesAllocated),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function iA(e,t,n,r,a){const s=function(e,t){switch(e){case vd.PACKED_2X2_FLOAT32:return _p(t);case vd.PACKED_2X2_FLOAT16:return Wp(t);case vd.UNPACKED_FLOAT32:return Dp(t);case vd.UNPACKED_FLOAT16:return Gp(t);case vd.PACKED_4X1_UNSIGNED_BYTE:return Lp(t);default:throw new Error("Unknown physical texture type "+e)}}(t,r);let o;if(a){const[t,n]=Sd(e[0],e[1]);o=t*n}else{const[t,n]=Bd(e[0],e[1]);o=t*n}return o*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error("Unknown internal format "+t)}(n,s)}function uA(e,t){if(e===wd.UPLOAD)return vd.PACKED_2X2_FLOAT32;if(e===wd.RENDER||null==e)return function(e){return z().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?vd.PACKED_2X2_FLOAT32:vd.UNPACKED_FLOAT32:e?vd.PACKED_2X2_FLOAT16:vd.UNPACKED_FLOAT16}(t);if(e===wd.DOWNLOAD||e===wd.PIXELS)return vd.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type "+e)}function lA(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class cA{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Ep(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const dA="return abs(x);",pA="return x;";class hA{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Ep(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class AA{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=rA("rc",t),r=Ip(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const gA=ku,mA={};const fA=z().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class IA extends p{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!z().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=xd(z().getNumber("WEBGL_VERSION"));this.binaryCache=((t=z().getNumber("WEBGL_VERSION"))in mA||(mA[t]={}),mA[t]),this.gpgpu=new Mp(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new oA(this.gpgpu),this.numMBBeforeWarning=null==z().global.screen?1024:z().global.screen.height*z().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new d(this,xs())}nextDataId(){return IA.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((z().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||z().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:wd.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(z().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:wd.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:o,isPacked:i}=t;if(null!=s){let t;t=i?new hA(o,pA):new cA(o,pA);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;if(u&&(l=Ar()),"complex64"===r){c=Ul(this.readSync(a.real.dataId),this.readSync(a.imag.dataId))}else c=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=Ar()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:o,isPacked:i}=t;if(null!=a){let t;t=i?new hA(r,pA):new cA(r,pA);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===z().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&z().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...Rd(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);l=Ul(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=C(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;kd(e,()=>e.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(e=>e(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&xs().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>mr(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return $a(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!Nd(n)){if(z().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=C(t);if(z().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...Rd(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=z().getBool("WEBGL_PACK")&&!0===r,o=s?Od(t):t,i=s?new Rp(o):new Bp(o),u=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=b(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=b(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),o.getExtraProfileInfo=()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Ar(),endMs:null}}endTimer(e){return z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Ar(),e)}async getQueryTime(e){if(z().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=fA){return z().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&C(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){P("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return gA(e.shape,t)}packedUnaryOp(e,t,n){const r=new hA(e.shape,t),a=this.compileAndRun(r,[e],n);return xs().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Vh(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(z().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,dA,e.dtype);const t=new cA(e.shape,dA),n=this.compileAndRun(t,[e]);return xs().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Q(n[0])){const a=n.map(e=>gr(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return xs().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new AA(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new aA(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Ud(e.shape),...Xd(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[Ud(t),...Xd(t)],s=new sA(a,n),o=[n],i=this.runWebGLProgram(s,[r],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=Od(r);let o;const i=Rd(s);o=n?new vp(s):new wp(s);const u=[i];return{dtype:a,shape:r,dataId:this.runWebGLProgram(o,[{shape:s,dtype:a,dataId:e}],a,u,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===Ed.DENSE){const t=Rd(e.outputShape);o.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===C(s.shape))return o.values=T(s.dtype,0),s;const i=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&C(t.shape)<=z().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),i.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Pd(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),i.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:o,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach(t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:u}=yp(e.packedInputs,t.shape,s);let l="",c="",d="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=_(i);d=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${i[0]>1}_${i[1]>1}`;const p=t.shape.length,h=2===i.length&&x(t.shape,s),A=1===C(t.shape),g=To(t.shape,n.shape),m=!e.packedInputs&&p===n.shape.length&&x(s,n.texData.texShape),f=e.packedInputs||i.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${p}_${m}_${o?u:""}_${i.length}_${A}_${g}_${h}_${l}_${c}_${d}_${f}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}});const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+z().getNumber("WEBGL_VERSION"),s}(e,u,l),d=this.getAndSaveBinary(c,()=>function(e,t,n,r){const a=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),s=a.map(e=>e.shapeInfo),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},i=up(a,o,t),u=e.createProgram(i);let l=null;const c=e.getUniformLocation(u,"NAN",!1);1===z().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(u,"INFINITY",!1));const d=!1,p={},h={},A={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];p[r]=e.getUniformLocation(u,r,d),p["offset"+r]=e.getUniformLocation(u,"offset"+r,d),t.enableShapeUniforms&&(h[r+"Shape"]=e.getUniformLocation(u,r+"Shape",d),A[r+"TexShape"]=e.getUniformLocation(u,r+"TexShape",d))}let g,m,f;t.enableShapeUniforms&&(g=e.getUniformLocation(u,"outShape",d),f=e.getUniformLocation(u,"outShapeStrides",d),m=e.getUniformLocation(u,"outTexShape",d));const I=[];return t.customUniforms&&t.customUniforms.forEach((t,n)=>{I[n]=e.getUniformLocation(u,t.name,d)}),{program:t,source:i,webGLProgram:u,uniformLocations:p,customUniformLocations:I,inShapeInfos:s,outShapeInfo:o,infLoc:l,nanLoc:c,inShapesLocations:h,inTexShapesLocations:A,outShapeLocation:g,outShapeStridesLocation:f,outTexShapeLocation:m}}(this.gpgpu,e,u,l)),p=null!=this.activeTimers;let h;p&&(h=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||(xp(t.inShapeInfos,n),xp([t.outShapeInfo],[r]));const s=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,o[0],o[1]):e.setOutputMatrixTexture(s,o[0],o[1]),e.setProgram(t.webGLProgram),1===z().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],o=t.uniformLocations["offset"+a],i=t.inShapesLocations[a+"Shape"],u=t.inTexShapesLocations[a+"TexShape"];if(i){const{uniformShape:r}=yp(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(i,new Int32Array(r));break;case 2:e.gl.uniform2iv(i,new Int32Array(r));break;case 3:e.gl.uniform3iv(i,new Int32Array(r));break;case 4:e.gl.uniform4iv(i,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(C(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)});const i=t.outShapeLocation;if(i)switch(r.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=_(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach((n,r)=>{const s=t.customUniformLocations[r],o=a[r];if("float"===n.type)e.gl.uniform1fv(s,o);else if("vec2"===n.type)e.gl.uniform2fv(s,o);else if("vec3"===n.type)e.gl.uniform3fv(s,o);else if("vec4"===n.type)e.gl.uniform4fv(s,o);else if("int"===n.type)e.gl.uniform1iv(s,o);else if("ivec2"===n.type)e.gl.uniform2iv(s,o);else if("ivec3"===n.type)e.gl.uniform3iv(s,o);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,o)}}),e.executeProgram()}(this.gpgpu,d,u,l,r),i.forEach(e=>this.disposeIntermediateTensorInfo(e)),p&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));const A=z().get("WEBGL_FLUSH_THRESHOLD");if(A>0){const e=Ar();e-this.lastGlFlushTime>A&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!z().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!z().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Es(()=>{if(!z().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=z().getBool("DEBUG");z().set("DEBUG",!1);const t=this.abs(ou(1e-8)).dataSync()[0];if(z().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:o,isPacked:i}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=Ar());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=z().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map((t,n)=>n>=e.length-2?g(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=S(e);e=t.newShape}let r=C(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=Ud(e);let n=2,a=2;return e.length&&([n,a]=Xd(e)),r=t*(n/2)*(a/2),w(r).map(e=>2*e)}return w(r)}(n,i),t.texShape=c),null!=a){const e=Od(n);let s,o=c[1],d=c[0];const p=a instanceof Uint8Array;i?([o,d]=Sd(c[0],c[1]),s=new Tp(e,p)):s=new Sp(e,p);const h=this.makeTensorInfo([d,o],r);this.texData.get(h.dataId).usage=p?wd.PIXELS:wd.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(h.dataId),o,d,a);const A=[[d,o]],g=!0,m=this.runWebGLProgram(s,[h],r,A,g),f=this.texData.get(m.dataId);t.texture=f.texture,t.texShape=f.texShape,t.isPacked=f.isPacked,t.usage=f.usage,this.disposeIntermediateTensorInfo(h),this.texData.delete(m.dataId),t.values=null,u&&(this.uploadWaitMs+=Ar()-l)}else{const e=this.acquireTexture(c,o,r,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype "+t)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*F(t)}}IA.nextDataId=0,Hr()&&function(e,t,n=1){Zr.registerBackend(e,t,n)}("webgl",()=>new IA,2);class yA{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=No(t,n),this.enableShapeUniforms=Ep(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class bA{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=No(t,n);const a=this.outputShape.length;this.enableShapeUniforms=Ep(a);let s="";if(r)if(0===a||1===C(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(s=`\n          ${Ip(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=rA("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function CA(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const xA={kernelName:ze,backendName:"webgl",kernelFunc:CA};function EA(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),o=n.texData.get(s.dataId),i=CA({inputs:{x:r},backend:n}),u=CA({inputs:{x:a},backend:n});return o.complexTensorInfos={real:i,imag:u},s}const wA={kernelName:be,backendName:"webgl",kernelFunc:EA},vA="return (a < 0.) ? b * a : a;",BA="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const RA={kernelName:et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,o=n.makeTensorInfo([],"float32",pr(s,"float32")),i=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bA(BA,a.shape,o.shape):new yA(vA,a.shape,o.shape),u=n.runWebGLProgram(i,[a,o],a.dtype);return n.disposeIntermediateTensorInfo(o),u}},SA="return (a < 0.) ? b * a : a;",TA="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const kA={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bA(TA,r.shape,a.shape):new yA(SA,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}};function NA({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:o}=a,i=s,u=r||o.dtype;if(i.shouldExecuteOnCPU([o])&&null!=n){const e=i.texData.get(o.dataId),t=n(e.values,u);return i.makeTensorInfo(o.shape,u,t)}let l;return l=z().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new hA(o.shape,t):new cA(o.shape,e),i.runWebGLProgram(l,[o],u)}}function FA({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:o,backend:i})=>{const{a:u,b:l}=o,c=i;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},o=new yA(e,u.shape,l.shape);return c.runWebGLProgram(o,[a,s],Lr(n.dtype,r.dtype))}),s=EA({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),s}const d=s||Lr(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=a){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?nc(e):e,r="string"===u.dtype?nc(t):t,[s,o]=a(u.shape,l.shape,n,r,d),i=c.makeTensorInfo(o,d);return c.texData.get(i.dataId).values=s,i}let p;return p=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new bA(t,u.shape,l.shape,n):new yA(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],d)}}function QA(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?TA:SA;if("leakyrelu"===e)return t?BA:vA;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class DA{constructor(e,t,n,r=!1,a=!1,s=!1,o=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Ep(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],A=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";o&&(g=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,m="result = activation(result);");const f=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let I="rc.x",y="rc.x";e[0]<t[0]?I=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${g}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${I};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${A[0]});\n          result += (${h[1]} * ${A[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${f}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}const GA="return areal * breal - aimag * bimag;",LA="return areal * bimag + aimag * breal;";class _A{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=No(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const WA="return a * b;";function $A(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=Lr(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new _A(GA,r.shape,a.shape),o=new _A(LA,r.shape,a.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),c=EA({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[o,i]=Dh(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(i,s);return n.texData.get(u.dataId).values=o,u}let o;return o=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bA(WA,r.shape,a.shape):new yA(WA,r.shape,a.shape),n.runWebGLProgram(o,[r,a],s)}const MA={kernelName:mt,backendName:"webgl",kernelFunc:$A};function VA(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,o=n,i=C(a.shape),u=function(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}(s,i),l=C(u);f(i===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const c=o.texData.get(a.dataId);return!c.isPacked||Pd(a.shape,u)||null!==c.texture&&Pd(c.shape,u)?(o.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[Ud(e.shape),...Xd(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[Ud(t),...Xd(t)],o=new sA(s,r),i=[r],u=n.runWebGLProgram(o,[a],e.dtype,i,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,u,o)}const UA={kernelName:Nt,backendName:"webgl",kernelFunc:VA};class XA{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const o=4*Math.floor(n/4),i=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${E(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===i}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===i}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class OA{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function ZA(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Rl(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let o=0;o<a.length;o++){const{inSize:i,windowSize:u,outSize:l}=a[o];let c,d;c="mean"===n?0===o?new XA({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},i):new XA({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l}):new OA({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},n),d=s,s=r.runWebGLProgram(c,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}class PA{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=Ip(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class YA{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Ip(this.rank),a=nA("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const o=`vec2(${s.slice(-2).join()})`,i=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function HA(e,t,n){const r=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new YA(e.shape,t):new PA(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function KA(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r;return function(e,t,n,r){const a=t,s=e.shape.length,o=R(a,e.shape);let i=o;const u=gi(i,s),l=null!=u;let c=e;l&&(c=HA(e,u,r),i=fi(i.length,s)),Ai("sum",i,s);const[d,p]=pi(c.shape,i);let h=d;n&&(h=hi(d,o));const A=C(p),g=VA({inputs:{x:c},attrs:{shape:[C(e.shape)/A,A]},backend:r}),m=ZA(g,_r(e.dtype),"sum",r),f=VA({inputs:{x:m},attrs:{shape:h},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(m),l&&r.disposeIntermediateTensorInfo(c),f}(a,s,o,n)}const zA={kernelName:"Sum",backendName:"webgl",kernelFunc:KA};function JA(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,o=n,i=a.shape.length,u=new Array(i);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(o.shouldExecuteOnCPU([a])){const e=o.texData.get(a.dataId).values,t=eA(e,a.shape,a.dtype,s,u);l=o.makeTensorInfo(u,a.dtype);o.texData.get(l.dataId).values=t}else l=HA(a,s,o);return l}const jA={kernelName:dn,backendName:"webgl",kernelFunc:JA};function qA({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,d=n?e.shape[l-2]:e.shape[l-1],p=r?t.shape[c-1]:t.shape[c-2],h=n?e.shape[l-1]:e.shape[l-2],A=r?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),m=t.shape.slice(0,-2),I=C(g),y=C(m);f(l>=2&&c>=2&&(I===y||1===I||1===y),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${m}).`);const b=(I>y?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([h,A]);f(d===p,()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);const x=n?[I,d,h]:[I,h,d],E=r?[y,A,p]:[y,p,A],w=VA({inputs:{x:e},backend:a,attrs:{shape:x}}),v=VA({inputs:{x:t},backend:a,attrs:{shape:E}}),B=[w,v],R=Math.max(I,y),S=n?w.shape[1]:w.shape[2],T=null!=s,k=null!=o,N="leakyrelu"===u,F=null!=u?QA(u,!0):null;let Q;if((1===h||1===A)&&S>1e3&&!1===(T||k||N||null!=F)){let e=w,t=v;n&&(e=JA({inputs:{x:w},backend:a,attrs:{perm:[0,2,1]}}),B.push(e)),r&&(t=JA({inputs:{x:v},backend:a,attrs:{perm:[0,2,1]}}),B.push(t));const s=1===A;let o=e;1!==A&&(o=VA({inputs:{x:e},backend:a,attrs:{shape:[R,S,1]}}),B.push(o));const i=1===A?2:1;let u=t;s&&(u=VA({inputs:{x:t},backend:a,attrs:{shape:[R,1,S]}}),B.push(u));const l=$A({inputs:{a:o,b:u},backend:a});Q=KA({inputs:{x:l},backend:a,attrs:{axis:i,keepDims:!0}}),B.push(l)}else{const u=Lr(e.dtype,t.dtype),l=new DA(x,E,[R,h,A],n,r,T,F,k,N),c=[w,v];if(null!=s&&c.push(s),k&&c.push(o),N){const e=a.makeTensorInfo([],"float32",pr(i,"float32"));c.push(e),B.push(e)}Q=a.runWebGLProgram(l,c,u)}const D=VA({inputs:{x:Q},backend:a,attrs:{shape:b}});B.push(Q);for(const e of B)a.disposeIntermediateTensorInfo(e);return D}const eg={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;return qA({a:a,b:s,transposeA:u,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:c})}},tg="return abs(x);";const ng={kernelName:"Abs",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Vh(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new hA(r.shape,tg):new cA(r.shape,tg),n.runWebGLProgram(a,[r],r.dtype)}},rg=NA({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),ag={kernelName:te,backendName:"webgl",kernelFunc:rg},sg=NA({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),og={kernelName:ne,backendName:"webgl",kernelFunc:sg},ig="return a + b;",ug=FA({opSnippet:ig,packedOpSnippet:ig,supportsComplex:!0,cpuKernelImpl:Ah}),lg={kernelName:re,backendName:"webgl",kernelFunc:ug};class cg{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class dg{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>"T"+t);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>"v"+e).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const pg={kernelName:ae,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return CA({inputs:{x:a[0]},backend:r});if(a.length>z().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map(e=>e.dtype).reduce((e,t)=>Lr(e,t)),o=a.map(e=>e.shape),i=z().getBool("WEBGL_PACK")?new dg(a[0].shape,o):new cg(a[0].shape,o);return r.runWebGLProgram(i,a,s)}};const hg={kernelName:"All",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,i=a.shape.length,u=R(s,a.shape);let l=u;const c=gi(l,i);let d=a;null!=c&&(d=JA({inputs:{x:a},backend:n,attrs:{perm:c}}),l=fi(l.length,i)),Ai("all",l,i);const[p,h]=pi(d.shape,l),A=VA({inputs:{x:d},backend:n,attrs:{shape:[-1,C(h)]}}),g=ZA(A,A.dtype,"all",n);let m;if(o){m=VA({inputs:{x:g},backend:n,attrs:{shape:hi(p,u)}})}else m=VA({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(d),m}};const Ag={kernelName:"Any",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,i=a.shape.length,u=R(s,a.shape);let l=u;const c=gi(l,i);let d=a;null!=c&&(d=JA({inputs:{x:a},backend:n,attrs:{perm:c}}),l=fi(l.length,i)),Ai("any",l,i);const[p,h]=pi(d.shape,l),A=VA({inputs:{x:d},backend:n,attrs:{shape:[-1,C(h)]}}),g=ZA(A,A.dtype,"any",n);let m;if(o){m=VA({inputs:{x:g},backend:n,attrs:{shape:hi(p,u)}})}else m=VA({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(d),m}};class gg{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${o} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class mg{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,f(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,u=Ip(i),l=rA("coords",i);let c,d;if(1===s){d=i+1;const e=Ip(d);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[i-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[i-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[i-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[i-2]};`}else d=i,c=`\n        ${u} sourceLocR = coords;\n        ++${l[i-1]};\n        ${u} sourceLocG = coords;\n        ++${l[i-2]};\n        ${u} sourceLocA = coords;\n        --${l[i-1]};\n        ${u} sourceLocB = coords;\n        --${l[i-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],A=p.map(e=>"int "+e),g=rA("sourceLocR",d-1).concat("inIdx.r"),m=rA("sourceLocG",d-1).concat("inIdx.g"),I=rA("sourceLocB",d-1).concat("inIdx.b"),y=rA("sourceLocA",d-1).concat("inIdx.a"),b="max"===n?"greaterThan":"lessThan",C=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${I.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,x=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${I.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,E=r?"":`\n      float getBestIndicesAChannel(${A.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${A.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${E}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[i-1]} < ${o[i-1]-1};\n        bool hasNextRow = ${l[i-2]} < ${o[i-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${x};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${C}\n          vec4 candidate = ${x};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function fg(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const o=Rl(s),i={windowSize:o,inSize:s,batchSize:a,outSize:Math.ceil(s/o)},u=new gg(i,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const d=fg(e,t,n,c);return e.disposeIntermediateTensorInfo(c),d}function Ig(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=Rl(a[a.length-1]),o=new mg(a,s,n,null==r),i=null==r?[t]:[t,r],u=e.runWebGLProgram(o,i,"int32");if(u.shape.length===t.shape.length){const r=Ig(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function yg(e,t,n,r){const a=[n];if(Ai("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!z().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let o=t;null!==s&&s.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,u]=pi(o.shape,a),l=C(u),c=VA({inputs:{x:o},backend:e,attrs:{shape:[-1,l]}});n.push(c);const d=fg(e,c,r);n.push(d);const p=VA({inputs:{x:d},backend:e,attrs:{shape:i}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),p}return Ig(e,t,r)}const bg={kernelName:se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let o=R(s,a.shape);const i=gi(o,a.shape.length);let u=a;const l=[];null!=i&&(u=JA({inputs:{x:a},backend:n,attrs:{perm:i}}),l.push(u),o=fi(o.length,u.shape.length)),Ai("argMax",[o[0]],u.shape.length);const c=yg(n,u,o[0],"max");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}};const Cg={kernelName:oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let o=R(s,a.shape);const i=gi(o,a.shape.length);let u=a;const l=[];null!=i&&(u=JA({inputs:{x:a},backend:n,attrs:{perm:i}}),l.push(u),o=fi(o.length,u.shape.length)),Ai("argMin",[o[0]],u.shape.length);const c=yg(n,u,o[0],"min");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},xg=NA({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Eg={kernelName:ie,backendName:"webgl",kernelFunc:xg},wg=NA({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),vg={kernelName:ue,backendName:"webgl",kernelFunc:wg},Bg=NA({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Rg={kernelName:le,backendName:"webgl",kernelFunc:Bg},Sg=FA({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Tg={kernelName:de,backendName:"webgl",kernelFunc:Sg},kg=NA({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Ng={kernelName:ce,backendName:"webgl",kernelFunc:kg};class Fg{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const A="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let f="0.0";if(A||(f="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${i});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?g:m:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(I="avgValue / count");const y=4*Math.floor(s/4),b=s%4,C=`\n      if (${A}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${i});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${f};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${f});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${C}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${C}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${C}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${C}\n          }\n        }\n        setOutput(${I});\n      }\n    `}}class Qg{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,A=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const I="avg"===t;let y="0.0";if(I||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${i}, ${u});\n        const ivec3 pads = ivec3(${g}, ${m}, ${f});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${A};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${A} +\n                      wR * ${A} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const C=4*Math.floor(s/4),x=s%4,E=`\n      if (${I}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${i}, ${u});\n      const ivec3 pads = ivec3(${g}, ${m}, ${f});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${C}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${E}\n            }\n\n            int xC = xCCorner + ${C};\n            if (${1===x}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${E}\n            } else if (${2===x}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${E}\n            } else if (${3===x}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${E}\n            }\n          }\n          setOutput(${b});\n        }\n      }\n    `}}const Dg={kernelName:pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;qd(a,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=r;f(eo(o,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=Os(a.shape,s,o,1,i,u);if(1===l.filterWidth&&1===l.filterHeight&&x(l.inShape,l.outShape))return CA({inputs:{x:a},backend:n});const c=new Fg(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}};const Gg={kernelName:he,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:u,dataFormat:l}=r,c=Zs(a.shape,s,o,[1,1,1],i,u,l),d=new Qg(c,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};class Lg{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=i-1-e.padInfo.top,c=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${o}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _g{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=c-1-e.padInfo.front,A=d-1-e.padInfo.top,g=p-1-e.padInfo.left,m=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${A}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Wg={kernelName:"AvgPool3DGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,d=Zs(o.shape,i,u,[1,1,1],l,c),p=new _g(d);return n.runWebGLProgram(p,[a],o.dtype)}};const $g={kernelName:"AvgPoolGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s;qd([a,s],"avgPoolGrad");const{filterSize:i,strides:u,pad:l}=r,c=Os(o.shape,i,u,1,l),d=new Lg(c);return n.runWebGLProgram(d,[a],o.dtype)}};const Mg={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:o,transposeB:i}=r;return qA({a:a,b:s,transposeA:o,transposeB:i,backend:n})}};class Vg{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],No(e,t),No(e,n);let o="0.0";null!=r&&(No(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=a&&(No(e,a),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${i};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Ug{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],No(e,t),No(e,n);let o="vec4(0.0)";null!=r&&(No(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=a&&(No(e,a),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${i};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Xg={kernelName:Ze,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:o,scale:i}=e;f(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),f(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),f(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,s];let c=null;null!=o&&(c=o.shape,l.push(o));let d=null;null!=i&&(d=i.shape,l.push(i));const p=z().getBool("WEBGL_PACK_NORMALIZATION")?new Ug(r.shape,a.shape,s.shape,c,d,u):new Vg(r.shape,a.shape,s.shape,c,d,u);return t.runWebGLProgram(p,l,l[0].dtype)}};class Og{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Ip(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Zg.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${Zg[t]} = start[${t}] + coords.${Zg[t]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Zg=["x","y","z","w","u","v"];class Pg{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Ip(this.rank),n=rA("coords",this.rank),r=rA("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,o=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${o}\n        ${i}\n        setOutput(result);\n      }\n    `}}function Yg(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:o}=r,[i,u]=ys(a,s,o);if(ss(a,i,u),0===C(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=Uh(e.values,i,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=fs(a.shape,i,u);if(l||!c){const e=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Pg(u):new Og(u),t=[i];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),o=r.texData.get(s.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=Is(t,_(e.shape));a.slice&&(i+=a.slice.flatOffset),o.slice={flatOffset:i,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,u+1),s}(a,i,u,n)}const Hg={kernelName:Vt,backendName:"webgl",kernelFunc:Yg},Kg={kernelName:ge,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:o}=r;f(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=s.reduce((e,t)=>e*t),u=Tl(a.shape,s,i),l=kl(u.length,s.length),c=Nl(a.shape,s,i),d=Fl(o,s.length),p=Ql(c,o,s.length),h=[],A=VA({inputs:{x:a},backend:n,attrs:{shape:u}}),g=JA({inputs:{x:A},backend:n,attrs:{perm:l}}),m=VA({inputs:{x:g},backend:n,attrs:{shape:c}}),I=Yg({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return h.push(A),h.push(g),h.push(m),h.forEach(e=>n.disposeIntermediateTensorInfo(e)),I}};const zg={kernelName:me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o}=r,i=n.readSync(a.dataId),u=n.readSync(s.dataId),l=gh(i,u,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,l)}},Jg=FA({opSnippet:"return float(a != b);",cpuKernelImpl:Lh,dtype:"bool"}),jg={kernelName:ft,backendName:"webgl",kernelFunc:Jg};function qg(e){const{inputs:t,backend:n}=e,{input:r}=t;return CA({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const em={kernelName:St,backendName:"webgl",kernelFunc:qg};const tm={kernelName:fe,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===s.dtype)return CA({inputs:{x:s},backend:r});const t=Bi(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=EA({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=qg({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(i=s.dtype,"complex64"===(u=o)||"float32"===u&&"complex64"!==i||"int32"===u&&"float32"!==i&&"complex64"!==i||"bool"===u&&"bool"===i){const e=CA({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}var i,u;if("int32"===o)return function(e,t){const n=new cA(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",T("bool",1)),t=Jg({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}},nm="return ceil(x);",rm=NA({opSnippet:nm,packedOpSnippet:nm,cpuKernelImpl:fh}),am={kernelName:Ie,backendName:"webgl",kernelFunc:rm};class sm{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class om{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const im={kernelName:ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:o}=r;let i;i=z().getBool("WEBGL_PACK_CLIP")?new om(a.shape):new sm(a.shape);const u=[[s],[o]];return n.runWebGLProgram(i,[a],a.dtype,u)}};class um{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function lm(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const cm={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new um(r.shape),o=[lm(r,a.complexTensorInfos.real),lm(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class dm{constructor(e){this.outputShape=[],this.outputShape=Bl(e,1),this.variableNames=e.map((e,t)=>"T"+t);const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class pm{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Bl(e,t);const n=this.outputShape,r=n.length,a=Ip(r),s=rA("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>"T"+t);const i=new Array(e.length-1);i[0]=e[0][t];for(let n=1;n<i.length;n++)i[n]=i[n-1]+e[n][t];const u=o[t],l=o.slice(-2),c=o.join();let d=`if (${u} < ${i[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<i.length;e++){const t=i[e-1];d+=`\n        if (${u} < ${i[e]}  && ${u} >= ${i[e-1]}) {\n          return getChannel(\n            getT${e}(${hm(o,u,t)}),\n            vec2(${hm(l,u,t)}));\n        }`}const p=i.length,h=i[i.length-1];d+=`\n        return getChannel(\n          getT${p}(${hm(o,u,h)}),\n          vec2(${hm(l,u,h)}));`,this.userCode=`\n      float getValue(${o.map(e=>"int "+e)}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function hm(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function Am(e){const{inputs:t,backend:n}=e,{input:r}=t;return CA({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const gm={kernelName:je,backendName:"webgl",kernelFunc:Am};function mm(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map(e=>qg({inputs:{input:e},backend:n})),a=e.map(e=>Am({inputs:{input:e},backend:n})),s=mm(r,t,n),o=mm(a,t,n),i=EA({inputs:{real:s,imag:o},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),a.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map(e=>{const r=C(e.shape.slice(t));return VA({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})}),s=a.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),o=Bl(a.map(e=>e.shape),1),i=1===a[0].shape[0],u=Ih(s,o,r,i),l=Bl(e.map(e=>e.shape),t),c=n.makeTensorInfo(l,r,u);return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}if(e.length>z().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=mm(e.slice(0,r),t,n),s=mm(e.slice(r),t,n),o=mm([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}if(z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new pm(e.map(e=>e.shape),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:o}=function(e,t,n){const r=Bl(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>VA({inputs:{x:e},attrs:{shape:[-1,C(e.shape.slice(t))]},backend:n})),outShape:r}}(e,t,n),i=new dm(s.map(e=>e.shape)),u=n.runWebGLProgram(i,s,r);s.forEach(e=>n.disposeIntermediateTensorInfo(e));const l=VA({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),l}function fm(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=R(a,t[0].shape)[0],o=Bl(t.map(e=>e.shape),s);if(0===C(o))return n.makeTensorInfo(o,t[0].dtype,[]);const i=t.filter(e=>C(e.shape)>0);if(1===i.length)return CA({inputs:{x:i[0]},backend:n});return vl(i.map(e=>e.shape),s),mm(i,s,n)}const Im={kernelName:xe,backendName:"webgl",kernelFunc:fm};class ym{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),A=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,f=g?2:3,I=g?3:1;let y="",b="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const C=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${I}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${f}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===A}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===A}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===A}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${C}\n        ${b}\n        setOutput(result);\n      }\n    `}}class bm{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),A=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${o});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===A}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===A}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===A}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Cm{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Ep(this.outputShape.length);const{dataFormat:n}=t,r=tp(),a="channelsLast"===n,s=a?0:1,o=a?1:2,i=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function xm({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:i=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,d=u[0]*u[1]*u[2],p=n.outChannels,h="channelsLast"===n.dataFormat;let A;const g=[];if(!((1===d||1===p)&&c>1e3)&&l.isPacked&&h&&null!=l.texture&&u[2]%2!=0&&x(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,f(Pd(l.shape,d.shape),()=>`packed reshape ${l.shape} to ${d.shape} isn't free`);const h=VA({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(h);const m=qA({a:d,b:h,backend:r,transposeA:false,transposeB:false,bias:a,activation:i,preluActivationWeights:s,leakyreluAlpha:o}),I=r.texData.get(m.dataId);f(I.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=p,I.shape=n.outShape,A=CA({inputs:{x:m},backend:r}),A.shape=n.outShape,g.push(m)}else{const l=VA({inputs:{x:e},backend:r,attrs:{shape:[1,h?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=VA({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=qA({a:l,b:c,transposeA:false,transposeB:false,backend:r,bias:a,activation:i,preluActivationWeights:s,leakyreluAlpha:o});A=VA({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),g.push(l),g.push(c),g.push(d)}for(const e of g)r.disposeIntermediateTensorInfo(e);return A}function Em({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:i=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:d,outHeight:p,dataFormat:h}=n,A="channelsLast"===h,g=u*l*c,m=p*d,f=[g,m],I=[],y=VA({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),b=VA({inputs:{x:t},backend:r,attrs:{shape:[1,g,C(t.shape)/g]}});I.push(y),I.push(b);const x=new Cm(f,n),E=[y.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],w=r.runWebGLProgram(x,[y],"float32",E),v=VA({inputs:{x:w},backend:r,attrs:{shape:[1,f[0],f[1]]}});I.push(w),I.push(v);const B=null!=a,R=null!=s,S="leakyrelu"===i,T=i?QA(i,!0):null,k=new DA(v.shape,b.shape,[1,m,n.outChannels],!0,!1,B,T,R,S),N=[v,b];if(a&&N.push(a),R&&N.push(s),S){const e=r.makeTensorInfo([],"float32",pr(o,"float32"));N.push(e),I.push(e)}const F=r.runWebGLProgram(k,N,"float32"),Q=VA({inputs:{x:F},backend:r,attrs:{shape:A?[1,p,d,n.outChannels]:[1,n.outChannels,p,d]}});I.push(F);for(const e of I)r.disposeIntermediateTensorInfo(e);return Q}const wm={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:i,dataFormat:u,dilations:l,dimRoundingMode:c}=r,d=to(u),p=Ps(a.shape,s.shape,o,l,i,c,!1,d);let h;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(z().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])h=Em({x:a,filter:s,convInfo:p,backend:n});else{const e=new ym(p);h=n.runWebGLProgram(e,[a,s],"float32")}else h=xm({x:a,filter:s,convInfo:p,backend:n});const A=VA({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),A}};class vm{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Bm{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Rm{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${o};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Sm{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${o}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Tm={kernelName:we,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,pad:i,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,d=to(u),p=Ps(a.shape,c,o,1,i,l,!1,d),h=new vm(p);return n.runWebGLProgram(h,[a,s],"float32")}};const km={kernelName:ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:o,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r,d=to(l),p=Ps(o,s.shape,i,1,u,c,!1,d),h=new Bm(p);return n.runWebGLProgram(h,[a,s],"float32")}};const Nm={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:i,dilations:u}=r,l=Ys(a.shape,s.shape,o,u,i),c=new bm(l);return n.runWebGLProgram(c,[a,s],"float32")}};const Fm={kernelName:"Conv3DBackpropFilterV2",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,pad:i,filterShape:u}=r,l=Ys(a.shape,u,o,1,i),c=new Rm(l);return n.runWebGLProgram(c,[a,s],"float32")}};const Qm={kernelName:"Conv3DBackpropInputV2",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:o,strides:i,inputShape:u}=r,l=Ys(u,s.shape,i,1,o),c=new Sm(l);return n.runWebGLProgram(c,[a,s],"float32")}},Dm={kernelName:"Cos",backendName:"webgl",kernelFunc:NA({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"})},Gm=NA({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Lm={kernelName:Re,backendName:"webgl",kernelFunc:Gm};class _m{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,u]=e,[l]=t,[c,d]=n;this.outputShape=[l,c,d,u];const p="bilinear"===r?1:0,[h,A]=[o-1+".0",i-1+".0"],[g,m,f]=c>1?[""+(o-1)/(c-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0","0.5 * (y1+y2) * "+h],[I,y,b]=d>1?[""+(i-1)/(d-1),"(x2-x1) * width_ratio",`x1*${A} + float(x)*(width_scale)`]:["0.0","0.0","0.5 * (x1+x2) * "+A];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${I});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${y};\n\n        float in_y = ${f};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${b};\n        if( in_x < 0.0 || in_x > ${A} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const Wm={kernelName:Te,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:o}=t,{cropSize:i,method:u,extrapolationValue:l}=r,c=new _m(a.shape,s.shape,i,u,l);return n.runWebGLProgram(c,[a,s,o],"float32")}};class $m{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${Mm(r,"coords")})`,s=e[e.length-1];let o="",i="";t?(o=n?"end != "+(s-1):"end != 0",i=n?"end + 1":"end - 1"):(o=n?"end + pow2 < "+s:"end >= pow2",i=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Ip(r)} coords = getOutputCoords();\n        int end = ${Vm(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${o}) {\n          int idx = ${i};\n          ${Vm(r,"coords")} = idx;\n          val += getX(${Mm(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function Mm(e,t){if(1===e)return""+t;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Vm(e,t){if(1===e)return""+t;if(2===e)return t+".y";if(3===e)return t+".z";if(4===e)return t+".w";throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const Um={kernelName:Se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:o,reverse:i}=r,u=a.shape.length,l=gi([s],u);let c=a;null!=l&&(c=JA({inputs:{x:a},backend:n,attrs:{perm:l}}));const d=fi(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=`+s);const p=c.shape[d];let h=CA({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){const t=new $m(c.shape,!1,i),r=[[e]],a=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(a)}if(o){const e=new $m(c.shape,o,i),t=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=JA({inputs:{x:h},backend:n,attrs:{perm:mi(l)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),e}return h}};const Xm={kernelName:ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:o,binaryOutput:i}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=gh(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=mh(e,t,o,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+a.shape.length+".")}};class Om{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Zm={kernelName:Ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:o}=r;f(s>1,()=>"blockSize should be > 1 for depthToSpace, but was: "+s);const i=a.shape[0],u="NHWC"===o?a.shape[1]:a.shape[2],l="NHWC"===o?a.shape[2]:a.shape[3],c="NHWC"===o?a.shape[3]:a.shape[1],d=u*s,p=l*s,h=c/(s*s),A=new Om("NHWC"===o?[i,d,p,h]:[i,h,d,p],s,o);return n.runWebGLProgram(A,[a],a.dtype)}};class Pm{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ep(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class Ym{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Ep(this.outputShape.length);const s=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,d=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;for(let e=0;e<l;e++){for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+=`\n        xR = xRCorner + ${e} * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      `;for(let t=0;t<(d+1)/2;t++){const n=2*t;if(p+=`\n          xC = xCCorner + ${n*u};\n          `,1===i){if(n<c&&(o%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n              `,p+=1===u&&n>0?`\n                xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xC${n} = xTexelC${n};\n                `,n+1<c)){const e=o%2==0?g(u):u;u%2==0&&o%2==1||u%2!=0&&o%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                    xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${n+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${n+1}Ready = 1;\n                  }\n                  `,u>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                      xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${n}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                  `):p+=1===e?`\n                    xC${n+1} = xTexelC${n};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                      xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${n+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${n+1}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${n+1};\n                    `}}else n<c&&(o%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${n+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n              `,n+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${n+1}.zw = vec2(0.);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${n}.xy, xTexelC${n+1}.xy);\n              `,n+1<c&&(p+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                `)));n<c&&(p+=`\n            wTexel = getW(${e}, ${n}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,n+1<c&&(p+=`\n              wTexel = getW(${e}, ${n+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n        }\n      "}let h="",A="";n&&(h=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,A="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${h}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${A}\n        setOutput(result);\n      }\n    `}}const Hm={kernelName:Fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:i,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),f(eo(o,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${c}'`);const d=Ps(a.shape,s.shape,o,c,i,l,!0);let p;p=z().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new Ym(d):new Pm(d);const h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[a,s],"float32",h)}};class Km{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zm{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Jm={kernelName:Qe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,filterShape:c}=r,d=Ps(a.shape,c,o,i,u,l,!0),p=new Km(d);return n.runWebGLProgram(p,[a,s],"float32")}};const jm={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:o,dilations:i,pad:u,dimRoundingMode:l,inputShape:c}=r,d=Ps(c,s.shape,o,i,u,l,!0),p=new zm(d);return n.runWebGLProgram(p,[a,s],"float32")}};class qm{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const ef={kernelName:"Diag",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=C(r.shape),o=VA({inputs:{x:r},backend:n,attrs:{shape:[s]}}),i=new qm(s),u=n.runWebGLProgram(i,[o],o.dtype),l=VA({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),l}};class tf{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:u,dilationWidth:l}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const nf={kernelName:Ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:i,dilations:u}=r,l=Xs(a.shape,s.shape,o,i,"NHWC",u);let c;const d=new tf(l);c=n.runWebGLProgram(d,[a,s],"float32");const p=VA({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),p}};const rf={kernelName:_e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:o,summedDims:i,idDims:u}=Zl(a,s.length);Yl(o.length,u,s);const{path:l,steps:c}=Hl(i,u),d=c.length;let p=null,h=o.length;const A=[];for(let e=0;e<d;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=Pl(h,u[t]);let a;Kl(e)?a=s[t]:(a=JA({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),A.push(a));const o=a.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);x(a.shape,o)||(a=VA({inputs:{x:a},backend:n,attrs:{shape:o}}),A.push(a)),null===p?p=a:(p=$A({inputs:{a:a,b:p},backend:n}),A.push(p))}e<d-1&&(l[e]>=0&&(p=KA({inputs:{x:p},backend:n,attrs:{axis:l[e]-(o.length-h),keepDims:!1}}),A.push(p)),h--)}for(const e of A)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},af={kernelName:"Elu",backendName:"webgl",kernelFunc:NA({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"})},sf={kernelName:"EluGrad",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=z().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new bA("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new yA("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},of=FA({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:yh}),uf={kernelName:We,backendName:"webgl",kernelFunc:of},lf={kernelName:"Erf",backendName:"webgl",kernelFunc:NA({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Ll};\n  float a1 = ${_l};\n  float a2 = ${Wl};\n  float a3 = ${$l};\n  float a4 = ${Ml};\n  float a5 = ${Vl};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`})},cf="return exp(x);",df=NA({opSnippet:cf,packedOpSnippet:cf,cpuKernelImpl:bh}),pf={kernelName:"Exp",backendName:"webgl",kernelFunc:df};function hf(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,o=s.shape.length,i=s.shape.slice();let u=a;return a<0&&(f(-(o+1)<=a,()=>`Axis must be in the interval [${-(o+1)}, ${o}]`),u=o+a+1),i.splice(u,0,1),VA({inputs:{x:s},backend:r,attrs:{shape:i}})}const Af={kernelName:$e,backendName:"webgl",kernelFunc:hf},gf="return exp(x) - 1.0;",mf=NA({opSnippet:gf,packedOpSnippet:gf,cpuKernelImpl:Ch}),ff={kernelName:Me,backendName:"webgl",kernelFunc:mf};class If{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?"2.0 * "+Math.PI:"-2.0 * "+Math.PI,s=n?r+".0":"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function yf(e,t,n){const r=n.texData.get(e.dataId),a=C(e.shape),s=e.shape[e.shape.length-1],o=VA({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),i=o.shape,u=new If("real",i,t),l=new If("imag",i,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:i},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:i}],d=n.runWebGLProgram(u,c,"float32"),p=n.runWebGLProgram(l,c,"float32"),h=EA({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const A=VA({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(h),A}const bf={kernelName:"FFT",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return yf(r,!1,n)}};class Cf{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function xf(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||D(a),"string"===s){const e=k(s,C(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new Cf(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}const Ef={kernelName:Ve,backendName:"webgl",kernelFunc:xf};class wf{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const vf={kernelName:Ue,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new wf(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},Bf="return floor(x);",Rf=NA({opSnippet:Bf,packedOpSnippet:Bf,cpuKernelImpl:xh}),Sf={kernelName:Xe,backendName:"webgl",kernelFunc:Rf},Tf=FA({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),kf={kernelName:Oe,backendName:"webgl",kernelFunc:Tf};class Nf{constructor(e){this.variableNames=["A"];const t=tp(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Ff{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=tp(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Qf={kernelName:mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,o="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,i="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],d=[l,u,s];(i||o)&&(null==Df&&(Df=document.createElement("canvas").getContext("2d")),Df.canvas.width=u,Df.canvas.height=l,Df.drawImage(a,0,0,u,l),a=Df.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=wd.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),a);const h=z().getBool("WEBGL_PACK")?new Ff(d):new Nf(d),A=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),A}};let Df;const Gf={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:A}=r,g=to(c),m=Ps(a.shape,s.shape,u,d,l,p,!1,g);let f;const I=[];if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(z().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])f=Em({x:a,filter:s,convInfo:m,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:A});else{const e=null!=o,t=null!=i,r="leakyrelu"===h,u=h?QA(h,!1):null,l=new ym(m,e,u,t,r),c=[a,s];if(o&&c.push(o),i&&c.push(i),r){const e=n.makeTensorInfo([],"float32",pr(A,"float32"));c.push(e),I.push(e)}f=n.runWebGLProgram(l,c,"float32")}else f=xm({x:a,filter:s,convInfo:m,backend:n,bias:o,activation:h,preluActivationWeights:i,leakyreluAlpha:A});const y=VA({inputs:{x:f},backend:n,attrs:{shape:m.outShape}});return I.push(f),I.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}};const Lf={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:i}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=r,A=[];let g=c;null==g&&(g=[1,1]),f(eo(u,g),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`);const m=Ps(a.shape,s.shape,u,g,l,d,!0),I=z().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels==1,y=p?QA(p,I):null,b=[a,s],C=null!=o,x=null!=i,E="leakyrelu"===p;if(C&&b.push(o),x&&b.push(i),E){const e=n.makeTensorInfo([],"float32",pr(h,"float32"));b.push(e),A.push(e)}let w;w=I?new Ym(m,C,y,x,E):new Pm(m,C,y,x,E);const v=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],B=n.runWebGLProgram(w,b,"float32",v);return A.forEach(e=>n.disposeIntermediateTensorInfo(e)),B}};class _f{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=Ip(t.length),a=Ip(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const Wf={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,o=s[s.length-1],i=C(r.shape),[u,l,c,d]=ts(r,a),p=VA({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),h=VA({inputs:{x:r},backend:n,attrs:{shape:[C(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=Eh(e,t,r.dtype,l,o,c,d,r.shape,i);return n.makeTensorInfo(u,r.dtype,s.values)}const A=new _f(o,d,[l,c]),g=n.runWebGLProgram(A,[h,p],h.dtype),m=VA({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(g),m}};class $f{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Ip(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(""+n[t]);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function Mf(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:o,batchDims:i}=r,u=ec(a,s,R(o,a.shape)[0],i),l=C(s.shape),c=[],d=VA({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=VA({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,l/u.batchSize]}});c.push(d),c.push(p);const h=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),r=wh(t,e,h);return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const A=new $f(d.shape,h),g=n.runWebGLProgram(A,[d,p],d.dtype);c.push(g);const m=VA({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return c.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}const Vf={kernelName:Pe,backendName:"webgl",kernelFunc:Mf},Uf=FA({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:vh,dtype:"bool"}),Xf={kernelName:He,backendName:"webgl",kernelFunc:Uf},Of=FA({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Bh}),Zf={kernelName:Ke,backendName:"webgl",kernelFunc:Of};const Pf={kernelName:Je,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return yf(r,!0,n)}},Yf={kernelName:"IsFinite",backendName:"webgl",kernelFunc:NA({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"})},Hf={kernelName:"IsInf",backendName:"webgl",kernelFunc:NA({opSnippet:"return float(isinf(x));",dtype:"bool"})},Kf=NA({opSnippet:"return float(isnan(x));",dtype:"bool"}),zf={kernelName:qe,backendName:"webgl",kernelFunc:Kf},Jf=FA({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:Rh,dtype:"bool"}),jf={kernelName:tt,backendName:"webgl",kernelFunc:Jf},qf=FA({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Sh,dtype:"bool"}),eI={kernelName:nt,backendName:"webgl",kernelFunc:qf};const tI={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,o=Th(r,a,s);return t.makeTensorInfo([o.length],"float32",o)}},nI={kernelName:"Log",backendName:"webgl",kernelFunc:NA({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:kh})},rI=NA({opSnippet:"return log(1.0 + x);"}),aI={kernelName:at,backendName:"webgl",kernelFunc:rI},sI=FA({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),oI={kernelName:st,backendName:"webgl",kernelFunc:sI},iI=NA({opSnippet:"return float(!(x >= 1.0));"}),uI={kernelName:ot,backendName:"webgl",kernelFunc:iI},lI=FA({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),cI={kernelName:it,backendName:"webgl",kernelFunc:lI};class dI{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class pI{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const hI={kernelName:"LRN",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:o,alpha:i,beta:u}=r,l=z().getBool("WEBGL_PACK_NORMALIZATION")?new pI(a.shape,s,o,i,u):new dI(a.shape,s,o,i,u);return n.runWebGLProgram(l,[a],a.dtype)}};class AI{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const gI={kernelName:"LRNGrad",backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:o}=t,{depthRadius:i,bias:u,alpha:l,beta:c}=r,d=new AI(a.shape,i,u,l,c);return n.runWebGLProgram(d,[a,s,o],a.dtype)}};function mI(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:o}=r,i=a.shape.length,u=R(s,a.shape);let l=u;const c=gi(l,i),d=null!=c,p=n.shouldExecuteOnCPU([a]);let h=a;if(d){if(p){const e=n.texData.get(h.dataId).values,t=new Array(i);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=eA(e,a.shape,a.dtype,c,t);h=n.makeTensorInfo(t,a.dtype);n.texData.get(h.dataId).values=r}else h=HA(a,c,n);l=fi(l.length,i)}Ai("max",l,i);const[A,g]=pi(h.shape,l);let m,f=A;if(o&&(f=hi(A,u)),p){const e=n.texData.get(h.dataId).values,t=Nh(e,C(g),f,a.dtype);m=n.makeTensorInfo(f,a.dtype);n.texData.get(m.dataId).values=t}else m=function(e,t,n,r){const a=C(t),s=VA({inputs:{x:e},attrs:{shape:[C(e.shape)/a,a]},backend:r}),o=ZA(s,e.dtype,"max",r),i=VA({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}(h,g,f,n);return d&&n.disposeIntermediateTensorInfo(h),m}const fI={kernelName:"Max",backendName:"webgl",kernelFunc:mI},II=FA({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Fh}),yI={kernelName:ut,backendName:"webgl",kernelFunc:II};const bI={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;qd(a,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:u}=r;f(eo(o,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`);const l=Os(a.shape,s,o,1,i,u);if(1===l.filterWidth&&1===l.filterHeight&&x(l.inShape,l.outShape))return CA({inputs:{x:a},backend:n});const c=new Fg(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}};const CI={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:o,pad:i,dataFormat:u,dimRoundingMode:l}=r,c=Zs(a.shape,s,o,[1,1,1],i,l,u),d=new Qg(c,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};class xI{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=a-1-e.padInfo.top,i=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class EI{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.front,d=u-1-e.padInfo.top,p=l-1-e.padInfo.left,h=i*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${o}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const wI={kernelName:"MaxPool3DGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s,{filterSize:i,strides:u,pad:l,dimRoundingMode:c}=r,d=Zs(o.shape,i,u,[1,1,1],l,c),p=new Qg(d,"max",!0),h=n.runWebGLProgram(p,[o],o.dtype),A=new EI(d),g=n.runWebGLProgram(A,[a,h],o.dtype);return n.disposeIntermediateTensorInfo(h),g}};const vI={kernelName:"MaxPoolGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:o}=t,i=s;qd([s,o],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,p=Os(i.shape,u,l,1,c,d),h=new Fg(p,"max",!0),A=n.runWebGLProgram(h,[i],i.dtype),g=new xI(p),m=n.runWebGLProgram(g,[a,A],i.dtype);return n.disposeIntermediateTensorInfo(A),m}};const BI={kernelName:dt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:o,includeBatchInIndex:i}=t,u=n;f(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];f(eo(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);const c=Os(r.shape,a,s,l,o),[d,p]=function(e,t,n,r){let a=new Fg(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new Fg(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,i,c,u);return[d,p]}};const RI={kernelName:pt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,o=n,i=r.shape.length,u=R(s,r.shape);let l=u;const c=gi(l,i),d=null!=c,p=o.shouldExecuteOnCPU([r]),h=[];let A=r;if(d){if(p){const e=o.texData.get(A.dataId).values,t=new Array(i);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=eA(e,r.shape,r.dtype,c,t);A=o.makeTensorInfo(t,r.dtype);o.texData.get(A.dataId).values=n}else A=HA(r,c,o);h.push(A),l=fi(l.length,i)}Ai("sum",l,i);const[g,m]=pi(A.shape,l);let f=g;a&&(f=hi(g,u));const I=function(e,t,n,r){const a=C(t),s=VA({inputs:{x:e},attrs:{shape:[C(e.shape)/a,a]},backend:r}),o=ZA(s,"float32","mean",r),i=VA({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}(A,m,f,o);for(const e of h)o.disposeIntermediateTensorInfo(e);return I}};const SI={kernelName:"Min",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,i=a.shape.length,u=R(s,a.shape);let l=u;const c=gi(l,i);let d=a;null!=c&&(d=JA({inputs:{x:a},backend:n,attrs:{perm:c}}),l=fi(l.length,a.shape.length)),Ai("min",l,i);const[p,h]=pi(d.shape,l),A=VA({inputs:{x:d},backend:n,attrs:{shape:[-1,C(h)]}}),g=ZA(A,A.dtype,"min",n);let m;if(o){m=VA({inputs:{x:g},backend:n,attrs:{shape:hi(p,u)}})}else m=VA({inputs:{x:g},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(g),null!=c&&n.disposeIntermediateTensorInfo(d),m}},TI=FA({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Qh}),kI={kernelName:ht,backendName:"webgl",kernelFunc:TI};class NI{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Ip(r),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class FI{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Ip(r),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=rA("rc",r),u=rA("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const QI={kernelName:At,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,o=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FI(r.shape,a,s):new NI(r.shape,a,s);return t.runWebGLProgram(o,[r],r.dtype)}},DI={kernelName:"Mod",backendName:"webgl",kernelFunc:FA({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})};class GI{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const LI=FA({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),_I={kernelName:Le,backendName:"webgl",kernelFunc:LI},WI="return a - b;",$I=FA({opSnippet:WI,packedOpSnippet:WI,supportsComplex:!0,cpuKernelImpl:Jh}),MI={kernelName:"Sub",backendName:"webgl",kernelFunc:$I};function VI(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,o=R([s],a.shape),i=mI({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=hi(i.shape,o),l=VA({inputs:{x:i},backend:n,attrs:{shape:u}}),c=$I({inputs:{a:a,b:l},backend:n}),d=df({inputs:{x:c},backend:n}),p=KA({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),h=VA({inputs:{x:p},backend:n,attrs:{shape:u}}),A=LI({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),A}const UI={kernelName:Kt,backendName:"webgl",kernelFunc:VI};const XI={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:o,normalized:i}=r,u=i?a:VI({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],d=new GI(l,c,s),p=[[o]],h=n.runWebGLProgram(d,[u],"int32",p);return i||n.disposeIntermediateTensorInfo(u),h}},OI="return -x;";const ZI={kernelName:"Neg",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=Gh(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=z().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new hA(r.shape,OI):new cA(r.shape,OI),n.runWebGLProgram(a,[r],r.dtype)}},PI=qu;const YI={kernelName:It,backendName:"webgl",kernelFunc:function(e){P("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:d}=PI(l,c,o,i,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},HI=el;const KI={kernelName:yt,backendName:"webgl",kernelFunc:function(e){P("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:p,validOutputs:h}=HI(c,d,o,i,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},zI=tl;const JI={kernelName:bt,backendName:"webgl",kernelFunc:function(e){P("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),d=n.readSync(s.dataId),p=o,h=i,A=u,g=l,{selectedIndices:m,selectedScores:f}=zI(c,d,p,h,A,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([f.length],"float32",new Float32Array(f))]}};class jI{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const qI={kernelName:xt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:o,offValue:i}=r,u=C(a.shape),l=new jI(u,s,o,i),c=VA({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(l,[c],a.dtype);n.disposeIntermediateTensorInfo(c);const p=VA({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(d),p}};function ey(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=qg({inputs:{input:r},backend:n}),t=ey({inputs:{x:e},backend:n}),a=Am({inputs:{input:r},backend:n}),s=ey({inputs:{x:a},backend:n}),o=EA({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),o}return xf({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const ty={kernelName:An,backendName:"webgl",kernelFunc:ey};const ny={kernelName:Ct,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=qg({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Am({inputs:{input:a},backend:r}),o=ey({inputs:{x:s},backend:r}),i=EA({inputs:{real:n,imag:o},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),i}return xf({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};const ry={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return hf({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,o=t[0].dtype;t.forEach(e=>{I(s,e.shape,"All tensors passed to stack must have matching shapes"),f(o===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],u=fm({inputs:t.map(e=>{const t=hf({inputs:{input:e},backend:n,attrs:{dim:a}});return i.push(t),t}),backend:n,attrs:{axis:a}});return i.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}};class ay{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Ip(r),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class sy{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=Ip(r),s=t.map(e=>e[0]).join(","),o=t.map((t,n)=>t[0]+e[n]).join(","),i=rA("rc",r),u=rA("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[a+" rc = outputLoc;",`${i[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let e=0,t=1===r?2:4;e<t;e++)h+=`\n        ${d[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const oy=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:o}=r;if(0===C(a.shape)){return xf({backend:n,attrs:{shape:s.map((e,t)=>e[0]+a.shape[t]+e[1]),value:o,dtype:a.dtype}})}const i=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sy(a.shape,s,o):new ay(a.shape,s,o),u=[[o]];return n.runWebGLProgram(i,[a],a.dtype,u)},iy={kernelName:wt,backendName:"webgl",kernelFunc:oy},uy={kernelName:"Pow",backendName:"webgl",kernelFunc:FA({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"})};const ly={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,i=a.shape.length,u=[],l=R(s,a.shape);let c=l;const d=gi(c,i);let p,h=a;if(null!=d&&(h=JA({inputs:{x:a},backend:n,attrs:{perm:d}}),c=fi(c.length,i),u.push(h)),Ai("prod",c,i),n.shouldExecuteOnCPU([h])){const e=n.texData.get(h.dataId).values,{outVals:t,outShape:r,outDtype:a}=_h(h.shape,h.dtype,e,c);p=n.makeTensorInfo(r,a,t)}else{const[e,t]=pi(h.shape,c),r=C(t),s=VA({inputs:{x:h},backend:n,attrs:{shape:[-1,r]}}),o=ZA(s,_r(a.dtype),"prod",n);p=VA({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(s),u.push(o)}if(o){u.push(p);const e=hi(p.shape,l);p=VA({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},cy=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:o}=n,i=Wh(r,a,s,o);return t.makeTensorInfo([i.length],o,i)},dy={kernelName:Rt,backendName:"webgl",kernelFunc:cy},py=NA({opSnippet:"return 1.0 / x;"}),hy={kernelName:Tt,backendName:"webgl",kernelFunc:py},Ay=NA({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),gy={kernelName:kt,backendName:"webgl",kernelFunc:Ay},my=NA({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),fy={kernelName:Dt,backendName:"webgl",kernelFunc:my};class Iy{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class yy{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const by={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:o,size:i}=r,[u,l]=i,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new yy(a.shape,u,l,s,o):new Iy(a.shape,u,l,s,o);return n.runWebGLProgram(c,[a],"float32")}};class Cy{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],d=1/l,p=1/c,h=2*Math.ceil(d)+2,A=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${A});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const xy={kernelName:"ResizeBilinearGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new Cy(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class Ey{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class wy{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?o-1:o,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const vy={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:o,size:i}=r,[u,l]=i,c=z().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new wy(a.shape,u,l,s,o):new Ey(a.shape,u,l,s,o);return n.runWebGLProgram(c,[a],a.dtype)}};class By{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,o]=e,i=[n&&s>1?r-1:r,n&&o>1?a-1:a],u=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/u[0],c=i[1]/u[1],d=1/l,p=1/c,h=2*Math.ceil(d)+2,A=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${A});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Ry={kernelName:"ResizeNearestNeighborGrad",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:o}=r,i=new By(s.shape,a.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class Sy{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),a=Ip(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Ty{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=rA("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,o=Ip(n);function i(n){const r=e.map((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:""+r[n]}(a,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const ky={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,o=a.shape.length,i=R(s,a.shape);if(0===o)return CA({inputs:{x:a},backend:n});const u=z().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ty(a.shape,i):new Sy(a.shape,i);return n.runWebGLProgram(u,[a],a.dtype)}};class Ny{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Fy={kernelName:fn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:o}=t,i=n,u=new Ny(r.shape,s),[l,c]=Sl(o,r.shape[1],r.shape[2]),d=[[l,c,Math.sin(a),Math.cos(a)]];return i.runWebGLProgram(u,[r],r.dtype,d)}},Qy=NA({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Dy={kernelName:Lt,backendName:"webgl",kernelFunc:Qy},Gy=NA({opSnippet:"return inversesqrt(x);",cpuKernelImpl:$h}),Ly={kernelName:_t,backendName:"webgl",kernelFunc:Gy};class _y{constructor(e,t,n,r,a,s,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=Ip(a.length),u=Ip(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const Wy={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:o}=r,{sliceRank:i,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=as(0,a,o),p=[d/l,l];if(0===d)return n.makeTensorInfo(o,a.dtype);const h=VA({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),A=VA({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),m=new _y(u,i,h.shape.length,A.shape.length,c,p),f=n.runWebGLProgram(m,[A,h,g],A.dtype),I=VA({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(A),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),I}};class $y{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let r=0;r<t.length;r++)o.push(""+n[r]),r<e&&s.push(""+n[r]);r=s.join(),a=o.join()}const s=Ip(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const My={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,o=new $y(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(o,[r,a,s],Lr(a.dtype,s.dtype))}},Vy=NA({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = 1.7580993408473768;\n  float scale = ${Gl};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Uy={kernelName:Mt,backendName:"webgl",kernelFunc:Vy},Xy="return 1.0 / (1.0 + exp(-1.0 * x));",Oy=NA({opSnippet:Xy,packedOpSnippet:Xy,cpuKernelImpl:Mh}),Zy={kernelName:Ot,backendName:"webgl",kernelFunc:Oy},Py=NA({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Yy={kernelName:Xt,backendName:"webgl",kernelFunc:Py},Hy={kernelName:"Sin",backendName:"webgl",kernelFunc:NA({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"})},Ky=NA({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),zy={kernelName:Ut,backendName:"webgl",kernelFunc:Ky},Jy=NA({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),jy={kernelName:Zt,backendName:"webgl",kernelFunc:Jy},qy={kernelName:Yt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:o}=r;f(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=s.reduce((e,t)=>e*t),u=[[0,0]];u.push(...o);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=[],c=oy({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=Tl(c.shape,s,i,!1),p=kl(d.length,s.length,!1),h=Nl(c.shape,s,i,!1),A=VA({inputs:{x:c},backend:n,attrs:{shape:d}}),g=JA({inputs:{x:A},backend:n,attrs:{perm:p}}),m=VA({inputs:{x:g},backend:n,attrs:{shape:h}});return l.push(c),l.push(A),l.push(g),l.forEach(e=>n.disposeIntermediateTensorInfo(e)),m}};const eb={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         "+s.shape);if(2!==r.shape.length)throw new Error("Indices must be a matrix, saw:\n         "+r.shape);if(1!==a.shape.length)throw new Error("Values must be a vector, saw:\n         "+a.shape);if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        "+o.shape);const i=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[d,p,h,A,g]=Xh(i,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([A.length],"bool",new Uint8Array(A.map(e=>Number(e)))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}};const tb={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error("Input indices should be a matrix but received shape "+r.shape);if(1!==a.shape.length)throw new Error("Input shape should be a vector but received shape "+a.shape);if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape "+s.shape);const o=Array.from(n.readSync(a.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,d]=Oh(i,r.shape,r.dtype,o,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const nb={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n              "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              "+s.shape);const o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Zh(o,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};const rb={kernelName:qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error("Indices should be a vector but received shape\n             "+a.shape);if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             "+s.shape);const o=n.readSync(r.dataId),i=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Zh(o,r.shape,r.dtype,i,u);return n.makeTensorInfo(c,r.dtype,l)}};const ab={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:o}=t,{outputShape:i}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:d}=as(0,a,i),p=new _y(l,u,a.shape.length,s.shape.length,c,[d,1],!1),h=n.runWebGLProgram(p,[s,a,o],s.dtype),A=VA({inputs:{x:h},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),A}};const sb={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:o}=r,i=R(o,a.shape)[0],u=Jl(a,s,i),l=a.shape.length,c=new Array(l).fill(0),d=a.shape.slice();return u.map(e=>{const t=[...d];t[i]=e;const r=Yg({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[i]+=e,r})}},ob="return sqrt(x);",ib=NA({opSnippet:ob,packedOpSnippet:ob,cpuKernelImpl:Ph}),ub={kernelName:Pt,backendName:"webgl",kernelFunc:ib},lb={kernelName:"Square",backendName:"webgl",kernelFunc:NA({opSnippet:"return x * x;"})},cb="return (a - b) * (a - b);",db=FA({opSnippet:cb,packedOpSnippet:cb}),pb={kernelName:tn,backendName:"webgl",kernelFunc:db};const hb={kernelName:gn,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new cA(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class Ab{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=Ip(n.length),s=Ip(n.length);let o="";if(1===r)o="coords * strides + begin";else{let e=0;o=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const gb={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:o,strides:i,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:p}=r,{nonStrided:h,$begin:A,$strides:g,size:m,newShape:f,outShape:I}=bs(a.shape,s,o,i,u,l,c,d,p),y=VA({inputs:{x:a},backend:n,attrs:{shape:f}});let b;if(h){const e=Yg({inputs:{x:y},backend:n,attrs:{begin:A,size:m}});b=VA({inputs:{x:e},backend:n,attrs:{shape:I}}),n.disposeIntermediateTensorInfo(e)}else if(I.some(e=>0===e))b=n.makeTensorInfo(I,a.dtype,[]);else{if(n.shouldExecuteOnCPU([y])){const e=n.texData.get(y.dataId).values,t=$a(y.shape,y.dtype,e),r=Yh(I,t,g,A);b=n.makeTensorInfo(I,y.dtype,r.values)}else{const e=new Ab(A,g,I);b=n.runWebGLProgram(e,[y],y.dtype)}}const C=VA({inputs:{x:b},backend:n,attrs:{shape:I}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),C}};const mb={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:o,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,p=n.readSync(c.dataId),h=n.readSync(d.dataId),[A,g]=Hh(p,h,a,s,o,i,u,l);return[n.makeTensorInfo([A.length],"string",A),n.makeTensorInfo(d.shape,"int32",g)]}};const fb={kernelName:an,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: "+s.shape);if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: "+o.shape);const i=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[l,c,d]=Kh(i,u,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const Ib={kernelName:sn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=zh(o,a);return n.makeTensorInfo(s.shape,"int32",i)}},yb={kernelName:"Tan",backendName:"webgl",kernelFunc:NA({opSnippet:"return tan(x);"})},bb=NA({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Cb={kernelName:on,backendName:"webgl",kernelFunc:bb};class xb{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=Ip(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function Eb(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map(e=>mr(e)):e,r=$a(a.shape,a.dtype,t),o=jh(r,s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new xb(a.shape,s);return n.runWebGLProgram(o,[a],a.dtype)}const wb={kernelName:un,backendName:"webgl",kernelFunc:Eb};class vb{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Bb{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function Rb(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Sb(e){let t=1;for(;t<e;)t*=2;return t}const Tb={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:o}=r,i=z().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=z().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([a])||c<i||s>u){const e=n.readSync(a.dataId),[t,r]=qh(e,l,a.dtype,s,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[a,xf({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const d=n.texData.get(a.dataId),p=null!==d&&d.isPacked,h=p?n.unpackTensor(a):a,A=C(l)/c,g=VA({inputs:{x:h},attrs:{shape:[A,c]},backend:n});p&&Rb(n,h);const m=Sb(s),f=Sb(c);let I=null;const y=()=>null===I?[g,g]:[g,I],b=(e,t,r)=>{const a=y(),s=new vb(r),o=[[c],[null===I?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=I;I=n.runWebGLProgram(s,a,"int32",o),Rb(n,i)};for(let e=1;e<m;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)b(t,n,[A,f])}for(let e=f;e>m;e/=2){const t=y(),r=new Bb([A,e/2]),a=[[c],[null===I?1:0],[m]],s=I;I=n.runWebGLProgram(r,t,"int32",a),Rb(n,s);const o=m/2,i=2*o;for(let e=o;e>=1;e/=2)b(i,e,I.shape)}let x=I;I=Yg({inputs:{x:I},backend:n,attrs:{begin:0,size:[A,s]}}),Rb(n,x);let E=Mf({inputs:{x:g,indices:I},backend:n,attrs:{axis:1,batchDims:1}});Rb(n,g);const w=l.slice(0,-1);w.push(s),x=I,I=VA({inputs:{x:I},attrs:{shape:w},backend:n}),Rb(n,x);const v=E;return E=VA({inputs:{x:E},attrs:{shape:w},backend:n}),Rb(n,v),[E,I]}};class kb{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Nb={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:u,outputShape:l}=r,[c,d,p,h]=a.shape,[A,g]=null!=l?l:[d,p],m=new kb(d,p,o,i,u,[c,A,g,h]);return n.runWebGLProgram(m,[a,s],"float32")}};const Fb={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;qd(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=r.readSync(s.dataId),{outputValues:i,outputShape:u,indices:l}=tA(o,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}};const Qb={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const o=a,i=o.shape.length,u=a.shape[s],l=new Array(i-1);let c=0;for(let e=0;e<i;e++)e!==s&&(l[c++]=o.shape[e]);const d=[],p=new Array(i).fill(0),h=o.shape.slice();h[s]=1;const A=new Array(u);for(let e=0;e<A.length;e++){p[s]=e;const t=Yg({inputs:{x:o},backend:n,attrs:{begin:p,size:h}}),r=VA({inputs:{x:t},backend:n,attrs:{shape:l}});A[e]=r,d.push(t)}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),A}};class Db{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,o=s*Math.ceil(a/n);this.outputShape=[r,o];const i=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const Gb=[hI,gI,eg,ng,ag,og,lg,pg,hg,Ag,bg,Cg,Eg,vg,Tg,Rg,Ng,Gg,Dg,Wg,$g,Mg,Xg,Kg,zg,tm,am,im,cm,wA,Im,Tm,km,wm,Fm,Qm,Nm,Dm,Lm,Wm,Um,Xm,Zm,Jm,jm,Hm,ef,nf,rf,af,sf,uf,lf,pf,Af,ff,bf,Ef,vf,Sf,kf,Qf,Gf,Lf,Wf,Vf,Xf,Zf,xA,Pf,gm,Yf,Hf,zf,RA,jf,eI,tI,aI,nI,oI,uI,cI,fI,CI,bI,wI,vI,BI,yI,RI,SI,kI,QI,DI,XI,MA,ZI,YI,KI,JI,jg,qI,ny,ry,iy,uy,kA,ly,dy,em,_I,hy,fy,gy,UA,by,xy,vy,Ry,ky,Fy,Dy,Ly,Wy,My,Uy,Zy,Yy,Hy,zy,Hg,UI,jy,qy,eb,tb,nb,rb,ab,sb,ub,lb,pb,hb,gb,mb,fb,Ib,MI,zA,yb,Cb,wb,Tb,Nb,jA,Fb,Qb,{kernelName:"UnsortedSegmentSum",backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:o}=r,i=a.shape.length,u=[];let l=0;const c=gi([l],i);let d=a;null!=c&&(d=JA({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(d),l=fi(1,i)[0]);const p=ql(d.shape,l,o),h=C([d.shape[l]]),A=VA({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});u.push(A);const g=_r(a.dtype),m=(e,t,r,a,s)=>{const o=e.shape[0],i=e.shape[1],l=jl(i,s),c=new Db({windowSize:l,inSize:i,batchSize:o,numSegments:s},t),d=n.compileAndRun(c,[e,r],a);if(u.push(d),d.shape[1]===s)return d;const p=cy({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),h=Eb({inputs:{x:p},backend:n,attrs:{reps:[i/l]}});u.push(p),u.push(h);return m(d,t,h,a,s)},f=VA({inputs:{x:m(A,"unsortedSegmentSum",s,g,o)},backend:n,attrs:{shape:p}});let I=f;if(null!=c){u.push(f);const e=mi(c);I=JA({inputs:{x:I},backend:n,attrs:{perm:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),I}},ty];for(const e of Gb)Bn(e);function Lb(){var e={},t={};return t.inputSize={high:[256,144],low:[160,96]},t.outputSize={high:[256,144],low:[160,96]},t.modelFileName={"tflite-high":"bblur-high.tflite","tflite-low":"bblur-low.tflite","tfjs-high":"model-high.json","tfjs-low":"model-low.json"},e.backgroundSegmentation=t,{getInputWidth:function(t,n){return e[t].inputSize[n][0]},getInputHeight:function(t,n){return e[t].inputSize[n][1]},getOutputWidth:function(t,n){return e[t].outputSize[n][0]},getOutputHeight:function(t,n){return e[t].outputSize[n][1]},getFileName:function(t,n){return e[t].modelFileName[n]}}}function _b(e,t,n){var r=void 0,s=t,o="backgroundSegmentation",i=e,u=Lb(),d=u.getFileName(o,"tfjs-"+i),p=u.getInputWidth(o,i),h=u.getInputHeight(o,i),A=void 0,g=void 0;function m(){return(m=a(l.mark((function e(t){var a,o;return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,vs(n);case 2:return e.next=4,yd(s+d);case 4:for(r=e.sent,t||(t=1),a=0;a<t;a++)xs().startScope(),(o=r.execute(c({},"image_tensor",Bi([h,p,3])),["Identity"])).dataSync(),o.dispose(),xs().endScope();case 8:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function f(e){r&&(A=e)}function I(){return y.apply(this,arguments)}function y(){return(y=a(l.mark((function e(){var t,n;return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!r){e.next=9;break}return xs().startScope(),t=Ma(es(A),"float32"),n=r.execute(c({},"image_tensor",t),["Identity"]),e.next=6,n.data();case 6:return g=e.sent,xs().endScope(),e.abrupt("return",g);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function b(){if(r){for(var e=new ImageData(p,h),t=0;t<p*h;t++)e.data[4*t+3]=Math.round(255*g[t]);return e}}function C(){return(C=a(l.mark((function e(t){return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!r){e.next=5;break}return f(t),e.next=4,I();case 4:return e.abrupt("return",b());case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return{initialize:function(e){return m.apply(this,arguments)},preProcess:f,infer:I,postProcess:b,getPrediction:function(e){return C.apply(this,arguments)}}}function Wb(e){return(Wb="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var $b=u((function(e,t){var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,function(e){var t,r,a=void 0!==(e=e||{})?e:{};a.ready=new Promise((function(e,n){t=e,r=n}));var s,o={};for(s in a)a.hasOwnProperty(s)&&(o[s]=a[s]);var i="./this.program",u=function(e,t){throw t};a.locateFile=function(e,t){try{return self.zlwasmPath?self.zlwasmPath+e:t+e}catch(n){try{return window.zlwasmPath?window.zlwasmPath+e:t+e}catch(n){try{if(globalThis.zlwasmPath)return globalThis.zlwasmPath+e}catch(n){return t+e}return t+e}}};var l="";"undefined"!=typeof document&&document.currentScript&&(l=document.currentScript.src),n&&(l=n),l=0!==l.indexOf("blob:")?l.substr(0,l.lastIndexOf("/")+1):"";var c,d=a.print||console.log.bind(console),p=a.printErr||console.warn.bind(console);for(s in o)o.hasOwnProperty(s)&&(a[s]=o[s]);o=null,a.arguments&&a.arguments,a.thisProgram&&(i=a.thisProgram),a.quit&&(u=a.quit),a.wasmBinary&&(c=a.wasmBinary);var h,A=a.noExitRuntime||!0;"object"!==("undefined"==typeof WebAssembly?"undefined":Wb(WebAssembly))&&F("no native wasm support detected");var g,m,f,I,y,b=!1,C="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function x(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&C)return C.decode(e.subarray(t,a));for(var s="";t<a;){var o=e[t++];if(128&o){var i=63&e[t++];if(192!=(224&o)){var u=63&e[t++];if((o=224==(240&o)?(15&o)<<12|i<<6|u:(7&o)<<18|i<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(o);else{var l=o-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&o)<<6|i)}else s+=String.fromCharCode(o)}return s}function E(e){g=e,a.HEAP8=m=new Int8Array(e),a.HEAP16=new Int16Array(e),a.HEAP32=I=new Int32Array(e),a.HEAPU8=f=new Uint8Array(e),a.HEAPU16=new Uint16Array(e),a.HEAPU32=new Uint32Array(e),a.HEAPF32=new Float32Array(e),a.HEAPF64=new Float64Array(e)}a.INITIAL_MEMORY;var w,v,B,R=[],S=[],T=[],k=0,N=null;function F(e){a.onAbort&&a.onAbort(e),p(e+=""),b=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw r(t),t}function Q(e){return e.startsWith("data:application/octet-stream;base64,")}function D(e){try{if(e==w&&c)return new Uint8Array(c);throw"both async and sync fetching of the wasm failed"}catch(e){F(e)}}function G(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?y.get(n)():y.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(a)}}function L(e){try{return h.grow(e-g.byteLength+65535>>>16),E(h.buffer),1}catch(e){}}a.preloadedImages={},a.preloadedAudios={},Q(w="tflite.wasm")||(v=w,w=a.locateFile?a.locateFile(v,l):l+v),B=function(){return performance.now()};var _={};function W(){if(!W.strings){var e={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"===("undefined"==typeof navigator?"undefined":Wb(navigator))&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:i||"./this.program"};for(var t in _)void 0===_[t]?delete e[t]:e[t]=_[t];var n=[];for(var t in e)n.push(t+"="+e[t]);W.strings=n}return W.strings}var $={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=$.buffers[e];0===t||10===t?((1===e?d:p)(x(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return $.varargs+=4,I[$.varargs-4>>2]},getStr:function(e){return function(e,t){return e?x(f,e,t):""}(e)},get64:function(e,t){return e}},M={a:function(){F()},m:function(e,t){var n,r;if(0===e)n=Date.now();else{if(1!==e&&4!==e)return r=28,I[U()>>2]=r,-1;n=B()}return I[t>>2]=n/1e3|0,I[t+4>>2]=n%1e3*1e3*1e3|0,0},i:function(e,t){F("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking")},c:function(e,t){F("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking")},g:function(){return 2147483648},k:function(e,t,n){f.copyWithin(e,t,t+n)},l:function(e){var t,n,r=f.length,a=2147483648;if((e>>>=0)>a)return!1;for(var s=1;s<=4;s*=2){var o=r*(1+.2/s);if(o=Math.min(o,e+100663296),L(Math.min(a,((t=Math.max(e,o))%(n=65536)>0&&(t+=n-t%n),t))))return!0}return!1},d:function(e){for(var t=B();B()-t<e;);},e:function(e,t){var n=0;return W().forEach((function(r,a){var s=t+n;I[e+4*a>>2]=s,function(e,t,n){for(var r=0;r<e.length;++r)m[t++>>0]=e.charCodeAt(r);n||(m[t>>0]=0)}(r,s),n+=r.length+1})),0},f:function(e,t){var n=W();I[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),I[t>>2]=r,0},o:function(e){!function(e,t){var n;n=e,A||(a.onExit&&a.onExit(n),b=!0),u(n,new X(n))}(e)},h:function(e){return 0},j:function(e,t,n,r,a){},b:function(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var o=I[t+8*s>>2],i=I[t+(8*s+4)>>2],u=0;u<i;u++)$.printChar(e,f[o+u]);a+=i}return I[r>>2]=a,0},n:function e(t,n){e.randomDevice||(e.randomDevice=function(){if("object"===("undefined"==typeof crypto?"undefined":Wb(crypto))&&"function"==typeof crypto.getRandomValues){var e=new Uint8Array(1);return function(){return crypto.getRandomValues(e),e[0]}}return function(){F("randomDevice")}}());for(var r=0;r<n;r++)m[t+r>>0]=e.randomDevice();return 0}};!function(){var e={a:M};function t(e,t){var n,r=e.exports;a.asm=r,E((h=a.asm.p).buffer),y=a.asm.C,n=a.asm.q,S.unshift(n),function(e){if(k--,a.monitorRunDependencies&&a.monitorRunDependencies(k),0==k&&N){var t=N;N=null,t()}}()}function n(e){t(e.instance)}function s(t){return(c||"function"!=typeof fetch?Promise.resolve().then((function(){return D(w)})):fetch(w,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+w+"'";return e.arrayBuffer()})).catch((function(){return D(w)}))).then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){p("failed to asynchronously prepare wasm: "+e),F(e)}))}if(k++,a.monitorRunDependencies&&a.monitorRunDependencies(k),a.instantiateWasm)try{return a.instantiateWasm(e,t)}catch(e){return p("Module.instantiateWasm callback failed with error: "+e),!1}(c||"function"!=typeof WebAssembly.instantiateStreaming||Q(w)||"function"!=typeof fetch?s(n):fetch(w,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return p("wasm streaming compile failed: "+e),p("falling back to ArrayBuffer instantiation"),s(n)}))}))).catch(r)}(),a.___wasm_call_ctors=function(){return(a.___wasm_call_ctors=a.asm.q).apply(null,arguments)},a._getModelBufferMemoryOffset=function(){return(a._getModelBufferMemoryOffset=a.asm.r).apply(null,arguments)},a._getInputMemoryOffset=function(){return(a._getInputMemoryOffset=a.asm.s).apply(null,arguments)},a._getInputHeight=function(){return(a._getInputHeight=a.asm.t).apply(null,arguments)},a._getInputWidth=function(){return(a._getInputWidth=a.asm.u).apply(null,arguments)},a._getInputChannelCount=function(){return(a._getInputChannelCount=a.asm.v).apply(null,arguments)},a._getOutputMemoryOffset=function(){return(a._getOutputMemoryOffset=a.asm.w).apply(null,arguments)},a._getOutputHeight=function(){return(a._getOutputHeight=a.asm.x).apply(null,arguments)},a._getOutputWidth=function(){return(a._getOutputWidth=a.asm.y).apply(null,arguments)},a._getOutputChannelCount=function(){return(a._getOutputChannelCount=a.asm.z).apply(null,arguments)},a._loadModel=function(){return(a._loadModel=a.asm.A).apply(null,arguments)},a._runInference=function(){return(a._runInference=a.asm.B).apply(null,arguments)};var V,U=a.___errno_location=function(){return(U=a.___errno_location=a.asm.D).apply(null,arguments)};function X(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function O(e){function n(){V||(V=!0,a.calledRun=!0,b||(G(S),t(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),function(){if(a.postRun)for("function"==typeof a.postRun&&(a.postRun=[a.postRun]);a.postRun.length;)e=a.postRun.shift(),T.unshift(e);var e;G(T)}()))}k>0||(function(){if(a.preRun)for("function"==typeof a.preRun&&(a.preRun=[a.preRun]);a.preRun.length;)e=a.preRun.shift(),R.unshift(e);var e;G(R)}(),k>0||(a.setStatus?(a.setStatus("Running..."),setTimeout((function(){setTimeout((function(){a.setStatus("")}),1),n()}),1)):n()))}if(N=function e(){V||O(),V||(N=e)},a.run=O,a.preInit)for("function"==typeof a.preInit&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();return O(),e.ready});e.exports=r})),Mb=u((function(e,t){var n,r=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,function(e){var t,r,a=void 0!==(e=e||{})?e:{};a.ready=new Promise((function(e,n){t=e,r=n}));var s,o={};for(s in a)a.hasOwnProperty(s)&&(o[s]=a[s]);var i="./this.program",u=function(e,t){throw t};a.locateFile=function(e,t){try{return self.zlwasmPath?self.zlwasmPath+e:t+e}catch(n){try{return window.zlwasmPath?window.zlwasmPath+e:t+e}catch(n){try{if(globalThis.zlwasmPath)return globalThis.zlwasmPath+e}catch(n){return t+e}return t+e}}};var l="";"undefined"!=typeof document&&document.currentScript&&(l=document.currentScript.src),n&&(l=n),l=0!==l.indexOf("blob:")?l.substr(0,l.lastIndexOf("/")+1):"";var c,d=a.print||console.log.bind(console),p=a.printErr||console.warn.bind(console);for(s in o)o.hasOwnProperty(s)&&(a[s]=o[s]);o=null,a.arguments&&a.arguments,a.thisProgram&&(i=a.thisProgram),a.quit&&(u=a.quit),a.wasmBinary&&(c=a.wasmBinary);var h,A=a.noExitRuntime||!0;"object"!==("undefined"==typeof WebAssembly?"undefined":Wb(WebAssembly))&&F("no native wasm support detected");var g,m,f,I,y,b=!1,C="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function x(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&C)return C.decode(e.subarray(t,a));for(var s="";t<a;){var o=e[t++];if(128&o){var i=63&e[t++];if(192!=(224&o)){var u=63&e[t++];if((o=224==(240&o)?(15&o)<<12|i<<6|u:(7&o)<<18|i<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(o);else{var l=o-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&o)<<6|i)}else s+=String.fromCharCode(o)}return s}function E(e){g=e,a.HEAP8=m=new Int8Array(e),a.HEAP16=new Int16Array(e),a.HEAP32=I=new Int32Array(e),a.HEAPU8=f=new Uint8Array(e),a.HEAPU16=new Uint16Array(e),a.HEAPU32=new Uint32Array(e),a.HEAPF32=new Float32Array(e),a.HEAPF64=new Float64Array(e)}a.INITIAL_MEMORY;var w,v,B,R=[],S=[],T=[],k=0,N=null;function F(e){a.onAbort&&a.onAbort(e),p(e+=""),b=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw r(t),t}function Q(e){return e.startsWith("data:application/octet-stream;base64,")}function D(e){try{if(e==w&&c)return new Uint8Array(c);throw"both async and sync fetching of the wasm failed"}catch(e){F(e)}}function G(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?y.get(n)():y.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(a)}}function L(e){try{return h.grow(e-g.byteLength+65535>>>16),E(h.buffer),1}catch(e){}}a.preloadedImages={},a.preloadedAudios={},Q(w="tflite-simd.wasm")||(v=w,w=a.locateFile?a.locateFile(v,l):l+v),B=function(){return performance.now()};var _={};function W(){if(!W.strings){var e={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"===("undefined"==typeof navigator?"undefined":Wb(navigator))&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:i||"./this.program"};for(var t in _)void 0===_[t]?delete e[t]:e[t]=_[t];var n=[];for(var t in e)n.push(t+"="+e[t]);W.strings=n}return W.strings}var $={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=$.buffers[e];0===t||10===t?((1===e?d:p)(x(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return $.varargs+=4,I[$.varargs-4>>2]},getStr:function(e){return function(e,t){return e?x(f,e,t):""}(e)},get64:function(e,t){return e}},M={a:function(){F()},m:function(e,t){var n,r;if(0===e)n=Date.now();else{if(1!==e&&4!==e)return r=28,I[U()>>2]=r,-1;n=B()}return I[t>>2]=n/1e3|0,I[t+4>>2]=n%1e3*1e3*1e3|0,0},i:function(e,t){F("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking")},c:function(e,t){F("To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking")},g:function(){return 2147483648},k:function(e,t,n){f.copyWithin(e,t,t+n)},l:function(e){var t,n,r=f.length,a=2147483648;if((e>>>=0)>a)return!1;for(var s=1;s<=4;s*=2){var o=r*(1+.2/s);if(o=Math.min(o,e+100663296),L(Math.min(a,((t=Math.max(e,o))%(n=65536)>0&&(t+=n-t%n),t))))return!0}return!1},d:function(e){for(var t=B();B()-t<e;);},e:function(e,t){var n=0;return W().forEach((function(r,a){var s=t+n;I[e+4*a>>2]=s,function(e,t,n){for(var r=0;r<e.length;++r)m[t++>>0]=e.charCodeAt(r);n||(m[t>>0]=0)}(r,s),n+=r.length+1})),0},f:function(e,t){var n=W();I[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),I[t>>2]=r,0},o:function(e){!function(e,t){var n;n=e,A||(a.onExit&&a.onExit(n),b=!0),u(n,new X(n))}(e)},h:function(e){return 0},j:function(e,t,n,r,a){},b:function(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var o=I[t+8*s>>2],i=I[t+(8*s+4)>>2],u=0;u<i;u++)$.printChar(e,f[o+u]);a+=i}return I[r>>2]=a,0},n:function e(t,n){e.randomDevice||(e.randomDevice=function(){if("object"===("undefined"==typeof crypto?"undefined":Wb(crypto))&&"function"==typeof crypto.getRandomValues){var e=new Uint8Array(1);return function(){return crypto.getRandomValues(e),e[0]}}return function(){F("randomDevice")}}());for(var r=0;r<n;r++)m[t+r>>0]=e.randomDevice();return 0}};!function(){var e={a:M};function t(e,t){var n,r=e.exports;a.asm=r,E((h=a.asm.p).buffer),y=a.asm.C,n=a.asm.q,S.unshift(n),function(e){if(k--,a.monitorRunDependencies&&a.monitorRunDependencies(k),0==k&&N){var t=N;N=null,t()}}()}function n(e){t(e.instance)}function s(t){return(c||"function"!=typeof fetch?Promise.resolve().then((function(){return D(w)})):fetch(w,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+w+"'";return e.arrayBuffer()})).catch((function(){return D(w)}))).then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){p("failed to asynchronously prepare wasm: "+e),F(e)}))}if(k++,a.monitorRunDependencies&&a.monitorRunDependencies(k),a.instantiateWasm)try{return a.instantiateWasm(e,t)}catch(e){return p("Module.instantiateWasm callback failed with error: "+e),!1}(c||"function"!=typeof WebAssembly.instantiateStreaming||Q(w)||"function"!=typeof fetch?s(n):fetch(w,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return p("wasm streaming compile failed: "+e),p("falling back to ArrayBuffer instantiation"),s(n)}))}))).catch(r)}(),a.___wasm_call_ctors=function(){return(a.___wasm_call_ctors=a.asm.q).apply(null,arguments)},a._getModelBufferMemoryOffset=function(){return(a._getModelBufferMemoryOffset=a.asm.r).apply(null,arguments)},a._getInputMemoryOffset=function(){return(a._getInputMemoryOffset=a.asm.s).apply(null,arguments)},a._getInputHeight=function(){return(a._getInputHeight=a.asm.t).apply(null,arguments)},a._getInputWidth=function(){return(a._getInputWidth=a.asm.u).apply(null,arguments)},a._getInputChannelCount=function(){return(a._getInputChannelCount=a.asm.v).apply(null,arguments)},a._getOutputMemoryOffset=function(){return(a._getOutputMemoryOffset=a.asm.w).apply(null,arguments)},a._getOutputHeight=function(){return(a._getOutputHeight=a.asm.x).apply(null,arguments)},a._getOutputWidth=function(){return(a._getOutputWidth=a.asm.y).apply(null,arguments)},a._getOutputChannelCount=function(){return(a._getOutputChannelCount=a.asm.z).apply(null,arguments)},a._loadModel=function(){return(a._loadModel=a.asm.A).apply(null,arguments)},a._runInference=function(){return(a._runInference=a.asm.B).apply(null,arguments)};var V,U=a.___errno_location=function(){return(U=a.___errno_location=a.asm.D).apply(null,arguments)};function X(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function O(e){function n(){V||(V=!0,a.calledRun=!0,b||(G(S),t(a),a.onRuntimeInitialized&&a.onRuntimeInitialized(),function(){if(a.postRun)for("function"==typeof a.postRun&&(a.postRun=[a.postRun]);a.postRun.length;)e=a.postRun.shift(),T.unshift(e);var e;G(T)}()))}k>0||(function(){if(a.preRun)for("function"==typeof a.preRun&&(a.preRun=[a.preRun]);a.preRun.length;)e=a.preRun.shift(),R.unshift(e);var e;G(R)}(),k>0||(a.setStatus?(a.setStatus("Running..."),setTimeout((function(){setTimeout((function(){a.setStatus("")}),1),n()}),1)):n()))}if(N=function e(){V||O(),V||(N=e)},a.run=O,a.preInit)for("function"==typeof a.preInit&&(a.preInit=[a.preInit]);a.preInit.length>0;)a.preInit.pop()();return O(),e.ready});e.exports=r}));function Vb(e,t,n){var r=void 0,s="backgroundSegmentation",o=e,i=Lb(),u=i.getFileName(s,"tflite-"+o),c=i.getInputWidth(s,o),d=i.getInputHeight(s,o);function p(){return(p=a(l.mark((function e(){return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,h(n);case 2:return r=e.sent,e.next=5,g();case 5:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function h(e){return A.apply(this,arguments)}function A(){return(A=a(l.mark((function e(t){return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t){e.next=18;break}self&&(self.zlwasmPath=t),e.prev=2,window.zlwasmPath=t,e.next=16;break;case 6:e.prev=6,e.t0=e.catch(2),e.prev=8,globalThis.zlwasmPath=t,e.next=16;break;case 12:if(e.prev=12,e.t1=e.catch(8),self.zlwasmPath){e.next=16;break}throw"Couldn't setWasmPath in self / window / globalThis";case 16:e.next=19;break;case 18:throw"setWasmPath is needed for running in workers";case 19:return e.prev=19,e.next=22,Mb();case 22:return e.abrupt("return",e.sent);case 25:return e.prev=25,e.t2=e.catch(19),e.next=29,$b();case 29:return e.abrupt("return",e.sent);case 30:case"end":return e.stop()}}),e,null,[[2,6],[8,12],[19,25]])})))).apply(this,arguments)}function g(e){return m.apply(this,arguments)}function m(){return(m=a(l.mark((function e(n){var a,s,o,i,p,h,A,g;return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,fetch(t+u);case 2:return a=e.sent,e.next=5,a.arrayBuffer();case 5:for(s=e.sent,o=r._getModelBufferMemoryOffset(),r.HEAPU8.set(new Uint8Array(s),o),r._loadModel(s.byteLength),n||(n=1),i=0;i<n;i++){for(p=r._getInputMemoryOffset()/4,h=new ImageData(c,d),A=c*d,g=0;g<A;g++)r.HEAPF32[p+3*g]=h.data[4*g],r.HEAPF32[p+3*g+1]=h.data[4*g+1],r.HEAPF32[p+3*g+2]=h.data[4*g+2];r._runInference()}case 12:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function f(e){if(r)for(var t=r._getInputMemoryOffset()/4,n=c*d,a=0;a<n;a++)r.HEAPF32[t+3*a]=e.data[4*a],r.HEAPF32[t+3*a+1]=e.data[4*a+1],r.HEAPF32[t+3*a+2]=e.data[4*a+2]}function I(){r&&r._runInference()}function y(){if(r){for(var e=r._getOutputMemoryOffset()/4,t=new ImageData(c,d),n=c*d,a=0;a<n;a++)t.data[4*a+3]=Math.round(255*r.HEAPF32[e+a]);return t}}function b(){return(b=a(l.mark((function e(t){return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return f(t),I(),e.abrupt("return",y());case 3:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return{initialize:function(){return p.apply(this,arguments)},preProcess:f,infer:I,postProcess:y,getPrediction:function(e){return b.apply(this,arguments)}}}var Ub=null;try{var Xb="undefined"!=typeof module&&"function"==typeof module.require&&module.require("worker_threads")||"function"==typeof __non_webpack_require__&&__non_webpack_require__("worker_threads")||"function"==typeof require&&require("worker_threads");Ub=Xb.Worker}catch(e){}function Ob(e,t,n){var r=void 0===t?null:t,a=function(e,t){return Buffer.from(e,"base64").toString(t?"utf16":"utf8")}(e,void 0!==n&&n),s=a.indexOf("\n",10)+1,o=a.substring(s)+(r?"//# sourceMappingURL="+r:"");return function(e){return new Ub(o,Object.assign({},e,{eval:!0}))}}function Zb(e,t,n){var r=void 0===t?null:t,a=function(e,t){var n=atob(e);if(t){for(var r=new Uint8Array(n.length),a=0,s=n.length;a<s;++a)r[a]=n.charCodeAt(a);return String.fromCharCode.apply(null,new Uint16Array(r.buffer))}return n}(e,void 0!==n&&n),s=a.indexOf("\n",10)+1,o=a.substring(s)+(r?"//# sourceMappingURL="+r:""),i=new Blob([o],{type:"application/javascript"});return URL.createObjectURL(i)}var Pb="[object process]"===Object.prototype.toString.call("undefined"!=typeof process?process:0);function Yb(e,t,n){return Pb?Ob(e,t,n):function(e,t,n){var r;return function(a){return r=r||Zb(e,t,n),new Worker(r,a)}}(e,t,n)}var Hb=Yb("",null,!1);const Kb=Symbol("Comlink.proxy"),zb=Symbol("Comlink.endpoint"),Jb=Symbol("Comlink.releaseProxy"),jb=Symbol("Comlink.thrown"),qb=e=>"object"==typeof e&&null!==e||"function"==typeof e,eC=new Map([["proxy",{canHandle:e=>qb(e)&&e[Kb],serialize(e){const{port1:t,port2:n}=new MessageChannel;return tC(e,t),[n,[n]]},deserialize:e=>(e.start(),rC(e))}],["throw",{canHandle:e=>qb(e)&&jb in e,serialize({value:e}){let t;return t=e instanceof Error?{isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:{isError:!1,value:e},[t,[]]},deserialize(e){if(e.isError)throw Object.assign(new Error(e.value.message),e.value);throw e.value}}]]);function tC(e,t=self){t.addEventListener("message",(function n(r){if(!r||!r.data)return;const{id:a,type:s,path:o}=Object.assign({path:[]},r.data),i=(r.data.argumentList||[]).map(lC);let u;try{const t=o.slice(0,-1).reduce((e,t)=>e[t],e),n=o.reduce((e,t)=>e[t],e);switch(s){case"GET":u=n;break;case"SET":t[o.slice(-1)[0]]=lC(r.data.value),u=!0;break;case"APPLY":u=n.apply(t,i);break;case"CONSTRUCT":u=function(e){return Object.assign(e,{[Kb]:!0})}(new n(...i));break;case"ENDPOINT":{const{port1:t,port2:n}=new MessageChannel;tC(e,n),u=function(e,t){return iC.set(e,t),e}(t,[t])}break;case"RELEASE":u=void 0;break;default:return}}catch(e){u={value:e,[jb]:0}}Promise.resolve(u).catch(e=>({value:e,[jb]:0})).then(e=>{const[r,o]=uC(e);t.postMessage(Object.assign(Object.assign({},r),{id:a}),o),"RELEASE"===s&&(t.removeEventListener("message",n),nC(t))})})),t.start&&t.start()}function nC(e){(function(e){return"MessagePort"===e.constructor.name})(e)&&e.close()}function rC(e,t){return sC(e,[],t)}function aC(e){if(e)throw new Error("Proxy has been released and is not useable")}function sC(e,t=[],n=function(){}){let r=!1;const a=new Proxy(n,{get(n,s){if(aC(r),s===Jb)return()=>cC(e,{type:"RELEASE",path:t.map(e=>e.toString())}).then(()=>{nC(e),r=!0});if("then"===s){if(0===t.length)return{then:()=>a};const n=cC(e,{type:"GET",path:t.map(e=>e.toString())}).then(lC);return n.then.bind(n)}return sC(e,[...t,s])},set(n,a,s){aC(r);const[o,i]=uC(s);return cC(e,{type:"SET",path:[...t,a].map(e=>e.toString()),value:o},i).then(lC)},apply(n,a,s){aC(r);const o=t[t.length-1];if(o===zb)return cC(e,{type:"ENDPOINT"}).then(lC);if("bind"===o)return sC(e,t.slice(0,-1));const[i,u]=oC(s);return cC(e,{type:"APPLY",path:t.map(e=>e.toString()),argumentList:i},u).then(lC)},construct(n,a){aC(r);const[s,o]=oC(a);return cC(e,{type:"CONSTRUCT",path:t.map(e=>e.toString()),argumentList:s},o).then(lC)}});return a}function oC(e){const t=e.map(uC);return[t.map(e=>e[0]),(n=t.map(e=>e[1]),Array.prototype.concat.apply([],n))];var n}const iC=new WeakMap;function uC(e){for(const[t,n]of eC)if(n.canHandle(e)){const[r,a]=n.serialize(e);return[{type:"HANDLER",name:t,value:r},a]}return[{type:"RAW",value:e},iC.get(e)||[]]}function lC(e){switch(e.type){case"HANDLER":return eC.get(e.name).deserialize(e.value);case"RAW":return e.value}}function cC(e,t,n){return new Promise(r=>{const a=new Array(4).fill(0).map(()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)).join("-");e.addEventListener("message",(function t(n){n.data&&n.data.id&&n.data.id===a&&(e.removeEventListener("message",t),r(n.data))})),e.start&&e.start(),e.postMessage(Object.assign({id:a},t),n)})}function dC(){var e={postProcessingBackend:"canvas",canvasWidth:640,canvasHeight:480,bgFlip:!1,hFlip:!1,blurAmount:1,filterOpacity:.8,filter:"none",effect:"none",videoFps:30,bgFps:30,backgroundID:"none",filterWorker:!1};return e}var pC,hC=new Uint8Array(16);function AC(){if(!pC&&!(pC="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return pC(hC)}var gC=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function mC(e){return"string"==typeof e&&gC.test(e)}for(var fC=[],IC=0;IC<256;++IC)fC.push((IC+256).toString(16).substr(1));function yC(e,t,n){var r=(e=e||{}).random||(e.rng||AC)();if(r[6]=15&r[6]|64,r[8]=63&r[8]|128,t){n=n||0;for(var a=0;a<16;++a)t[n+a]=r[a];return t}return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=(fC[e[t+0]]+fC[e[t+1]]+fC[e[t+2]]+fC[e[t+3]]+"-"+fC[e[t+4]]+fC[e[t+5]]+"-"+fC[e[t+6]]+fC[e[t+7]]+"-"+fC[e[t+8]]+fC[e[t+9]]+"-"+fC[e[t+10]]+fC[e[t+11]]+fC[e[t+12]]+fC[e[t+13]]+fC[e[t+14]]+fC[e[t+15]]).toLowerCase();if(!mC(n))throw TypeError("Stringified UUID is invalid");return n}(r)}var bC=function(){function e(){s(this,e);var t=new WebAssembly.Memory({initial:256,maximum:256}),n=this._view=new Uint8Array(t.buffer);this._u32view=new Uint32Array(t.buffer),this._u32view[1956]=5250720;var r={ABORT:0,DYNAMICTOP_PTR:7824,STACKTOP:7840,STACK_MAX:5250720,abort:function(){throw new Error("abort")},abortOnCannotGrowMemory:function(){throw new Error("abortOnCannotGrowMemory")},enlargeMemory:function(){throw new Error("enlargeMemory")},getTotalMemory:function(){return n.length},___setErrNo:function(e){throw new Error("errno")},_emscripten_memcpy_big:function(e,t,r){return n.set(n.subarray(t,t+r),e),e},memory:t,memoryBase:1024,table:new WebAssembly.Table({initial:2,maximum:2,element:"anyfunc"}),tableBase:0,_oninit:this._oninit.bind(this),_onframe:this._onframe.bind(this)},a=Uint8Array.from(atob(CC),(function(e){return e.charCodeAt(0)}));this._exports=WebAssembly.instantiate(a,{env:r}).then((function(e){return e.instance.exports}))}return i(e,[{key:"_oninit",value:function(e,t,n){var r=t*n;this._task={ptr:e/4,width:t,height:n,len:r,f:[]}}},{key:"_onframe",value:function(e){var t=this._task,n=new Uint32Array(t.len);n.set(this._u32view.subarray(t.ptr,t.ptr+t.len)),t.f.push({buf:n,ms:e})}},{key:"readString",value:function(e){var t,n=this._view.slice(e);for(t=0;t<n.length&&0!==n[t];++t);return(new TextDecoder).decode(n.slice(0,t))}},{key:"decode",value:function(e){var t,n=this,r=this._exports.then((function(r){var a=new Uint8Array(e),s=r._malloc(a.length);t=function(){return r._free(s)},n._view.set(a,s),r._read_buffer(s,a.length);var o=r._play();if(o)throw new Error("unhandled decode error: "+n.readString(o));var i=n._task;return delete n._task,i.f.map((function(e){var t=new Uint8ClampedArray(e.buf.buffer);return{imageData:new ImageData(t,i.width,i.height),delay:e.ms}}))}));return r.then(t,t),r}}]),e}(),CC="",xC={},EC={};function wC(e,t){return vC.apply(this,arguments)}function vC(){return(vC=a(l.mark((function e(t,n){var r,a,s,o,i,u,c;return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!xC.hasOwnProperty(t.src)){e.next=2;break}return e.abrupt("return",new Promise((function(e,n){e({id:xC[t.src]})})));case 2:if(r=yC(),EC[r]=[],"VIDEO"!==t.tagName){e.next=8;break}return e.abrupt("return",new Promise((function(e,n){var a=void 0,s=-1,o=document.createElement("video"),i=!1;function u(){if(a=i?o.requestVideoFrameCallback(u):requestAnimationFrame(u),!i){if(!(o.currentTime-s>.05))return;s=o.currentTime}var n=document.createElement("canvas"),l=n.getContext("2d"),c=640,d=480;0!=o.videoWidth&&o.videoWidth<c&&(c=o.videoWidth),0!=o.videoHeight&&o.videoHeight<d&&(d=o.videoHeight),n.width=c,n.height=d,l.drawImage(o,0,0,c,d),EC[r].push(n),xC[t.src]=r,2==EC[r].length&&e({id:r})}"requestVideoFrameCallback"in HTMLVideoElement.prototype&&(i=!0),o.crossOrigin="anonymous",o.src=t.src,o.addEventListener("loadeddata",(function(){o.play(),i?a=o.requestVideoFrameCallback(u):u()})),o.addEventListener("ended",(function(){o.pause(),i?o.cancelVideoFrameCallback(a):window.cancelAnimationFrame(a),o.remove()}))})));case 8:if(!n){e.next=22;break}return i=function(e,n){var a=document.createElement("canvas");a.width=o[e].imageData.width,a.height=o[e].imageData.height,a.getContext("2d").putImageData(o[e].imageData,0,0),EC[r].push(a),xC[t.src]=r,(2==e||o.length<2)&&n({id:r})},e.next=12,window.fetch(t.src);case 12:return a=e.sent,e.next=15,a.arrayBuffer();case 15:return s=e.sent,e.next=18,(new bC).decode(s);case 18:return o=e.sent,e.abrupt("return",new Promise((function(e,t){for(var n=function(t){setTimeout((function(){i(t,e)}))},r=0;r<o.length;r++)n(r)})));case 22:return(u=document.createElement("canvas")).width=t.naturalWidth,u.height=t.naturalHeight,(c=u.getContext("2d")).fillStyle="white",c.fillRect(0,0,u.width,u.height),c.drawImage(t,0,0,u.width,u.height),EC[r]=[u],xC[t.src]=r,e.abrupt("return",new Promise((function(e,t){e({id:r})})));case 32:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function BC(){var e=0,t=document.createElement("canvas");t.width=10,t.height=10;for(var n=new ImageData(10,10),r=0;r<100;r++)n.data[4*r+0]=0,n.data[4*r+1]=0,n.data[4*r+2]=0,n.data[4*r+3]=255;t.getContext("2d").putImageData(n,0,0);var a="none";return{getBackground:function(n,r,s){if(a!=n&&(e=0,a=n),EC.hasOwnProperty(n)){var o=1;r&&s&&(o=1*s/r*1),e+=o;var i=Math.floor(e);return i>=EC[n].length&&(e=0,i=0),EC[n][i]}return t}}}function RC(){var e=640,t=480,n=document.createElement("canvas");n.width=e,n.height=t;var r=n.getContext("2d"),a=document.createElement("canvas");a.width=e,a.height=t;var s=a.getContext("2d"),o=!0,i=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);return{backgroundBlur:function(u,l,c,d){var p=d.hFlip,h=d.blurAmount;o&&(o=!1,e=d.canvasWidth,t=d.canvasHeight,a.width=e,a.height=t),l.width==n.width&&l.height==n.height||(n.width=l.width,n.height=l.height),r.putImageData(l,0,0),p&&(c.scale(-1,1),c.translate(-e,0)),i?(c.clearRect(0,0,e,t),function(e,t,n){for(var r=0,a=1/(2*Math.PI*5*5),s=n<3?1:2,o=-n;o<=n;o+=s)for(var i=-n;i<=n;i+=s)r+=a*Math.exp(-(i*i+o*o)/50);for(var u=-n;u<=n;u+=s)for(var l=-n;l<=n;l+=s)t.globalAlpha=a*Math.exp(-(l*l+u*u)/50)/r*n,t.drawImage(e,l,u);t.globalAlpha=1}(u,s,32*h),c.drawImage(u,0,0,e,t),c.globalCompositeOperation="destination-in",c.drawImage(n,0,0,e,t),c.globalCompositeOperation="destination-over",c.drawImage(a,0,0,e,t)):(c.globalCompositeOperation="copy",c.filter="blur("+4*h+"px)",c.drawImage(n,0,0,e,t),c.globalCompositeOperation="source-in",c.filter="none",c.drawImage(u,0,0,e,t),c.globalCompositeOperation="destination-over",c.filter="blur("+8*h+"px)",c.drawImage(u,0,0,e,t),c.filter="none"),c.globalCompositeOperation="copy",p&&(c.scale(-1,1),c.translate(-e,0))},virtualBackground:function(s,u,l,c,d){var p=d.hFlip,h=d.bgFlip;o&&(o=!1,e=d.canvasWidth,t=d.canvasHeight,a.width=e,a.height=t),u.width==n.width&&u.height==n.height||(n.width=u.width,n.height=u.height),r.putImageData(u,0,0),p&&(c.scale(-1,1),c.translate(-e,0)),i?(c.clearRect(0,0,e,t),c.drawImage(s,0,0,e,t),c.globalCompositeOperation="destination-in",c.drawImage(n,0,0,e,t),c.globalCompositeOperation="destination-over",l&&(h?(c.scale(-1,1),c.translate(-e,0),c.drawImage(l,0,0,e,t),c.scale(-1,1),c.translate(-e,0)):c.drawImage(l,0,0,e,t))):(c.clearRect(0,0,e,t),c.globalCompositeOperation="copy",c.drawImage(n,0,0,e,t),c.globalCompositeOperation="source-in",c.drawImage(s,0,0,e,t),c.globalCompositeOperation="destination-over",l&&(h?(c.scale(-1,1),c.translate(-e,0),c.drawImage(l,0,0,e,t),c.scale(-1,1),c.translate(-e,0)):c.drawImage(l,0,0,e,t))),c.globalCompositeOperation="copy",p&&(c.scale(-1,1),c.translate(-e,0))},updateCanvas:function(){o=!0}}}function SC(){var e=640,t=480,n=document.createElement("canvas");n.width=e,n.height=t;var r=n.getContext("webgl"),a=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,a),r.bufferData(r.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),r.STATIC_DRAW);var s=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,s),r.bufferData(r.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),r.STATIC_DRAW);var o=r.createTexture();r.bindTexture(r.TEXTURE_2D,o),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);for(var i=[],u=[],l=0;l<3;l++){var c=r.createTexture();r.bindTexture(r.TEXTURE_2D,c),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e,t,0,r.RGBA,r.UNSIGNED_BYTE,null);var d=r.createFramebuffer();if(r.bindFramebuffer(r.FRAMEBUFFER,d),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,c,0),r.checkFramebufferStatus(r.FRAMEBUFFER)!==r.FRAMEBUFFER_COMPLETE)throw"these attachments don't work";i.push(c),u.push(d)}var p=r.createTexture();r.bindTexture(r.TEXTURE_2D,p),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);var h=256,A=144,g=r.createTexture();r.bindTexture(r.TEXTURE_2D,g),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,640,480,0,r.RGBA,r.UNSIGNED_BYTE,null);var m=r.createTexture();r.bindTexture(r.TEXTURE_2D,m),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,640,480,0,r.RGBA,r.UNSIGNED_BYTE,null);var f=r.createTexture();r.activeTexture(r.TEXTURE0+2),r.bindTexture(r.TEXTURE_2D,f),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);var I=640,y=480,b=TC(r,r.VERTEX_SHADER,"\n    attribute vec2 a_position; \n    attribute vec2 a_texCoord;\n    varying vec2 v_texCoord;\n    uniform float u_flipOption;\n    void main() {\n        gl_Position = vec4(a_position*vec2(1, u_flipOption), 0.0, 1.0);\n        v_texCoord = a_texCoord;\n    }"),C=function(e,t,n,r,a){var s="\n    precision mediump float;\n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_personMask;\n    uniform vec2 u_texelSize;\n    \n    varying vec2 v_texCoord;\n\n    float gaussian(float x, float sigma) {\n      float coeff = -0.5 / (sigma * sigma * 4.0 + 1.0e-6);\n      return exp((x * x) * coeff);\n    }\n    void main() {\n      vec2 centerCoord = v_texCoord;\n      vec3 centerColor = texture2D(u_inputFrame, centerCoord).rgb;\n      float newVal = 0.0;\n      float spaceWeight = 0.0;\n      float colorWeight = 0.0;\n      float totalWeight = 0.0;\n      const float kernelSize = 5.0;\n      // Subsample kernel space.\n      for (float i = -kernelSize ; i <= kernelSize; i += 1.0) {\n        for (float j = -kernelSize ; j <= kernelSize; j += 1.0) {\n          vec2 shift = vec2(j, i) * u_texelSize;\n          vec2 coord = vec2(centerCoord + shift);\n          vec3 frameColor = texture2D(u_inputFrame, coord).rgb;\n          float outVal = texture2D(u_personMask, coord).a;\n          spaceWeight = gaussian(distance(centerCoord, coord), 1.0);\n          colorWeight = gaussian(distance(centerColor, frameColor), 0.05);\n          totalWeight += spaceWeight * colorWeight;\n          newVal += spaceWeight * colorWeight * outVal;\n        }\n      }\n      newVal /= totalWeight;\n      gl_FragColor = vec4(0,0,0,newVal);\n    }\n    ",o=TC(e,e.FRAGMENT_SHADER,s),i=kC(e,t,o),u=e.getAttribLocation(i,"a_position");e.enableVertexAttribArray(u),e.bindBuffer(e.ARRAY_BUFFER,n),e.vertexAttribPointer(u,2,e.FLOAT,!1,0,0);var l=e.getAttribLocation(i,"a_texCoord");e.enableVertexAttribArray(l),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(l,2,e.FLOAT,!1,0,0);var c=e.createFramebuffer();if(e.bindFramebuffer(e.FRAMEBUFFER,c),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0),e.checkFramebufferStatus(e.FRAMEBUFFER)!==e.FRAMEBUFFER_COMPLETE)throw"these attachments don't work";var d=e.getUniformLocation(i,"u_flipOption"),p=e.getUniformLocation(i,"u_inputFrame"),h=e.getUniformLocation(i,"u_personMask"),A=e.getUniformLocation(i,"u_texelSize"),g=640,m=480;function f(){e.bindFramebuffer(e.FRAMEBUFFER,c),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.viewport(0,0,g,m),e.useProgram(i),e.drawArrays(e.TRIANGLES,0,6)}function I(){e.deleteFramebuffer(framebuffer),e.detachShader(i,t),e.detachShader(i,o),e.deleteShader(o),e.deleteProgram(i)}return e.useProgram(i),e.uniform1f(d,1),e.uniform1i(p,0),e.uniform1i(h,1),e.uniform2f(A,1/g,1/m),{run:f,clean:I}}(r,b,a,s,g),x=function(e,t,n,r,a){var s="\n    precision mediump float;\n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_personMask;\n    uniform vec2 u_texelSize;\n   \n    varying vec2 v_texCoord;\n\n    float gaussian(float x, float sigma) {\n      float coeff = -0.5 / (sigma * sigma * 4.0 + 1.0e-6);\n      return exp((x * x) * coeff);\n    }\n\n    void main() {\n      vec2 centerCoord = v_texCoord;\n\n      vec3 finalColor = vec3(0,0,0);\n      float totalWeight = 0.0;\n\n      int count = 0;\n      for(float i=-7.0;i<=7.0;i+=1.0){\n          vec2 shift = vec2(i, i) * u_texelSize;\n          vec2 coord = vec2(centerCoord + shift);\n          float currentWeight = gaussian(i,2.0) * (1.0 - texture2D(u_personMask, coord).a);\n          finalColor += texture2D(u_inputFrame, coord).rgb * currentWeight;\n          totalWeight +=currentWeight;\n          count+=1;\n      }\n      if(totalWeight==0.0){\n        finalColor = vec3(0.0);\n      }else{\n        finalColor /= totalWeight;\n      }\n      gl_FragColor = vec4(finalColor, 1.0);\n    }",o=TC(e,e.FRAGMENT_SHADER,s),i=kC(e,t,o),u=e.getAttribLocation(i,"a_position");e.enableVertexAttribArray(u),e.bindBuffer(e.ARRAY_BUFFER,n),e.vertexAttribPointer(u,2,e.FLOAT,!1,0,0);var l=e.getAttribLocation(i,"a_texCoord");e.enableVertexAttribArray(l),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(l,2,e.FLOAT,!1,0,0);var c=e.createTexture();e.bindTexture(e.TEXTURE_2D,c),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,640,480,0,e.RGBA,e.UNSIGNED_BYTE,null);var d=e.createFramebuffer();if(e.bindFramebuffer(e.FRAMEBUFFER,d),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,c,0),e.checkFramebufferStatus(e.FRAMEBUFFER)!==e.FRAMEBUFFER_COMPLETE)throw"these attachments don't work";var p=e.createFramebuffer();if(e.bindFramebuffer(e.FRAMEBUFFER,p),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0),e.checkFramebufferStatus(e.FRAMEBUFFER)!==e.FRAMEBUFFER_COMPLETE)throw"these attachments don't work";var h=e.getUniformLocation(i,"u_flipOption"),A=e.getUniformLocation(i,"u_inputFrame"),g=e.getUniformLocation(i,"u_personMask"),m=e.getUniformLocation(i,"u_texelSize"),f=640,I=480;function y(t,n){e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,t),e.useProgram(i),e.viewport(0,0,f,I),e.uniform1i(A,0),e.uniform1i(g,1);for(var r=Number(n),s=0;s<r;s++)e.uniform2f(m,0,1/I),e.bindFramebuffer(e.FRAMEBUFFER,d),e.drawArrays(e.TRIANGLES,0,6),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,c),e.uniform1i(A,2),e.uniform2f(m,1/f,0),e.bindFramebuffer(e.FRAMEBUFFER,p),e.drawArrays(e.TRIANGLES,0,6),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,a)}function b(){e.detachShader(i,t),e.detachShader(i,o),e.deleteShader(o),e.deleteTexture(c),e.deleteFramebuffer(d),e.deleteFramebuffer(p),e.deleteProgram(i)}return e.useProgram(i),e.uniform1f(h,1),e.uniform1i(A,0),e.uniform1i(g,1),e.uniform2f(m,1/f,1/I),{run:y,clean:b}}(r,b,a,s,m),E=function(e,t,n,r){var a="\n    precision mediump float;\n    \n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_personMask;\n    uniform sampler2D u_bgFrame;\n    uniform float u_hFlip;\n    uniform float u_flipBg;\n    \n    varying vec2 v_texCoord;\n    \n    void main() {\n        vec2 centerCoord = v_texCoord;\n        if(u_hFlip==1.0){\n            centerCoord = vec2(1.0 - v_texCoord.x ,v_texCoord.y);\n        }\n        vec3 frameColor = texture2D(u_inputFrame, centerCoord).rgb;\n        vec3 bgColor = texture2D(u_bgFrame, centerCoord).rgb;\n        if(u_flipBg==1.0){\n            bgColor = texture2D(u_bgFrame, vec2(1.0 - centerCoord.x,centerCoord.y)).rgb;\n        }\n        float mask = texture2D(u_personMask, centerCoord).a;\n        gl_FragColor = vec4(frameColor * mask + bgColor * (1.0 - mask), 1.0);\n    }",s=TC(e,e.FRAGMENT_SHADER,a),o=kC(e,t,s),i=e.getAttribLocation(o,"a_position");e.enableVertexAttribArray(i),e.bindBuffer(e.ARRAY_BUFFER,n),e.vertexAttribPointer(i,2,e.FLOAT,!1,0,0);var u=e.getAttribLocation(o,"a_texCoord");e.enableVertexAttribArray(u),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(u,2,e.FLOAT,!1,0,0);var l=e.getUniformLocation(o,"u_flipOption"),c=e.getUniformLocation(o,"u_inputFrame"),d=e.getUniformLocation(o,"u_personMask"),p=e.getUniformLocation(o,"u_bgFrame"),h=e.getUniformLocation(o,"u_hFlip"),A=e.getUniformLocation(o,"u_flipBg");function g(t,n,r,a,s){e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,n),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,r),e.bindFramebuffer(e.FRAMEBUFFER,t),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.viewport(0,0,e.canvas.width,e.canvas.height),e.useProgram(o),a?e.uniform1f(h,1):e.uniform1f(h,0),s?e.uniform1f(A,1):e.uniform1f(A,0),e.drawArrays(e.TRIANGLES,0,6)}function m(){e.detachShader(o,t),e.detachShader(o,s),e.deleteShader(s),e.deleteProgram(o)}return e.useProgram(o),e.uniform1f(l,1),e.uniform1i(c,0),e.uniform1i(d,1),e.uniform1i(p,2),e.uniform1f(h,0),e.uniform1f(A,0),{run:g,clean:m}}(r,b,a,s),w=function(e,t,n,r){var a="\n    precision mediump float;\n    \n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_personMask;\n    uniform sampler2D u_blurFrame;\n    uniform float u_hFlip;\n    \n    varying vec2 v_texCoord;\n    \n    void main() {\n        vec2 centerCoord = v_texCoord;\n        if(u_hFlip==1.0){\n            centerCoord = vec2(1.0 - v_texCoord.x ,v_texCoord.y);\n        }\n        vec3 frameColor = texture2D(u_inputFrame, centerCoord).rgb;\n        vec3 bgColor = texture2D(u_blurFrame, centerCoord).rgb;\n        float mask = texture2D(u_personMask, centerCoord).a;\n        gl_FragColor = vec4(frameColor * mask + bgColor * (1.0 - mask), 1.0);\n    }\n    ",s=TC(e,e.FRAGMENT_SHADER,a),o=kC(e,t,s),i=e.getAttribLocation(o,"a_position");e.enableVertexAttribArray(i),e.bindBuffer(e.ARRAY_BUFFER,n),e.vertexAttribPointer(i,2,e.FLOAT,!1,0,0);var u=e.getAttribLocation(o,"a_texCoord");e.enableVertexAttribArray(u),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(u,2,e.FLOAT,!1,0,0);var l=e.getUniformLocation(o,"u_flipOption"),c=e.getUniformLocation(o,"u_inputFrame"),d=e.getUniformLocation(o,"u_personMask"),p=e.getUniformLocation(o,"u_blurFrame"),h=e.getUniformLocation(o,"u_hFlip");function A(t,n,r,a){e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,n),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,r),e.bindFramebuffer(e.FRAMEBUFFER,t),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.viewport(0,0,e.canvas.width,e.canvas.height),e.useProgram(o),a?e.uniform1f(h,1):e.uniform1f(h,0),e.drawArrays(e.TRIANGLES,0,6)}function g(){e.detachShader(o,t),e.detachShader(o,s),e.deleteShader(s),e.deleteProgram(o)}return e.useProgram(o),e.uniform1f(l,1),e.uniform1i(c,0),e.uniform1i(d,1),e.uniform1i(p,2),e.uniform1f(h,0),{run:A,clean:g}}(r,b,a,s),v=function(e,t,n,r){var a="\n    precision mediump float;\n\n    uniform sampler2D u_inputFrame;\n    uniform vec3 u_startingColor;\n    uniform vec3 u_shift;\n    uniform float u_filterOpacity;\n\n    varying vec2 v_texCoord;\n\n    void main() {\n        vec2 centerCoord = v_texCoord;\n        vec3 frameColor = texture2D(u_inputFrame, centerCoord).rgb;\n        float grayValue = (frameColor.r+frameColor.g+frameColor.b)/3.0;\n        float colorR = frameColor.r*(1.0 -u_filterOpacity)+u_filterOpacity*((grayValue*u_shift[0])+u_startingColor[0]);\n        float colorG = frameColor.g*(1.0 -u_filterOpacity)+u_filterOpacity*((grayValue*u_shift[1])+u_startingColor[1]);\n        float colorB = frameColor.b*(1.0 -u_filterOpacity)+u_filterOpacity*((grayValue*u_shift[2])+u_startingColor[2]);\n        gl_FragColor = vec4(colorR, colorG, colorB, 1.0);\n    }\n    ",s=TC(e,e.FRAGMENT_SHADER,a),o=kC(e,t,s),i=e.getAttribLocation(o,"a_position");e.enableVertexAttribArray(i),e.bindBuffer(e.ARRAY_BUFFER,n),e.vertexAttribPointer(i,2,e.FLOAT,!1,0,0);var u=e.getAttribLocation(o,"a_texCoord");e.enableVertexAttribArray(u),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(u,2,e.FLOAT,!1,0,0);var l=e.getUniformLocation(o,"u_flipOption"),c=e.getUniformLocation(o,"u_inputFrame"),d=e.getUniformLocation(o,"u_startingColor"),p=e.getUniformLocation(o,"u_shift"),h=e.getUniformLocation(o,"u_filterOpacity");function A(t,n,r,a,s){e.useProgram(o),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,n),e.uniform3f(d,r[0]/255,r[1]/255,r[2]/255),e.uniform3f(p,a[0],a[1],a[2]),e.uniform1f(h,s),e.bindFramebuffer(e.FRAMEBUFFER,t),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.viewport(0,0,e.canvas.width,e.canvas.height),e.drawArrays(e.TRIANGLES,0,6)}function g(){e.detachShader(o,t),e.detachShader(o,s),e.deleteShader(s),e.deleteProgram(o)}return e.useProgram(o),e.uniform1f(l,1),e.uniform1i(c,0),e.uniform3f(d,0,0,0),e.uniform3f(p,1/255,1/255,1/255),e.uniform1f(h,1),{run:A,clean:g}}(r,b,a,s),B=function(e,t,n,r){var a="\n    precision mediump float;\n\n    uniform sampler2D u_inputFrame;\n    varying vec2 v_texCoord;\n\n    void main() {\n        vec2 centerCoord = v_texCoord;\n        vec3 frameColor = texture2D(u_inputFrame, centerCoord).rgb;\n        gl_FragColor = vec4(frameColor, 1.0);\n    }\n    ",s=TC(e,e.FRAGMENT_SHADER,a),o=kC(e,t,s),i=e.getAttribLocation(o,"a_position");e.enableVertexAttribArray(i),e.bindBuffer(e.ARRAY_BUFFER,n),e.vertexAttribPointer(i,2,e.FLOAT,!1,0,0);var u=e.getAttribLocation(o,"a_texCoord");e.enableVertexAttribArray(u),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(u,2,e.FLOAT,!1,0,0);var l=e.getUniformLocation(o,"u_flipOption"),c=e.getUniformLocation(o,"u_inputFrame");function d(t,n){e.bindFramebuffer(e.FRAMEBUFFER,null),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,t),e.useProgram(o),e.uniform1i(c,0),e.uniform1f(l,n),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.viewport(0,0,e.canvas.width,e.canvas.height),e.drawArrays(e.TRIANGLES,0,6)}function p(){e.detachShader(o,t),e.detachShader(o,s),e.deleteShader(s),e.deleteProgram(o)}return e.useProgram(o),e.uniform1i(c,0),e.uniform1f(l,-1),{run:d,clean:p}}(r,b,a,s),R=0,S=new ImageData(r.canvas.width,r.canvas.height),T=document.createElement("canvas");T.width=e,T.height=t;var k=T.getContext("2d"),N=!1;function F(e,t,n){r.deleteFramebuffer(u[e]),r.deleteTexture(i[e]);var a=r.createTexture();r.bindTexture(r.TEXTURE_2D,a),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t,n,0,r.RGBA,r.UNSIGNED_BYTE,null);var s=r.createFramebuffer();if(r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,a,0),r.checkFramebufferStatus(r.FRAMEBUFFER)!==r.FRAMEBUFFER_COMPLETE)throw"these attachments don't work";i[e]=a,u[e]=s}function Q(a,s,i){if(e!=s||t!=i){r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(o),o=r.createTexture(),r.bindTexture(r.TEXTURE_2D,o),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),e=s,t=i,n.width=e,n.height=t;for(var u=0;u<3;u++)F(u,s,i)}a&&(r.activeTexture(r.TEXTURE0),r.bindTexture(r.TEXTURE_2D,o),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,a))}function D(e,t,n){h==t&&A==n||(r.deleteTexture(p),p=r.createTexture(),r.bindTexture(r.TEXTURE_2D,p),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),h=t,A=n),e&&(r.activeTexture(r.TEXTURE0+1),r.bindTexture(r.TEXTURE_2D,p),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e))}return{applyBgBlur:function(e,t,n){Q(e,n.canvasWidth,n.canvasHeight),D(t,t.width,t.height),C.run(),x.run(p,8*n.blurAmount),w.run(u[0],g,m,n.hFlip),R=0},applyVirtualBg:function(e,t,n,a){var s,o,i;Q(e,a.canvasWidth,a.canvasHeight),D(t,t.width,t.height),s=n,o=n.width,i=n.height,I==o&&y==i||(r.deleteTexture(f),f=r.createTexture(),r.bindTexture(r.TEXTURE_2D,f),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),I=o,y=i),s&&(r.activeTexture(r.TEXTURE0+2),r.bindTexture(r.TEXTURE_2D,f),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,s)),C.run(),E.run(u[1],g,f,a.hFlip,a.bgFlip),R=1},cleanResources:function(){C.clean(),E.clean(),x.clean(),w.clean(),r.deleteTexture(o),r.deleteTexture(p),r.deleteTexture(g),r.deleteTexture(m),r.deleteTexture(f),r.deleteBuffer(s),r.deleteBuffer(a),r.deleteShader(b);for(var e=0;e<3;e++)r.deleteFramebuffer(u[e]),r.deleteTexture(i[e])},applyGradientFilter:function(e,t,n,r,a){a?v.run(u[2],i[R],t,n,r):(Q(e,e.width,e.height),v.run(u[2],o,t,n,r)),R=2},getOutput:function(){return N?(B.run(i[R],1),T.width==r.canvas.width&&T.height==r.canvas.height||(S=new ImageData(r.canvas.width,r.canvas.height),T.width=r.canvas.width,T.height=r.canvas.height),r.readPixels(0,0,r.canvas.width,r.canvas.height,r.RGBA,r.UNSIGNED_BYTE,S.data),k.putImageData(S,0,0),T):(B.run(i[R],-1),n)},forceReadPixels:function(e){N=e}}}function TC(e,t,n){var r=e.createShader(t);if(e.shaderSource(r,n),e.compileShader(r),e.getShaderParameter(r,e.COMPILE_STATUS))return r;e.deleteShader(r)}function kC(e,t,n){var r=e.createProgram();if(e.attachShader(r,t),e.attachShader(r,n),e.linkProgram(r),e.getProgramParameter(r,e.LINK_STATUS))return r;e.deleteProgram(r)}function NC(){var e=640,t=480,n=document.createElement("canvas");n.width=e,n.height=t;var r=n.getContext("webgl2"),a=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,a),r.bufferData(r.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,-1,1,1,-1,1,1]),r.STATIC_DRAW);var s=r.createBuffer();r.bindBuffer(r.ARRAY_BUFFER,s),r.bufferData(r.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),r.STATIC_DRAW);var o=r.createTexture();r.bindTexture(r.TEXTURE_2D,o),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);for(var i=[],u=[],l=0;l<3;l++){var c=r.createTexture();r.bindTexture(r.TEXTURE_2D,c),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,e,t,0,r.RGBA,r.UNSIGNED_BYTE,null);var d=r.createFramebuffer();if(r.bindFramebuffer(r.FRAMEBUFFER,d),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,c,0),r.checkFramebufferStatus(r.FRAMEBUFFER)!==r.FRAMEBUFFER_COMPLETE)throw"these attachments don't work";i.push(c),u.push(d)}var p=r.createTexture();r.bindTexture(r.TEXTURE_2D,p),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);var h=256,A=144,g=r.createTexture();r.bindTexture(r.TEXTURE_2D,g),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,640,480,0,r.RGBA,r.UNSIGNED_BYTE,null);var m=r.createTexture();r.bindTexture(r.TEXTURE_2D,m),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,640,480,0,r.RGBA,r.UNSIGNED_BYTE,null);var f=r.createTexture();r.activeTexture(r.TEXTURE0+2),r.bindTexture(r.TEXTURE_2D,f),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST);var I=640,y=480,b=FC(r,r.VERTEX_SHADER,"#version 300 es\n    in vec2 a_position; \n    in vec2 a_texCoord;\n    out vec2 v_texCoord;\n    uniform float u_flipOption;\n    void main() {\n        gl_Position = vec4(a_position*vec2(1, u_flipOption), 0.0, 1.0);\n        v_texCoord = a_texCoord;\n    }"),C=function(e,t,n,r,a){var s="#version 300 es\n    precision highp float;\n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_personMask;\n    uniform vec2 u_texelSize;\n\n    in vec2 v_texCoord;\n    out vec4 outColor;\n    float gaussian(float x, float sigma) {\n    float coeff = -0.5 / (sigma * sigma * 4.0 + 1.0e-6);\n    return exp((x * x) * coeff);\n    }\n    void main() {\n    vec2 centerCoord = v_texCoord;\n    vec3 centerColor = texture(u_inputFrame, centerCoord).rgb;\n    float newVal = 0.0;\n    float spaceWeight = 0.0;\n    float colorWeight = 0.0;\n    float totalWeight = 0.0;\n    float kernelSize = 5.0;\n    // Subsample kernel space.\n    for (float i = -kernelSize ; i <= kernelSize; i += 1.0) {\n        for (float j = -kernelSize ; j <= kernelSize; j += 1.0) {\n        vec2 shift = vec2(j, i) * u_texelSize;\n        vec2 coord = vec2(centerCoord + shift);\n        vec3 frameColor = texture(u_inputFrame, coord).rgb;\n        float outVal = texture(u_personMask, coord).a;\n        spaceWeight = gaussian(distance(centerCoord, coord), 1.0);\n        colorWeight = gaussian(distance(centerColor, frameColor), 0.05);\n        totalWeight += spaceWeight * colorWeight;\n        newVal += spaceWeight * colorWeight * outVal;\n        }\n    }\n    newVal /= totalWeight;\n    outColor = vec4(0,0,0,newVal);\n    }\n    ",o=FC(e,e.FRAGMENT_SHADER,s),i=QC(e,t,o),u=e.getAttribLocation(i,"a_position");e.enableVertexAttribArray(u),e.bindBuffer(e.ARRAY_BUFFER,n),e.vertexAttribPointer(u,2,e.FLOAT,!1,0,0);var l=e.getAttribLocation(i,"a_texCoord");e.enableVertexAttribArray(l),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(l,2,e.FLOAT,!1,0,0);var c=e.createFramebuffer();if(e.bindFramebuffer(e.FRAMEBUFFER,c),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0),e.checkFramebufferStatus(e.FRAMEBUFFER)!==e.FRAMEBUFFER_COMPLETE)throw"these attachments don't work";var d=e.getUniformLocation(i,"u_flipOption"),p=e.getUniformLocation(i,"u_inputFrame"),h=e.getUniformLocation(i,"u_personMask"),A=e.getUniformLocation(i,"u_texelSize"),g=640,m=480;function f(){e.bindFramebuffer(e.FRAMEBUFFER,c),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.viewport(0,0,g,m),e.useProgram(i),e.drawArrays(e.TRIANGLES,0,6)}function I(){e.deleteFramebuffer(framebuffer),e.detachShader(i,t),e.detachShader(i,o),e.deleteShader(o),e.deleteProgram(i)}return e.useProgram(i),e.uniform1f(d,1),e.uniform1i(p,0),e.uniform1i(h,1),e.uniform2f(A,1/g,1/m),{run:f,clean:I}}(r,b,a,s,g),x=function(e,t,n,r,a){var s="#version 300 es\n    precision highp float;\n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_personMask;\n    uniform vec2 u_texelSize;\n   \n    in vec2 v_texCoord;\n    out vec4 outColor;\n\n    const float gaussian[15] = float[](0.03453786, 0.04479319, 0.05581576, 0.06682359, 0.07686543,\n        0.08494944, 0.09020242, 0.09202463, 0.09020242, 0.08494944,\n        0.07686543, 0.06682359, 0.05581576, 0.04479319, 0.03453786);\n\n\n    void main() {\n      vec2 centerCoord = v_texCoord;\n\n      vec3 finalColor = vec3(0,0,0);\n      float totalWeight = 0.0;\n\n      int count = 0;\n      for(float i=-7.0;i<=7.0;i+=1.0){\n          vec2 shift = vec2(i, i) * u_texelSize;\n          vec2 coord = vec2(centerCoord + shift);\n          float currentWeight = gaussian[count] * (1.0 - texture(u_personMask, coord).a);\n          finalColor += texture(u_inputFrame, coord).rgb * currentWeight;\n          totalWeight +=currentWeight;\n          count+=1;\n      }\n      if(totalWeight==0.0){\n        finalColor = vec3(0.0);\n      }else{\n        finalColor /= totalWeight;\n      }\n      outColor = vec4(finalColor, 1.0);\n    }\n    ",o=FC(e,e.FRAGMENT_SHADER,s),i=QC(e,t,o),u=e.getAttribLocation(i,"a_position");e.enableVertexAttribArray(u),e.bindBuffer(e.ARRAY_BUFFER,n),e.vertexAttribPointer(u,2,e.FLOAT,!1,0,0);var l=e.getAttribLocation(i,"a_texCoord");e.enableVertexAttribArray(l),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(l,2,e.FLOAT,!1,0,0);var c=e.createTexture();e.bindTexture(e.TEXTURE_2D,c),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,640,480,0,e.RGBA,e.UNSIGNED_BYTE,null);var d=e.createFramebuffer();if(e.bindFramebuffer(e.FRAMEBUFFER,d),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,c,0),e.checkFramebufferStatus(e.FRAMEBUFFER)!==e.FRAMEBUFFER_COMPLETE)throw"these attachments don't work";var p=e.createFramebuffer();if(e.bindFramebuffer(e.FRAMEBUFFER,p),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0),e.checkFramebufferStatus(e.FRAMEBUFFER)!==e.FRAMEBUFFER_COMPLETE)throw"these attachments don't work";var h=e.getUniformLocation(i,"u_flipOption"),A=e.getUniformLocation(i,"u_inputFrame"),g=e.getUniformLocation(i,"u_personMask"),m=e.getUniformLocation(i,"u_texelSize"),f=640,I=480;function y(t,n){e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,t),e.useProgram(i),e.viewport(0,0,f,I),e.uniform1i(A,0),e.uniform1i(g,1);for(var r=Number(n),s=0;s<r;s++)e.uniform2f(m,0,1/I),e.bindFramebuffer(e.FRAMEBUFFER,d),e.drawArrays(e.TRIANGLES,0,6),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,c),e.uniform1i(A,2),e.uniform2f(m,1/f,0),e.bindFramebuffer(e.FRAMEBUFFER,p),e.drawArrays(e.TRIANGLES,0,6),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,a)}function b(){e.detachShader(i,t),e.detachShader(i,o),e.deleteShader(o),e.deleteTexture(c),e.deleteFramebuffer(d),e.deleteFramebuffer(p),e.deleteProgram(i)}return e.useProgram(i),e.uniform1f(h,1),e.uniform1i(A,0),e.uniform1i(g,1),e.uniform2f(m,1/f,1/I),{run:y,clean:b}}(r,b,a,s,m),E=function(e,t,n,r){var a="#version 300 es\n    precision highp float;\n\n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_personMask;\n    uniform sampler2D u_bgFrame;\n    uniform float u_hFlip;\n    uniform float u_flipBg;\n\n    in vec2 v_texCoord;\n    out vec4 outColor;\n\n    void main() {\n        vec2 centerCoord = v_texCoord;\n        if(u_hFlip==1.0){\n            centerCoord = vec2(1.0 - v_texCoord.x ,v_texCoord.y);\n        }\n        vec3 frameColor = texture(u_inputFrame, centerCoord).rgb;\n        vec3 bgColor = texture(u_bgFrame, centerCoord).rgb;\n        if(u_flipBg==1.0){\n            bgColor = texture(u_bgFrame, vec2(1.0 - centerCoord.x,centerCoord.y)).rgb;\n        }\n        float mask = texture(u_personMask, centerCoord).a;\n        outColor = vec4(frameColor * mask + bgColor * (1.0 - mask), 1.0);\n    }\n    ",s=FC(e,e.FRAGMENT_SHADER,a),o=QC(e,t,s),i=e.getAttribLocation(o,"a_position");e.enableVertexAttribArray(i),e.bindBuffer(e.ARRAY_BUFFER,n),e.vertexAttribPointer(i,2,e.FLOAT,!1,0,0);var u=e.getAttribLocation(o,"a_texCoord");e.enableVertexAttribArray(u),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(u,2,e.FLOAT,!1,0,0);var l=e.getUniformLocation(o,"u_flipOption"),c=e.getUniformLocation(o,"u_inputFrame"),d=e.getUniformLocation(o,"u_personMask"),p=e.getUniformLocation(o,"u_bgFrame"),h=e.getUniformLocation(o,"u_hFlip"),A=e.getUniformLocation(o,"u_flipBg");function g(t,n,r,a,s){e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,n),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,r),e.bindFramebuffer(e.FRAMEBUFFER,t),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.viewport(0,0,e.canvas.width,e.canvas.height),e.useProgram(o),a?e.uniform1f(h,1):e.uniform1f(h,0),s?e.uniform1f(A,1):e.uniform1f(A,0),e.drawArrays(e.TRIANGLES,0,6)}function m(){e.detachShader(o,t),e.detachShader(o,s),e.deleteShader(s),e.deleteProgram(o)}return e.useProgram(o),e.uniform1f(l,1),e.uniform1i(c,0),e.uniform1i(d,1),e.uniform1i(p,2),e.uniform1f(h,0),e.uniform1f(A,0),{run:g,clean:m}}(r,b,a,s),w=function(e,t,n,r){var a="#version 300 es\n    precision highp float;\n\n    uniform sampler2D u_inputFrame;\n    uniform sampler2D u_personMask;\n    uniform sampler2D u_blurFrame;\n    uniform float u_hFlip;\n\n    in vec2 v_texCoord;\n    out vec4 outColor;\n\n    void main() {\n        vec2 centerCoord = v_texCoord;\n        if(u_hFlip==1.0){\n            centerCoord = vec2(1.0 - v_texCoord.x ,v_texCoord.y);\n        }\n        vec3 frameColor = texture(u_inputFrame, centerCoord).rgb;\n        vec3 bgColor = texture(u_blurFrame, centerCoord).rgb;\n        float mask = texture(u_personMask, centerCoord).a;\n        outColor = vec4(frameColor * mask + bgColor * (1.0 - mask), 1.0);\n    }\n    ",s=FC(e,e.FRAGMENT_SHADER,a),o=QC(e,t,s),i=e.getAttribLocation(o,"a_position");e.enableVertexAttribArray(i),e.bindBuffer(e.ARRAY_BUFFER,n),e.vertexAttribPointer(i,2,e.FLOAT,!1,0,0);var u=e.getAttribLocation(o,"a_texCoord");e.enableVertexAttribArray(u),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(u,2,e.FLOAT,!1,0,0);var l=e.getUniformLocation(o,"u_flipOption"),c=e.getUniformLocation(o,"u_inputFrame"),d=e.getUniformLocation(o,"u_personMask"),p=e.getUniformLocation(o,"u_blurFrame"),h=e.getUniformLocation(o,"u_hFlip");function A(t,n,r,a){e.activeTexture(e.TEXTURE1),e.bindTexture(e.TEXTURE_2D,n),e.activeTexture(e.TEXTURE2),e.bindTexture(e.TEXTURE_2D,r),e.bindFramebuffer(e.FRAMEBUFFER,t),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.viewport(0,0,e.canvas.width,e.canvas.height),e.useProgram(o),a?e.uniform1f(h,1):e.uniform1f(h,0),e.drawArrays(e.TRIANGLES,0,6)}function g(){e.detachShader(o,t),e.detachShader(o,s),e.deleteShader(s),e.deleteProgram(o)}return e.useProgram(o),e.uniform1f(l,1),e.uniform1i(c,0),e.uniform1i(d,1),e.uniform1i(p,2),e.uniform1f(h,0),{run:A,clean:g}}(r,b,a,s),v=function(e,t,n,r){var a="#version 300 es\n    \n    precision highp float;\n    uniform sampler2D u_inputFrame;\n    uniform vec3 u_startingColor;\n    uniform vec3 u_shift;\n    uniform float u_filterOpacity;\n\n    in vec2 v_texCoord;\n    out vec4 outColor;\n\n    void main() {\n        vec2 centerCoord = v_texCoord;\n        vec3 frameColor = texture(u_inputFrame, centerCoord).rgb;\n        float grayValue = (frameColor.r+frameColor.g+frameColor.b)/3.0;\n        float colorR = frameColor.r*(1.0 -u_filterOpacity)+u_filterOpacity*((grayValue*u_shift[0])+u_startingColor[0]);\n        float colorG = frameColor.g*(1.0 -u_filterOpacity)+u_filterOpacity*((grayValue*u_shift[1])+u_startingColor[1]);\n        float colorB = frameColor.b*(1.0 -u_filterOpacity)+u_filterOpacity*((grayValue*u_shift[2])+u_startingColor[2]);\n        outColor = vec4(colorR, colorG, colorB, 1.0);\n    }\n    ",s=FC(e,e.FRAGMENT_SHADER,a),o=QC(e,t,s),i=e.getAttribLocation(o,"a_position");e.enableVertexAttribArray(i),e.bindBuffer(e.ARRAY_BUFFER,n),e.vertexAttribPointer(i,2,e.FLOAT,!1,0,0);var u=e.getAttribLocation(o,"a_texCoord");e.enableVertexAttribArray(u),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(u,2,e.FLOAT,!1,0,0);var l=e.getUniformLocation(o,"u_flipOption"),c=e.getUniformLocation(o,"u_inputFrame"),d=e.getUniformLocation(o,"u_startingColor"),p=e.getUniformLocation(o,"u_shift"),h=e.getUniformLocation(o,"u_filterOpacity");function A(t,n,r,a,s){e.useProgram(o),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,n),e.uniform3f(d,r[0]/255,r[1]/255,r[2]/255),e.uniform3f(p,a[0],a[1],a[2]),e.uniform1f(h,s),e.bindFramebuffer(e.FRAMEBUFFER,t),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.viewport(0,0,e.canvas.width,e.canvas.height),e.drawArrays(e.TRIANGLES,0,6)}function g(){e.detachShader(o,t),e.detachShader(o,s),e.deleteShader(s),e.deleteProgram(o)}return e.useProgram(o),e.uniform1f(l,1),e.uniform1i(c,0),e.uniform3f(d,0,0,0),e.uniform3f(p,1/255,1/255,1/255),e.uniform1f(h,1),{run:A,clean:g}}(r,b,a,s),B=function(e,t,n,r){var a="#version 300 es\n    \n    precision highp float;\n    uniform sampler2D u_inputFrame;\n\n    in vec2 v_texCoord;\n    out vec4 outColor;\n\n    void main() {\n        vec2 centerCoord = v_texCoord;\n        vec3 frameColor = texture(u_inputFrame, centerCoord).rgb;\n        outColor = vec4(frameColor, 1.0);\n    }\n    ",s=FC(e,e.FRAGMENT_SHADER,a),o=QC(e,t,s),i=e.getAttribLocation(o,"a_position");e.enableVertexAttribArray(i),e.bindBuffer(e.ARRAY_BUFFER,n),e.vertexAttribPointer(i,2,e.FLOAT,!1,0,0);var u=e.getAttribLocation(o,"a_texCoord");e.enableVertexAttribArray(u),e.bindBuffer(e.ARRAY_BUFFER,r),e.vertexAttribPointer(u,2,e.FLOAT,!1,0,0);var l=e.getUniformLocation(o,"u_flipOption"),c=e.getUniformLocation(o,"u_inputFrame");function d(t){e.bindFramebuffer(e.FRAMEBUFFER,null),e.activeTexture(e.TEXTURE0),e.bindTexture(e.TEXTURE_2D,t),e.useProgram(o),e.uniform1i(c,0),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),e.viewport(0,0,e.canvas.width,e.canvas.height),e.drawArrays(e.TRIANGLES,0,6)}function p(){e.detachShader(o,t),e.detachShader(o,s),e.deleteShader(s),e.deleteProgram(o)}return e.useProgram(o),e.uniform1i(c,0),e.uniform1f(l,-1),{run:d,clean:p}}(r,b,a,s),R=0;function S(e,t,n){r.deleteFramebuffer(u[e]),r.deleteTexture(i[e]);var a=r.createTexture();r.bindTexture(r.TEXTURE_2D,a),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,t,n,0,r.RGBA,r.UNSIGNED_BYTE,null);var s=r.createFramebuffer();if(r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,a,0),r.checkFramebufferStatus(r.FRAMEBUFFER)!==r.FRAMEBUFFER_COMPLETE)throw"these attachments don't work";i[e]=a,u[e]=s}function T(a,s,i){if(e!=s||t!=i){r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(o),o=r.createTexture(),r.bindTexture(r.TEXTURE_2D,o),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),e=s,t=i,n.width=e,n.height=t;for(var u=0;u<3;u++)S(u,s,i)}a&&(r.activeTexture(r.TEXTURE0),r.bindTexture(r.TEXTURE_2D,o),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,a))}function k(e,t,n){h==t&&A==n||(r.deleteTexture(p),p=r.createTexture(),r.bindTexture(r.TEXTURE_2D,p),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),h=t,A=n),e&&(r.activeTexture(r.TEXTURE0+1),r.bindTexture(r.TEXTURE_2D,p),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,e))}return{applyBgBlur:function(e,t,n){T(e,n.canvasWidth,n.canvasHeight),k(t,t.width,t.height),C.run(),x.run(p,8*n.blurAmount),w.run(u[0],g,m,n.hFlip),R=0},applyVirtualBg:function(e,t,n,a){var s,o,i;T(e,a.canvasWidth,a.canvasHeight),k(t,t.width,t.height),s=n,o=n.width,i=n.height,I==o&&y==i||(r.deleteTexture(f),f=r.createTexture(),r.bindTexture(r.TEXTURE_2D,f),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(r.TEXTURE_2D,r.TEXTURE_MAG_FILTER,r.NEAREST),I=o,y=i),s&&(r.activeTexture(r.TEXTURE0+2),r.bindTexture(r.TEXTURE_2D,f),r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,s)),C.run(),E.run(u[1],g,f,a.hFlip,a.bgFlip),R=1},cleanResources:function(){C.clean(),E.clean(),x.clean(),w.clean(),r.deleteTexture(o),r.deleteTexture(p),r.deleteTexture(g),r.deleteTexture(m),r.deleteTexture(f),r.deleteBuffer(s),r.deleteBuffer(a),r.deleteShader(b);for(var e=0;e<3;e++)r.deleteFramebuffer(u[e]),r.deleteTexture(i[e])},applyGradientFilter:function(e,t,n,r,a){a?v.run(u[2],i[R],t,n,r):(T(e,e.width,e.height),v.run(u[2],o,t,n,r)),R=2},getOutput:function(){return B.run(i[R]),n}}}function FC(e,t,n){var r=e.createShader(t);if(e.shaderSource(r,n),e.compileShader(r),e.getShaderParameter(r,e.COMPILE_STATUS))return r;e.deleteShader(r)}function QC(e,t,n){var r=e.createProgram();if(e.attachShader(r,t),e.attachShader(r,n),e.linkProgram(r),e.getProgramParameter(r,e.LINK_STATUS))return r;e.deleteProgram(r)}var DC=function(){function e(){s(this,e),this.gradients={},this.filters=["spotify","gryffindor","blueberry","mountaindew","yellow","pinksunset","clouds","sepia","seafoam","fire","purple","forest","western","ivy","coral","bw","bluemint","show-1","show-2","show-3","show-4","show-5","show-6"]}return i(e,[{key:"applyGrayscale",value:function(e,t){if(t){for(var n=0;n<e.length;n+=4){var r=(e[n]+e[n+1]+e[n+2])/3;e[n]=e[n+1]=e[n+2]=r}return e}var a=e.slice(0,e.length);for(n=0;n<e.length;n+=4){r=(e[n]+e[n+1]+e[n+2])/3;a[n]=a[n+1]=a[n+2]=r}return a}},{key:"getRGBColor",value:function(e){var t;return"#"===e[0]&&(e=e.substr(1)),{r:(t=parseInt(e,16))>>16,g:t>>8&255,b:255&t}}},{key:"createGradient",value:function(e,t){if(this.gradients[e+t])return this.gradients[e+t];for(var n=[],r=255,a=this.getRGBColor(e),s=this.getRGBColor(t),o=0;o<=r;o++){var i=o,u=r-i;n[o]={r:(u*a.r+i*s.r)/r,g:(u*a.g+i*s.g)/r,b:(u*a.b+i*s.b)/r}}return this.gradients[e+t]=n,n}},{key:"getColors",value:function(e){switch(e){case"spotify":return["#00007E","#6AFF7F"];case"gryffindor":return["#682218","#F8BE3D"];case"blueberry":return["#7F01D3","#01DBFE"];case"mountaindew":return["#01AB6D","#FBF019"];case"yellow":return["#FF5D77","#FBCD20"];case"pinksunset":return["#11245E","#DC4379"];case"clouds":return["#91CFF8","#FFFFFF"];case"sepia":return["#290900","#FFEFB3"];case"seafoam":return["#602457","#ACD49D"];case"fire":return["#0A0505","#F00E2E"];case"purple":return["#8682D9","#DEFCFE"];case"forest":return["#241A5F","#01AB6D"];case"western":return["#36200C","#FF9738"];case"ivy":return["#2F0781","#DFB233"];case"coral":return["#FC766A","#5B84B1"];case"bw":return["#000000","#FFFFFF"];case"bluemint":return["#00203F","#ADEFD1"];case"show-1":return["#005d37","#bfffbd"];case"show-2":return["#302082","#e9f4ff"];case"show-3":return["#8c0031","#fad833"];case"show-4":return["#1e2022","#ffe66c"];case"show-5":return["#132449","#cbe0ff"];case"show-6":return["#35112C","#FFC1E0"]}}},{key:"resetGradients",value:function(){this.gradients={}}},{key:"applyFilter",value:function(e,t,n){if(!e||"none"===e)return t;if("grayscale"===e){var r=t.data;return this.applyGrayscale(r,!0),t}if(this.filters.includes(e)){for(var a=t.data,s=this.getColors(e),o=s[0],i=s[1],u=this.createGradient(o,i),l=this.applyGrayscale(a),c=0;c<a.length;c+=4)a[c]=a[c]*(1-n)+n*u[l[c]].r,a[c+1]=a[c+1]*(1-n)+n*u[l[c+1]].g,a[c+2]=a[c+2]*(1-n)+n*u[l[c+2]].b,a[c+3]=255;return t}if(e.hasOwnProperty("colorCode")){var d=e.colorCode;if(2==d.length){var p=t.data;for(o=d[0],i=d[1],u=this.createGradient(o,i),l=this.applyGrayscale(p),c=0;c<p.length;c+=4)p[c]=p[c]*(1-n)+n*u[l[c]].r,p[c+1]=p[c+1]*(1-n)+n*u[l[c+1]].g,p[c+2]=p[c+2]*(1-n)+n*u[l[c+2]].b,p[c+3]=255;return t}}}},{key:"isValidFilter",value:function(e){if(!e||"none"===e)return!1;if("grayscale"===e)return!0;if(this.filters.includes(e))return!0;if(e.hasOwnProperty("colorCode")&&2==e.colorCode.length)return!0;return!1}}]),e}();function GC(){var e=void 0,t=0;r("webgl2")?(t=2,e=NC()):r("webgl")&&(t=1,e=SC());var n=new DC;function r(e){return!!document.createElement("canvas").getContext(e)}function s(){return(s=a(l.mark((function t(r,a,s,o){var i,u,c,d,p,h,A,g,m;return l.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:i=[0,0,0],u=[1,1,1],c=0,"grayscale"===a?c=1:n.filters.includes(a)&&(d=n.getColors(a),p=d[0],h=d[1],A=n.getRGBColor(p),g=n.getRGBColor(h),i=[A.r,A.g,A.b],u=[(g.r-A.r)/255,(g.g-A.g)/255,(g.b-A.b)/255],c=s),a.hasOwnProperty("colorCode")&&2==(m=a.colorCode).length&&(p=m[0],h=m[1],A=n.getRGBColor(p),g=n.getRGBColor(h),i=[A.r,A.g,A.b],u=[(g.r-A.r)/255,(g.g-A.g)/255,(g.b-A.b)/255],c=s),e.applyGradientFilter(r,i,u,c,o);case 6:case"end":return t.stop()}}),t)})))).apply(this,arguments)}return{backgroundBlur:function(t,n,r){e.applyBgBlur(t,n,r)},virtualBackground:function(t,n,r,a){e.applyVirtualBg(t,n,r,a)},gradientFilters:function(e,t,n,r){return s.apply(this,arguments)},getOutput:function(){return e.getOutput()},changeVersion:function(n){1==n&&(t=1,e=SC()),2==n&&(t=2,e=NC())},forceReadPixels:function(n){1==t&&e.forceReadPixels(n)}}}var LC=Yb("",null,!1);function _C(){var e=document.createElement("canvas");e.width=640,e.height=480;var t=e.getContext("2d"),n=document.createElement("canvas");n.width=640,n.height=480;var r=n.getContext("2d"),s=dC(),o=dC(),i=function(){var e=void 0,t=void 0,n=new DC;function r(){return(r=a(l.mark((function r(a,s,o,i){var u;return l.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:if(!i){r.next=19;break}if(e){r.next=12;break}return r.prev=2,e=rC(new LC),r.next=6,new e;case 6:t=r.sent,r.next=12;break;case 9:throw r.prev=9,r.t0=r.catch(2),r.t0;case 12:if(!t){r.next=17;break}return r.next=15,t.applyFilter(a,s.getImageData(0,0,s.canvas.width,s.canvas.height),o);case 15:u=r.sent,s.putImageData(u,0,0);case 17:r.next=21;break;case 19:u=n.applyFilter(a,s.getImageData(0,0,s.canvas.width,s.canvas.height),o),s.putImageData(u,0,0);case 21:case"end":return r.stop()}}),r,null,[[2,9]])})))).apply(this,arguments)}return{gradientFilters:function(e,t,n,a){return r.apply(this,arguments)},getRGBColor:function(e){return n.getRGBColor(e)},getColors:function(e){return n.getColors(e)},isValidFilter:function(e){return n.isValidFilter(e)}}}(),u=void 0,c=void 0,d=BC(),p=void 0,h=void 0,A=BC(),g="none",m=!1,f="none",I=!1,y=!0,b=!0;function C(){return(C=a(l.mark((function a(C,x,E,w,v){var B,R,S;return l.wrap((function(a){for(;;)switch(a.prev=a.next){case 0:if(g!=s.filter&&(m=!!i.isValidFilter(s.filter),g=s.filter),y&&(e.width=s.canvasWidth,e.height=s.canvasHeight,y=!1,u&&u.updateCanvas()),"webgl"!=s.postProcessingBackend){a.next=21;break}if(B=!0,R=!1,"blur"==s.effect?(c.backgroundBlur(E,w,s),R=!0):"vb"==s.effect?(S=d.getBackground(s.backgroundID,s.videoFps,s.bgFps),c.virtualBackground(E,w,S,s),R=!0):(s.hFlip&&(t.scale(-1,1),t.translate(-e.width,0)),t.clearRect(0,0,e.width,e.height),t.drawImage(E,0,0,e.width,e.height),s.hFlip&&(t.scale(-1,1),t.translate(-e.width,0)),B=!1),"none"==s.filter){a.next=18;break}if(!m){a.next=18;break}if(!s.filterWorker){a.next=15;break}return R&&t.drawImage(c.getOutput(),0,0,e.width,e.height),a.next=12,i.gradientFilters(s.filter,t,s.filterOpacity,s.filterWorker);case 12:R=!1,a.next=18;break;case 15:return a.next=17,c.gradientFilters(e,s.filter,s.filterOpacity,B);case 17:R=!0;case 18:R?C.drawImage(c.getOutput(),0,0,e.width,e.height):C.drawImage(e,0,0,e.width,e.height),a.next=27;break;case 21:if("blur"==s.effect?u.backgroundBlur(E,w,t,s):"vb"==s.effect?(S=d.getBackground(s.backgroundID,s.videoFps,s.bgFps),u.virtualBackground(E,w,S,t,s)):(s.hFlip&&(t.scale(-1,1),t.translate(-e.width,0)),t.clearRect(0,0,e.width,e.height),t.drawImage(E,0,0,e.width,e.height),s.hFlip&&(t.scale(-1,1),t.translate(-e.width,0))),"none"==s.filter){a.next=26;break}if(!m){a.next=26;break}return a.next=26,i.gradientFilters(s.filter,t,s.filterOpacity,s.filterWorker);case 26:C.drawImage(e,0,0,e.width,e.height);case 27:if(!x||!v){a.next=55;break}if(b&&(n.width=o.canvasWidth,n.height=o.canvasHeight,b=!1,p&&p.updateCanvas()),f!=o.filter&&(I=!!i.isValidFilter(o.filter),f=o.filter),"webgl"!=o.postProcessingBackend){a.next=49;break}if(B=!0,R=!1,"blur"==o.effect?(h.backgroundBlur(E,w,o),R=!0):"vb"==o.effect?(S=A.getBackground(o.backgroundID,o.videoFps,o.bgFps),h.virtualBackground(E,w,S,o),R=!0):(o.hFlip&&(r.scale(-1,1),r.translate(-n.width,0)),r.clearRect(0,0,n.width,n.height),r.drawImage(E,0,0,n.width,n.height),o.hFlip&&(r.scale(-1,1),r.translate(-n.width,0)),B=!1),"none"==o.filter){a.next=46;break}if(!I){a.next=46;break}if(!o.filterWorker){a.next=43;break}return R&&r.drawImage(h.getOutput(),0,0,n.width,n.height),a.next=40,i.gradientFilters(o.filter,r,o.filterOpacity,o.filterWorker);case 40:R=!1,a.next=46;break;case 43:return a.next=45,h.gradientFilters(n,o.filter,o.filterOpacity,B);case 45:R=!0;case 46:R?x.drawImage(h.getOutput(),0,0,n.width,n.height):x.drawImage(n,0,0,n.width,n.height),a.next=55;break;case 49:if("blur"==o.effect?p.backgroundBlur(E,w,r,o):"vb"==o.effect?(S=A.getBackground(o.backgroundID,o.videoFps,o.bgFps),p.virtualBackground(E,w,S,r,o)):r.drawImage(E,0,0,n.width,n.height),"none"==o.filter){a.next=54;break}if(!I){a.next=54;break}return a.next=54,i.gradientFilters(o.filter,r,o.filterOpacity,o.filterWorker);case 54:x.drawImage(n,0,0,n.width,n.height);case 55:case"end":return a.stop()}}),a)})))).apply(this,arguments)}return{process:function(e,t,n,r,a){return C.apply(this,arguments)},setMainStreamConfig:function(e,t){s[e]=t,"canvasWidth"==e&&(s.canvasWidth=t,y=!0),"canvasHeight"==e&&(s.canvasHeight=t,y=!0)},setPreviewStreamConfig:function(e,t){o[e]=t,"canvasWidth"==e&&(o.canvasWidth=t,b=!0),"canvasHeight"==e&&(o.canvasHeight=t,b=!0)},setBackground:function(e,t){wC(e,t).then((function(e){s.backgroundID=e.id}))},setPreviewBackground:function(e,t){wC(e,t).then((function(e){o.backgroundID=e.id}))},changeMainStreamGLVersion:function(e){c.changeVersion(e)},changePreviewStreamGLVersion:function(e){h.changeVersion(e)},getMainStreamConfig:function(){return s},getPreviewStreamConfig:function(){return o},initializeCanvasHandlers:function(){u=RC(),p=RC()},initializeWebGLHandlers:function(){c=GC(),h=GC()},forceGLReadPixels:function(e){c&&(c.forceReadPixels(e),h.forceReadPixels(e))}}}var WC=function(){function e(){s(this,e),this.inputCanvas=document.createElement("canvas"),this.inputCanvas.width=640,this.inputCanvas.height=480,this.inputCanvasCtx=this.inputCanvas.getContext("2d"),this.outputCanvas=document.createElement("canvas"),this.outputCanvas.width=640,this.outputCanvas.height=480,this.outputCanvasCtx=this.outputCanvas.getContext("2d"),this.previewOutputCanvas=document.createElement("canvas"),this.previewOutputCanvas.width=640,this.previewOutputCanvas.height=480,this.previewOutputCanvasCtx=this.previewOutputCanvas.getContext("2d")}return i(e,[{key:"setInputSize",value:function(e,t){this.inputCanvas.width=e,this.inputCanvas.height=t}},{key:"setOutputSize",value:function(e,t){this.outputCanvas.width=e,this.outputCanvas.height=t}},{key:"setPreviewSize",value:function(e,t){this.previewOutputCanvas.width=e,this.previewOutputCanvas.height=t}},{key:"setSize",value:function(e,t){this.inputCanvas.width=e,this.inputCanvas.height=t,this.outputCanvas.width=e,this.outputCanvas.height=t,this.previewOutputCanvas.width=e,this.previewOutputCanvas.height=t}},{key:"drawOnInputCanvas",value:function(e){this.inputCanvasCtx.drawImage(e,0,0,this.inputCanvas.width,this.inputCanvas.height)}}]),e}();return{Background:function(){function e(t){s(this,e),this.model=t,this.modelHandler=function(){var e={},t={},n={},r=void 0,s=void 0,o=void 0,i=void 0,u=void 0,c=void 0,d=Lb();function p(a,l){var p=l.split("+")[1];r=a,e[s=l]=a;var h=document.createElement("canvas");o=d.getInputWidth("backgroundSegmentation",p),i=d.getInputHeight("backgroundSegmentation",p),h.width=o,h.height=i,t[s]={},t[s].canvas=h,t[s].context=h.getContext("2d");var A=document.createElement("canvas");u=d.getOutputWidth("backgroundSegmentation",p),c=d.getOutputHeight("backgroundSegmentation",p),A.width=u,A.height=c,n[s]={},n[s].canvas=A,n[s].context=A.getContext("2d")}function h(){return(h=a(l.mark((function t(n,r,a){var s,o;return l.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(s="tfjs+"+n,e.hasOwnProperty(s)){t.next=7;break}return a||(a="webgl"),o=_b(n,r,a),t.next=6,o.initialize();case 6:p(o,s);case 7:return t.abrupt("return",s);case 8:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function A(){return(A=a(l.mark((function t(n,r,a){var s,o;return l.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(s="tflite+"+n,e.hasOwnProperty(s)){t.next=6;break}return o=Vb(n,r,a),t.next=5,o.initialize();case 5:p(o,s);case 6:return t.abrupt("return",s);case 7:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function g(){return(g=a(l.mark((function t(n,r,a){var s,o,i;return l.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(s="tflite+"+n+"+worker",e.hasOwnProperty(s)){t.next=9;break}return o=rC(new Hb),t.next=5,new o(n,r,a);case 5:return i=t.sent,t.next=8,i.initialize();case 8:p(i,s);case 9:return t.abrupt("return",s);case 10:case"end":return t.stop()}}),t)})))).apply(this,arguments)}function m(){return(m=a(l.mark((function e(n){var a,u;return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!r){e.next=10;break}return t[s].context.fillRect(0,0,o,i),t[s].context.drawImage(n,0,0,o,i),a=t[s].context.getImageData(0,0,o,i),e.next=6,r.getPrediction(a);case 6:return u=e.sent,e.abrupt("return",u);case 10:throw new Error("Trying to infer uninitialized model");case 11:case"end":return e.stop()}}),e)})))).apply(this,arguments)}return{loadJsModel:function(e,t,n){return h.apply(this,arguments)},loadTFLiteModel:function(e,t,n){return A.apply(this,arguments)},loadTFLiteModelOnWorker:function(e,t,n){return g.apply(this,arguments)},changeModel:function(t){if(!e.hasOwnProperty(t))throw new Error("Invalid model name");var n=e[t],a=t.split("+")[1];r=n,s=t,o=d.getInputWidth("backgroundSegmentation",a),i=d.getInputHeight("backgroundSegmentation",a),u=d.getOutputWidth("backgroundSegmentation",a),c=d.getOutputHeight("backgroundSegmentation",a)},doInference:function(e){return m.apply(this,arguments)},checkModelAvailability:function(t){return!!e.hasOwnProperty(t)}}}(),this.postProcessingHandler=_C(),this.resourceHandler=new WC,this.playing=!1,this.runOnWorker=!1,this.frameProcessed=!0,this.sendPrevious=!1,this.skipframe=!1,this.preview=!1,this.video=document.createElement("video"),this.callback=void 0,this.path=void 0,this.wasmPath=void 0,this.log=!1,this.mode="low",this.type="canvas",this.framesSkipped=0,this.time={pre:0,inference:0,post:0,total:0},this.isCanvasEnabled=!0,this.isWebGLEnabled=!0,this.canvasAttachedAt=!1,this.msPerFrame=33,this.intervalId=void 0,this.updateCanvasShape=!1,this.mainShapeParams=[],this.previewShapeParams=[]}var t,n,r,o,u,c;return i(e,[{key:"setMode",value:function(e){if(this.mode=e,this.path){if("js"==e){var t="tfjs+"+this.model;this.modelHandler.checkModelAvailability(t)&&this.modelHandler.changeModel(t)}if("lite"==e&&this.wasmPath)if(this.runOnWorker){t="tflite+"+this.model+"+worker";this.modelHandler.checkModelAvailability(t)&&this.modelHandler.changeModel(t)}else{t="tflite+"+this.model;this.modelHandler.checkModelAvailability(t)&&this.modelHandler.changeModel(t)}}return this.callback&&this.callback({mode:this.mode,type:this.type}),this}},{key:"runInferenceOnWorker",value:function(){var e="tflite+"+this.model+"+worker";return this.modelHandler.checkModelAvailability(e)&&this.modelHandler.changeModel(e),this.runOnWorker=!0,this}},{key:"setVideoFps",value:function(e){this.postProcessingHandler.setMainStreamConfig("videoFps",parseInt(e)),this.postProcessingHandler.setPreviewStreamConfig("videoFps",parseInt(e)),this.msPerFrame=parseInt(1e3/parseFloat(e));var t=this;return null!=this.intervalId&&(window.clearInterval(this.intervalId),this.intervalId=setInterval((function(){t.render()}),this.msPerFrame)),this}},{key:"enablePreview",value:function(){return this.preview=!0,this}},{key:"disablePreview",value:function(){return this.preview=!1,this}},{key:"setDisplayRatio",value:function(e,t,n,r){return this.updateCanvasShape=!0,this.mainShapeParams=[e,t,n,r],this}},{key:"setPreviewDisplayRatio",value:function(e,t,n,r){return this.updateCanvasShape=!0,this.previewShapeParams=[e,t,n,r],this}},{key:"setHFlip",value:function(e){return this.postProcessingHandler.setMainStreamConfig("hFlip",e),this}},{key:"setPreviewHFlip",value:function(e){return this.postProcessingHandler.setPreviewStreamConfig("hFlip",e),this}},{key:"setEffect",value:function(e){return this.postProcessingHandler.setMainStreamConfig("effect",e),this}},{key:"setPreviewEffect",value:function(e){return this.postProcessingHandler.setPreviewStreamConfig("effect",e),this}},{key:"setBlurIntensity",value:function(e){this.postProcessingHandler.setMainStreamConfig("blurAmount",parseFloat(e))}},{key:"setPreviewBlurIntensity",value:function(e){this.postProcessingHandler.setPreviewStreamConfig("blurAmount",parseFloat(e))}},{key:"setFilter",value:function(e){return this.postProcessingHandler.setMainStreamConfig("filter",e),this}},{key:"setPreviewFilter",value:function(e){return this.postProcessingHandler.setPreviewStreamConfig("filter",e),this}},{key:"setFilterWorker",value:function(e){this.postProcessingHandler.setMainStreamConfig("filterWorker",e)}},{key:"setPreviewFilterWorker",value:function(e){this.postProcessingHandler.setPreviewStreamConfig("filterWorker",e)}},{key:"setFilterOpacity",value:function(e){return this.postProcessingHandler.setMainStreamConfig("filterOpacity",parseFloat(e)),this}},{key:"setPreviewFilterOpacity",value:function(e){return this.postProcessingHandler.setPreviewStreamConfig("filterOpacity",parseFloat(e)),this}},{key:"setPipelineType",value:function(e){return this.postProcessingHandler.setMainStreamConfig("postProcessingBackend",e),this.type=e,this.callback&&this.callback({mode:this.mode,type:this.type}),this}},{key:"setPreviewPipelineType",value:function(e){return this.postProcessingHandler.setPreviewStreamConfig("postProcessingBackend",e),this.type=e,this.callback&&this.callback({mode:this.mode,type:this.type}),this}},{key:"disableCanvas",value:function(){return this.isCanvasEnabled=!1,this}},{key:"disableWebGL",value:function(){return this.isWebGLEnabled=!1,this}},{key:"setBackground",value:(c=a(l.mark((function e(t,n,r){return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return document.querySelector(t)&&(this.postProcessingHandler.setBackground(document.querySelector(t),n),r&&this.postProcessingHandler.setMainStreamConfig("bgFps",parseInt(r)),r&&(this.utils.canvasUtils.updateBgFps(parseInt(r)),this.utils.webglUtils.updateBgFps(parseInt(r)))),e.abrupt("return",this);case 2:case"end":return e.stop()}}),e,this)}))),function(e,t,n){return c.apply(this,arguments)})},{key:"setPreviewBackground",value:(u=a(l.mark((function e(t,n,r){return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return document.querySelector(t)&&(this.postProcessingHandler.setPreviewBackground(document.querySelector(t),n),r&&this.postProcessingHandler.setPreviewStreamConfig("bgFps",parseInt(r))),e.abrupt("return",this);case 2:case"end":return e.stop()}}),e,this)}))),function(e,t,n){return u.apply(this,arguments)})},{key:"setBgFps",value:function(e){this.postProcessingHandler.setMainStreamConfig("bgFps",parseInt(e))}},{key:"setPreviewBgFps",value:function(e){this.postProcessingHandler.setPreviewStreamConfig("bgFps",parseInt(e))}},{key:"setBgFlip",value:function(e){return this.postProcessingHandler.setMainStreamConfig("bgFlip",e),this}},{key:"setPreviewBgFlip",value:function(e){return this.postProcessingHandler.setPreviewStreamConfig("bgFlip",e),this}},{key:"setCallback",value:function(e){return this.callback=e,this}},{key:"setModelPath",value:function(e){return this.path=e,this}},{key:"setWasmPath",value:function(e){return this.wasmPath=e,this}},{key:"setVideo",value:function(e){if(e)return this.video.srcObject=e,this.video.autoplay=!0,this;throw"Video stream is invalid"}},{key:"setAudio",value:function(e){return e&&(this.audio=e),this}},{key:"enableLogs",value:function(){return this.log=!0,this}},{key:"attachCanvas",value:function(e,t,n){this.canvasAttachedAt&&document.querySelector(this.canvasAttachedAt+" canvas")&&document.querySelector(this.canvasAttachedAt+" canvas").remove();var r=document.querySelector(e);this.canvasAttachedAt=e,r.append(this.resourceHandler.outputCanvas)}},{key:"attachPreviewCanvas",value:function(e,t,n){this.canvasAttachedAt&&document.querySelector(this.canvasAttachedAt+" canvas")&&document.querySelector(this.canvasAttachedAt+" canvas").remove();var r=document.querySelector(e);this.canvasAttachedAt=e,r.append(this.resourceHandler.previewOutputCanvas)}},{key:"getStream",value:function(){var e=[];return this.audio&&(e=e.concat(this.audio)),e=e.concat(this.resourceHandler.outputCanvas.captureStream(30).getTracks()),new MediaStream(e)}},{key:"getPreviewStream",value:function(){var e=[];return e=e.concat(this.resourceHandler.previewOutputCanvas.captureStream(30).getTracks()),new MediaStream(e)}},{key:"build",value:(o=a(l.mark((function e(t,n){var r;return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!n){e.next=5;break}return e.next=3,this.modelHandler.loadJsModel(this.model,this.path,"webgl");case 3:r=e.sent,this.modelHandler.changeModel(r);case 5:if(!t){e.next=17;break}if(!this.runOnWorker){e.next=13;break}return e.next=9,this.modelHandler.loadTFLiteModelOnWorker(this.model,this.path,this.wasmPath);case 9:r=e.sent,this.modelHandler.changeModel(r),e.next=17;break;case 13:return e.next=15,this.modelHandler.loadTFLiteModel(this.model,this.path,this.wasmPath);case 15:r=e.sent,this.modelHandler.changeModel(r);case 17:return this.isCanvasEnabled&&this.postProcessingHandler.initializeCanvasHandlers(),this.isWebGLEnabled&&this.postProcessingHandler.initializeWebGLHandlers(),e.abrupt("return",this);case 20:case"end":return e.stop()}}),e,this)}))),function(e,t){return o.apply(this,arguments)})},{key:"stop",value:function(){this.playing=!1,window.clearInterval(this.intervalId),this.callback&&this.callback({mode:this.mode,type:this.type})}},{key:"start",value:(r=a(l.mark((function e(){var t;return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.playing||!this.video.srcObject){e.next=9;break}this.playing=!0,t=this,this.video.paused&&this.video.play(),this.intervalId=setInterval((function(){t.render()}),this.msPerFrame),this.video.paused&&this.video.play(),this.callback&&this.callback({mode:this.mode,type:this.type}),e.next=11;break;case 9:if(this.video.srcObject){e.next=11;break}throw"Video stream not set.";case 11:case"end":return e.stop()}}),e,this)}))),function(){return r.apply(this,arguments)})},{key:"updateMainCanvasShape",value:function(e,t,n,r){if(n&&r)this.resourceHandler.setInputSize(parseInt(n),parseInt(r)),this.resourceHandler.setOutputSize(parseInt(n),parseInt(r)),this.postProcessingHandler.setMainStreamConfig("canvasWidth",parseInt(n)),this.postProcessingHandler.setMainStreamConfig("canvasHeight",parseInt(r));else{var a=parseInt(640/e*t);this.resourceHandler.setInputSize(640,a),this.resourceHandler.setOutputSize(640,a),this.postProcessingHandler.setMainStreamConfig("canvasWidth",parseInt(640)),this.postProcessingHandler.setMainStreamConfig("canvasHeight",parseInt(a))}}},{key:"updatePreviewCanvasShape",value:function(e,t,n,r){if(n&&r)this.resourceHandler.setInputSize(parseInt(n),parseInt(r)),this.resourceHandler.setPreviewSize(parseInt(n),parseInt(r)),this.postProcessingHandler.setPreviewStreamConfig("canvasWidth",parseInt(n)),this.postProcessingHandler.setPreviewStreamConfig("canvasHeight",parseInt(r));else{var a=parseInt(640/e*t);this.resourceHandler.setInputSize(640,a),this.resourceHandler.setPreviewSize(640,a),this.postProcessingHandler.setPreviewStreamConfig("canvasWidth",parseInt(640)),this.postProcessingHandler.setPreviewStreamConfig("canvasHeight",parseInt(a))}}},{key:"render",value:(n=a(l.mark((function e(){var t,n;return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this.frameProcessed){e.next=11;break}if(this.frameProcessed=!1,!this.playing){e.next=9;break}return t=performance.now(),e.next=6,this.processPipeline();case 6:n=performance.now(),this.time.total=n-t,this.callback&&this.callback(this.time);case 9:this.frameProcessed=!0,this.updateCanvasShape&&(4==this.mainShapeParams.length&&(this.updateMainCanvasShape(this.mainShapeParams[0],this.mainShapeParams[1],this.mainShapeParams[2],this.mainShapeParams[3]),this.mainShapeParams=[]),4==this.previewShapeParams.length&&(this.updatePreviewCanvasShape(this.previewShapeParams[0],this.previewShapeParams[1],this.previewShapeParams[2],this.previewShapeParams[3]),this.previewShapeParams=[]),this.updateCanvasShape=!1);case 11:case"end":return e.stop()}}),e,this)}))),function(){return n.apply(this,arguments)})},{key:"processPipeline",value:(t=a(l.mark((function e(){var t,n,r,a,s,o;return l.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=performance.now(),this.resourceHandler.drawOnInputCanvas(this.video),r=this.postProcessingHandler.getMainStreamConfig(),a=this.postProcessingHandler.getPreviewStreamConfig(),"blur"!=r.effect&&"vb"!=r.effect&&(!this.preview||"blur"!=a.effect&&"vb"!=a.effect)){e.next=8;break}return e.next=7,this.modelHandler.doInference(this.resourceHandler.inputCanvas);case 7:n=e.sent;case 8:return s=performance.now(),e.next=11,this.postProcessingHandler.process(this.resourceHandler.outputCanvasCtx,this.resourceHandler.previewOutputCanvasCtx,this.resourceHandler.inputCanvas,n,this.preview);case 11:o=performance.now(),this.time.inference=s-t,this.time.post=o-s;case 14:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})}]),e}()}}));
